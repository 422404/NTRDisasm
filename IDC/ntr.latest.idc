//
// +-------------------------------------------------------------------------+
// |   This file has been generated by The Interactive Disassembler (IDA)    |
// |           Copyright (c) 2014 Hex-Rays, <support@hex-rays.com>           |
// |                      License info: 48-3057-7374-2C                      |
// |     Zhou Tao, Jiangsu Australia Sinuo Network Technology Co., Ltd.      |
// +-------------------------------------------------------------------------+
//
//
//      This file should be used in the following way:
//         - reload executable into IDA with using switch -c
//         - use File, Load IDC file and load this file.
//
//      NOTE: This file doesn't contain all information from the database.
//

#define UNLOADED_FILE   1
#include <idc.idc>

static main(void)
{
  // set 'loading idc file' mode
  SetCharPrm(INF_GENFLAGS, INFFL_LOADIDC|GetCharPrm(INF_GENFLAGS));
  GenInfo();            // various settings
  Segments();           // segmentation
  Enums();              // enumerations
  Structures();         // structure types
  Patches();            // manual patches
  SegRegs();            // segment register values
  Bytes();              // individual bytes (code,data)
  Functions();          // function definitions
  // clear 'loading idc file' mode
  SetCharPrm(INF_GENFLAGS, ~INFFL_LOADIDC&GetCharPrm(INF_GENFLAGS));
}

//------------------------------------------------------------------------
// General information

static GenInfo(void) {

        DeleteAll();    // purge database
	SetPrcsr("ARM");
	SetCharPrm(INF_COMPILER, 6);
	StringStp(0xA);
	Tabs(1);
	Comments(0);
	Voids(0);
	XrefShow(2);
	AutoShow(1);
	Indent(16);
	CmtIndent(40);
	TailDepth(0x10);
	LoadTil("armv12");
}

//------------------------------------------------------------------------
// Information about segmentation

static Segments(void) {
	SetSelector(0X1,0);
	;
	SegCreate(0X100100,0X10B560,0,1,1,2);
	SegRename(0X100100,"ROM");
	SegClass (0X100100,"CODE");
	SegDefReg(0x100100,"T",0x0);
	SegDefReg(0x100100,"DS",0x0);
	SetSegmentType(0X100100,2);
	LowVoids(0x100100);
	HighVoids(0x10B560);
}

static Enums_0(id) {

	id = AddEnum(-1,"FS_pathType",0x1100000);
	AddConstEx(id,"PATH_INVALID",	0,	-1);
	AddConstEx(id,"PATH_EMPTY",	0X1,	-1);
	AddConstEx(id,"PATH_BINARY",	0X2,	-1);
	AddConstEx(id,"PATH_CHAR",	0X3,	-1);
	AddConstEx(id,"PATH_WCHAR",	0X4,	-1);
	id = AddEnum(-1,"MemOp",0x1100000);
	AddConstEx(id,"MEMOP_FREE",	0X1,	-1);
	AddConstEx(id,"MEMOP_ALLOC",	0X3,	-1);
	AddConstEx(id,"MEMOP_MAP",	0X4,	-1);
	AddConstEx(id,"MEMOP_UNMAP",	0X5,	-1);
	AddConstEx(id,"MEMOP_PROT",	0X6,	-1);
	AddConstEx(id,"MEMOP_ALLOC_LINEAR",	0X10003,	-1);
	id = AddEnum(-1,"MemPerm",0x1100000);
	AddConstEx(id,"MEMPERM_READ",	0X1,	-1);
	AddConstEx(id,"MEMPERM_WRITE",	0X2,	-1);
	AddConstEx(id,"MEMPERM_EXECUTE",	0X4,	-1);
	AddConstEx(id,"MEMPERM_DONTCARE",	0X10000000,	-1);
	AddConstEx(id,"MEMPERM_MAX",	0XFFFFFFFF,	-1);
	return id;
}

//------------------------------------------------------------------------
// Information about enum types

static Enums(void) {
        auto id;
        BeginTypeUpdating(UTP_ENUM);
	id = Enums_0(id);
        EndTypeUpdating(UTP_ENUM);
}

static Structures_0(id) {
        auto mid;

	id = AddStrucEx(-1,"RT_LOCK",0);
	id = AddStrucEx(-1,"FS_archive",0);
	id = AddStrucEx(-1,"FS_path",0);
	
	id = GetStrucIdByName("RT_LOCK");
	mid = AddStrucMember(id,"value",	0,	0x20000400,	-1,	4);
	
	id = GetStrucIdByName("FS_path");
	mid = AddStrucMember(id,"type",	0,	0x28800400,	GetEnum("FS_pathType"),	4);
	mid = AddStrucMember(id,"size",	0X4,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"data",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	
	id = GetStrucIdByName("FS_archive");
	mid = AddStrucMember(id,"id",	0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"lowPath",	0X4,	0x60000400,	GetStrucIdByName("FS_path"),	12);
	mid = AddStrucMember(id,"handleLow",	0X10,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"handleHigh",	0X14,	0x20000400,	-1,	4);
	return id;
}

//------------------------------------------------------------------------
// Information about structure types

static Structures(void) {
        auto id;
        BeginTypeUpdating(UTP_STRUCT);
	id = Structures_0(id);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_0(void) {
        auto x;
#define id x

	ExtLinA		(0X100100,	0,	"; File Name   : D:\\STATION\\NTR\\ntr.bin");
	ExtLinA		(0X100100,	1,	"; Format      : Binary file");
	ExtLinA		(0X100100,	2,	"; Base Address: 0000h Range: 100100h - 10B560h Loaded length: B460h");
	MakeCode	(0X100100);
	MakeName	(0X100100,	"ntrBase");
	MakeCode	(0X100104);
	MakeName	(0X100104,	"nsDbgPrint");
	MakeName	(0X10010C,	"nsDbgPrint_0");
	MakeDword	(0X100110);
	MakeDword	(0X100114);
	MakeName	(0X100114,	"nsDbgPrint_1");
	MakeCode	(0X100118);
	MakeName	(0X10011C,	"nsDbgPrint_2");
	MakeName	(0X100124,	"ntrEntry");
	MakeCode	(x=0X100130);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X100134);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10013C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X100140);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X100174);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X100178);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X10018C,	"reg");
	MakeArray	(0X1001A4,	0XC);
	MakeName	(0X1001A4,	"nsDbgPrint_3");
	MakeByte	(0X1001B1);
	MakeArray	(0X1001B1,	0X3);
	MakeDword	(x=0X1001B4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1001B8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1001BC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X1001C0);
	MakeArray	(0X1001C4,	0XC);
	MakeName	(0X1001C4,	"nsDbgPrint_4");
	MakeCode	(0X1001D0);
	MakeName	(0X1001D0,	"paint_pixel");
	MakeCode	(x=0X1001E4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1001F4);
	OpStkvar	(x,	1);
	MakeCode	(0X1001FC);
	MakeName	(0X1001FC,	"paint_square");
	MakeCode	(x=0X100204);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100208);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10020C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100238);
	OpStkvar	(x,	1);
	MakeComm	(0X10023C,	"y");
	MakeComm	(0X100240,	"screen");
	MakeCode	(x=0X100240);
	OpStkvar	(x,	1);
	MakeComm	(0X100244,	"b");
	MakeCode	(x=0X100244);
	OpStkvar	(x,	1);
	MakeComm	(0X100248,	"x");
	MakeComm	(0X10024C,	"r");
	MakeComm	(0X100250,	"g");
	MakeCode	(0X100260);
	MakeCode	(0X100268);
	MakeCode	(0X100270);
	MakeName	(0X100270,	"blank");
	MakeComm	(0X100274,	"b");
	MakeCode	(x=0X100278);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X100288,	"h");
	MakeCode	(x=0X100288);
	OpStkvar	(x,	1);
	MakeComm	(0X100290,	"r");
	MakeComm	(0X100294,	"screen");
	MakeCode	(x=0X100294);
	OpStkvar	(x,	1);
	MakeComm	(0X10029C,	"g");
	MakeComm	(0X1002B4,	"screen");
	MakeCode	(x=0X1002B4);
	OpStkvar	(x,	1);
	MakeComm	(0X1002B8,	"h");
	MakeCode	(x=0X1002B8);
	OpStkvar	(x,	1);
	MakeComm	(0X1002BC,	"x");
	MakeComm	(0X1002C0,	"y");
	MakeComm	(0X1002C4,	"r");
	MakeComm	(0X1002C8,	"g");
	MakeDword	(x=0X1002D8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X1002DC);
	MakeName	(0X1002DC,	"paint_letter");
	MakeCode	(x=0X1002E8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1002F4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1002F8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100304);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100308);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X100328);
	OpStkvar	(x,	1);
	MakeComm	(0X10032C,	"y");
	MakeComm	(0X100330,	"b");
	MakeCode	(x=0X100330);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100334);
	OpStkvar	(x,	1);
	MakeComm	(0X100338,	"x");
	MakeComm	(0X10033C,	"screen");
	MakeCode	(x=0X10033C);
	OpStkvar	(x,	1);
	MakeComm	(0X100340,	"r");
	MakeComm	(0X100344,	"g");
	MakeCode	(x=0X100344);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100348);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100350);
	OpStkvar	(x,	1);
	MakeDword	(x=0X100374);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X100378);
	MakeName	(0X100378,	"paint_word");
	MakeComm	(0X10037C,	"g");
	MakeCode	(x=0X100384);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100388);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1003A0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1003B4);
	OpStkvar	(x,	1);
	MakeComm	(0X1003C0,	"screen");
	MakeCode	(x=0X1003C0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1003C4);
	OpStkvar	(x,	1);
	MakeComm	(0X1003CC,	"letter");
	MakeComm	(0X1003D0,	"x");
	MakeComm	(0X1003D4,	"y");
	MakeComm	(0X1003DC,	"r");
	MakeCode	(0X1003F0);
	MakeCode	(0X1003F8);
	MakeName	(0X1003F8,	"print");
	MakeCode	(x=0X100410);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X100414);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100418);
	OpStkvar	(x,	1);
	MakeComm	(0X10041C,	"y");
	MakeComm	(0X100420,	"ys");
	MakeComm	(0X100424,	"xs");
	MakeComm	(0X100428,	"x");
	MakeComm	(0X100434,	"word");
	MakeComm	(0X100438,	"screen");
	MakeCode	(x=0X100438);
	OpStkvar	(x,	1);
	MakeComm	(0X10043C,	"x");
	MakeComm	(0X100440,	"y");
	MakeComm	(0X100444,	"r");
	MakeComm	(0X100448,	"g");
	MakeCode	(x=0X100448);
	OpStkvar	(x,	1);
	MakeComm	(0X10044C,	"b");
	MakeCode	(x=0X10044C);
	OpStkvar	(x,	1);
	MakeComm	(0X100458,	"g");
	MakeCode	(x=0X100458);
	OpStkvar	(x,	1);
	MakeComm	(0X10045C,	"screen");
	MakeCode	(x=0X10045C);
	OpStkvar	(x,	1);
	MakeComm	(0X100460,	"b");
	MakeCode	(x=0X100460);
	OpStkvar	(x,	1);
	MakeComm	(0X100464,	"word");
	MakeComm	(0X100468,	"x");
	MakeComm	(0X10046C,	"y");
	MakeComm	(0X100470,	"r");
	MakeDword	(x=0X100480);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X100484);
	MakeCode	(0X1004CC);
	MakeCode	(0X100518);
	MakeDword	(0X100564);
	MakeCode	(0X100568);
	MakeDword	(0X1005C0);
	MakeDword	(0X1005C4);
	MakeCode	(0X1005C8);
	MakeName	(0X1005C8,	"ACU_GetWifiStatus");
	MakeComm	(0X1005E4,	"session");
	MakeCode	(0X100600);
	MakeName	(0X100600,	"ACU_WaitInternetConnection");
	MakeComm	(0X100604,	"handleptr");
	MakeComm	(0X100608,	"out");
	MakeCode	(x=0X10060C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X100610);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100614);
	OpStkvar	(x,	1);
	MakeComm	(0X100624,	"servhandle");
	MakeCode	(x=0X100624);
	OpStkvar	(x,	1);
	MakeComm	(0X100628,	"out");
	MakeCode	(x=0X100628);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100638);
	OpStkvar	(x,	1);
	MakeComm	(0X100644,	"handle");
	MakeCode	(x=0X100644);
	OpStkvar	(x,	1);
	MakeDword	(x=0X100658);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeName	(0X100658,	"server");
	MakeCode	(x=0X10065C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeName	(0X10065C,	"c_entry");
	MakeComm	(0X100660,	"argv");
	MakeComm	(0X100664,	"argc");
	MakeComm	(0X10066C,	"envp");
	MakeDword	(x=0X100680);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X100684);
	MakeName	(0X100684,	"_DYNAMIC");
	MakeCode	(0X100688);
	MakeName	(0X100688,	"IRQHandler");
	MakeCode	(0X10068C);
	MakeName	(0X10068C,	"FSUSER_Initialize");
	MakeComm	(0X1006A8,	"session");
	MakeDword	(0X1006BC);
	MakeCode	(0X1006C0);
	MakeName	(0X1006C0,	"FSUSER_OpenFile");
	MakeCode	(x=0X1006CC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1006D0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1006EC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1006F8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100704);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100708);
	OpHex		(x,	1);
	MakeCode	(x=0X100714);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100720);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100728);
	OpStkvar	(x,	1);
	MakeComm	(0X100730,	"session");
	MakeDword	(0X10075C);
	MakeCode	(0X100760);
	MakeName	(0X100760,	"FSUSER_OpenFileDirectly");
	MakeCode	(x=0X10076C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100770);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10077C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100790);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10079C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1007AC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1007B0);
	OpHex		(x,	1);
	MakeCode	(x=0X1007BC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1007C0);
	OpHex		(x,	1);
	MakeCode	(x=0X1007C8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1007CC);
	OpHex		(x,	1);
	MakeCode	(x=0X1007D4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1007E0);
	OpStkvar	(x,	1);
	MakeComm	(0X1007F0,	"session");
	MakeDword	(0X10081C);
	MakeCode	(0X100820);
	MakeName	(0X100820,	"FSUSER_OpenArchive");
	MakeCode	(x=0X100864);
	OpHex		(x,	1);
	MakeComm	(0X100874,	"session");
	MakeCode	(0X100898);
	MakeDword	(0X1008A0);
	MakeCode	(0X1008A4);
	MakeName	(0X1008A4,	"FSUSER_OpenDirectory");
	MakeCode	(x=0X1008B0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1008B4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1008CC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1008D8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1008E4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1008E8);
	OpHex		(x,	1);
	MakeCode	(x=0X1008F4);
	OpStkvar	(x,	1);
	MakeComm	(0X100900,	"session");
	MakeDword	(0X10092C);
	MakeCode	(0X100930);
	MakeName	(0X100930,	"FSUSER_CloseArchive");
	MakeComm	(0X100964,	"session");
	MakeCode	(0X100978);
	MakeDword	(0X100980);
	MakeCode	(0X100984);
	MakeName	(0X100984,	"FSFILE_Close");
	MakeComm	(0X10099C,	"session");
	MakeDword	(0X1009B0);
	MakeCode	(0X1009B4);
	MakeName	(0X1009B4,	"FSFILE_Read");
	MakeCode	(x=0X1009C0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1009E0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1009E4);
	OpHex		(x,	1);
	MakeComm	(0X1009F8,	"session");
	MakeDword	(0X100A1C);
	MakeCode	(0X100A20);
	MakeName	(0X100A20,	"FSFILE_Write");
	MakeCode	(x=0X100A2C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100A44);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100A54);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100A58);
	OpHex		(x,	1);
	MakeComm	(0X100A6C,	"session");
	MakeDword	(0X100A90);
	MakeCode	(0X100A94);
	MakeName	(0X100A94,	"FSFILE_GetSize");
	MakeComm	(0X100AB0,	"session");
	MakeDword	(0X100AD4);
	MakeCode	(0X100AD8);
	MakeName	(0X100AD8,	"FSFILE_SetSize");
	MakeComm	(0X100AFC,	"session");
	MakeDword	(0X100B10);
	MakeCode	(0X100B14);
	MakeName	(0X100B14,	"FSDIR_Read");
	MakeCode	(x=0X100B3C);
	OpHex		(x,	1);
	MakeComm	(0X100B50,	"session");
	MakeDword	(0X100B74);
	MakeCode	(0X100B78);
	MakeName	(0X100B78,	"FSDIR_Close");
	MakeComm	(0X100B90,	"session");
	MakeDword	(0X100BA4);
	MakeCode	(0X100BA8);
	MakeName	(0X100BA8,	"srvGetSessionHandle");
	MakeDword	(0X100BB0);
	MakeCode	(0X100BB4);
	MakeCode	(x=0X100BB8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100BBC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100BC0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X100BE8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X100C08);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X100C0C);
	MakeDword	(x=0X100C10);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X100C14);
	MakeCode	(x=0X100C20);
	OpHex		(x,	1);
	MakeCode	(0X100C28);
	MakeCode	(x=0X100C40);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X100C50);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X100C74);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(0X100C88);
	MakeDword	(0X100C8C);
	MakeDword	(0X100C90);
	MakeDword	(x=0X100C94);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X100C98);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X100C9C);
	MakeDword	(0X100CA0);
	MakeDword	(0X100CA4);
	MakeCode	(0X100CA8);
	MakeCode	(x=0X100CB0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X100CB4);
	OpStkvar	(x,	1);
	MakeComm	(0X100CB8,	"process");
	MakeCode	(x=0X100CB8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100CBC);
	OpOff		(x,	1,	0X10ACF4);
	OpOff		(x,	129,	0X10ACF4);
	MakeCode	(x=0X100CC0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X100CC4,	"processId");
	MakeCode	(x=0X100CD0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100CD4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100CE0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100CE8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100CFC);
	OpOff		(x,	1,	0X10ACF4);
	OpOff		(x,	129,	0X10ACF4);
	MakeCode	(x=0X100D00);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X100D0C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X100D18);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X100D2C);
	MakeCode	(x=0X100D3C);
	OpOff		(x,	1,	0X10ACF4);
	OpOff		(x,	129,	0X10ACF4);
	MakeCode	(x=0X100D40);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X100D4C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X100D58);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X100D68);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X100D78);
	MakeCode	(x=0X100D88);
	OpOff		(x,	1,	0X10ACF4);
	OpOff		(x,	129,	0X10ACF4);
	MakeCode	(x=0X100D8C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X100D98);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X100DA4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X100DB0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X100DC4);
	MakeCode	(x=0X100DD4);
	OpOff		(x,	1,	0X10ACF4);
	OpOff		(x,	129,	0X10ACF4);
	MakeCode	(x=0X100DD8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X100DE4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X100DF0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X100DFC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X100E0C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X100E14,	"handle");
	MakeCode	(x=0X100E14);
	OpStkvar	(x,	1);
	MakeDword	(x=0X100E28);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X100E2C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X100E30);
	MakeDword	(0X100E34);
	MakeDword	(x=0X100E38);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X100E3C);
	MakeDword	(x=0X100E40);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X100E44);
	MakeDword	(x=0X100E48);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X100E4C);
	MakeDword	(0X100E50);
	MakeDword	(0X100E54);
	MakeDword	(0X100E58);
	MakeDword	(x=0X100E5C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X100E60);
	MakeDword	(0X100E64);
	MakeDword	(0X100E68);
	MakeDword	(0X100E6C);
	MakeDword	(0X100E70);
	MakeDword	(0X100E74);
	MakeDword	(0X100E78);
	MakeDword	(0X100E7C);
	MakeDword	(0X100E80);
	MakeDword	(0X100E84);
	MakeDword	(0X100E88);
	MakeDword	(0X100E8C);
	MakeDword	(0X100E90);
	MakeDword	(x=0X100E94);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X100E98);
	MakeCode	(x=0X100EA0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X100EB4);
	OpOff		(x,	1,	0X1085D4);
	OpOff		(x,	129,	0X1085D4);
	MakeComm	(0X100EB8,	"ns");
	MakeCode	(x=0X100ED0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X100ED8);
	OpOff		(x,	1,	0X1085D4);
	OpOff		(x,	129,	0X1085D4);
	MakeDword	(x=0X100EE4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X100EE8);
	MakeName	(0X100EE8,	"ns");
	MakeCode	(0X100EEC);
	MakeDword	(0X100F18);
	MakeDword	(0X100F1C);
	MakeCode	(x=0X100F20);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X100F30,	"handle");
	MakeDword	(x=0X100F38);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X100F3C);
	MakeDword	(0X100F60);
	MakeCode	(0X100F64);
	MakeComm	(0X100F70,	"archive");
	MakeCode	(x=0X100F74);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100F7C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100F84);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100FA0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100FAC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100FB0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100FB4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100FB8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100FC0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100FCC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X100FDC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X100FE4,	"handle");
	MakeCode	(x=0X100FE4);
	OpOff		(x,	1,	0X10ACF4);
	OpOff		(x,	129,	0X10ACF4);
	MakeComm	(0X100FE8,	"out");
	MakeCode	(x=0X100FE8);
	OpStkvar	(x,	1);
	MakeCode	(0X10100C);
	MakeCode	(x=0X101018);
	OpStkvar	(x,	1);
	MakeComm	(0X10101C,	"buffer");
	MakeComm	(0X101020,	"handle");
	MakeCode	(x=0X101020);
	OpStkvar	(x,	1);
	MakeComm	(0X101024,	"entriesRead");
	MakeCode	(x=0X101024);
	OpStkvar	(x,	1);
	MakeComm	(0X101028,	"entrycount");
	MakeCode	(x=0X10102C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X101034);
	OpStkvar	(x,	1);
	MakeCode	(x=0X101040);
	OpStkvar	(x,	1);
	MakeCode	(0X101088);
	MakeCode	(x=0X10109C);
	OpStkvar	(x,	1);
	MakeComm	(0X1010A0,	"title");
	MakeComm	(0X1010A4,	"entryCount");
	MakeComm	(0X1010A8,	"captions");
	MakeCode	(x=0X1010C4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1010D0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1010D8);
	OpStkvar	(x,	1);
	MakeComm	(0X1010F0,	"handle");
	MakeCode	(x=0X1010F0);
	OpStkvar	(x,	1);
	MakeDword	(x=0X10110C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X101110);
	MakeDword	(0X101114);
	MakeDword	(x=0X101118);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X10111C);
	MakeCode	(x=0X10113C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X101154);
	OpOff		(x,	1,	0X10ACF4);
	OpOff		(x,	129,	0X10ACF4);
	MakeCode	(x=0X101184);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1011A0);
	OpOff		(x,	1,	0X10ACF4);
	OpOff		(x,	129,	0X10ACF4);
	MakeDword	(0X1011B4);
	MakeDword	(x=0X1011B8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X1011BC);
	MakeDword	(0X1011C0);
	MakeDword	(x=0X1011C4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0X1011C8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X1011E0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X1011E4);
	MakeComm	(0X1011E8,	"archive");
	MakeCode	(x=0X1011F8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1011FC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X101204);
	OpStkvar	(x,	1);
	MakeCode	(x=0X101208);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10120C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X101210);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10121C);
	OpStkvar	(x,	1);
	MakeComm	(0X10122C,	"openflags");
	MakeCode	(x=0X10122C);
	OpStkvar	(x,	1);
	MakeComm	(0X101230,	"attributes");
	MakeCode	(x=0X101230);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10123C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X101244,	"handle");
	MakeCode	(x=0X101244);
	OpOff		(x,	1,	0X10ACF4);
	OpOff		(x,	129,	0X10ACF4);
	MakeComm	(0X101248,	"out");
	MakeCode	(x=0X101248);
	OpStkvar	(x,	1);
	MakeComm	(0X10125C,	"handle");
	MakeCode	(x=0X10125C);
	OpStkvar	(x,	1);
	MakeDword	(x=0X101270);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X101274);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X101278);
	MakeCode	(x=0X10127C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X101280,	"callbackAddr");
	MakeCode	(x=0X101280);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X101284,	"hook");
	MakeCode	(x=0X101284);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X101288,	"funcAddr");
	MakeComm	(0X101290,	"hook");
	MakeCode	(x=0X101290);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X101298);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X10129C,	"callbackAddr");
	MakeCode	(x=0X10129C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X1012A0,	"hook");
	MakeCode	(x=0X1012A0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X1012A4,	"funcAddr");
	MakeComm	(0X1012AC,	"hook");
	MakeCode	(x=0X1012AC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1012B4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1012B8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1012BC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1012D4);
	OpOff		(x,	1,	0X10ACF4);
	OpOff		(x,	129,	0X10ACF4);
	MakeCode	(x=0X1012E8);
	OpOff		(x,	1,	0X108600);
	OpOff		(x,	129,	0X108600);
	MakeCode	(x=0X1012EC);
	OpOff		(x,	1,	0X108600);
	OpOff		(x,	129,	0X108600);
	MakeCode	(x=0X1012F4);
	OpOff		(x,	1,	0X108600);
	OpOff		(x,	129,	0X108600);
	MakeCode	(x=0X101310);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X101328);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X10133C,	"ns");
	MakeCode	(x=0X101350);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X101354);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X101358);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X101360);
	OpOff		(x,	1,	0X1085D4);
	OpOff		(x,	129,	0X1085D4);
	MakeComm	(0X10139C,	"ns");
	MakeDword	(x=0X1013B0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1013B4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeName	(0X1013B4,	"callbackAddr");
	MakeDword	(x=0X1013B8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeName	(0X1013B8,	"hook");
	MakeDword	(x=0X1013BC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1013C0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1013C4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1013C8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1013CC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1013D0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X1013D4);
	MakeDword	(0X1013D8);
	MakeDword	(x=0X1013DC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1013E0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X1013E4);
	MakeDword	(x=0X1013E8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1013EC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X1013F0);
	MakeCode	(0X1013F4);
	MakeCode	(0X101458);
	MakeCode	(x=0X10145C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X101460);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X101468,	"addr");
	MakeComm	(0X10146C,	"size");
	MakeComm	(0X101484,	"op");
	MakeCode	(x=0X101484);
	OpStkvar	(x,	1);
	MakeComm	(0X101488,	"perm");
	MakeCode	(x=0X101488);
	OpStkvar	(x,	1);
	MakeComm	(0X10148C,	"addr0");
	MakeComm	(0X101490,	"addr_out");
	MakeCode	(x=0X101490);
	OpStkvar	(x,	1);
	MakeComm	(0X101494,	"addr1");
	MakeComm	(0X101498,	"size");
	MakeCode	(x=0X1014A8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X1014B4);
	MakeDword	(x=0X1014D4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1014D8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X1014DC);
	MakeCode	(x=0X1014E8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1014F4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1014F8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1014FC);
	OpOff		(x,	1,	0X100104);
	OpOff		(x,	129,	0X100104);
	MakeComm	(0X101500,	"size");
	MakeCode	(x=0X101500);
	OpOff		(x,	1,	0X100104);
	OpOff		(x,	129,	0X100104);
	MakeCode	(x=0X10150C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X101514);
	OpStkvar	(x,	1);
	MakeCode	(x=0X101520);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X101524,	"processId");
	MakeCode	(x=0X101538);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10153C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X101540);
	OpStkvar	(x,	1);
	MakeComm	(0X10154C,	"handle");
	MakeCode	(x=0X10154C);
	OpStkvar	(x,	1);
	MakeDword	(x=0X10155C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X101560);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X101564);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X101568);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X10156C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X101570);
	MakeComm	(0X101578,	"ns");
	MakeDword	(0X101590);
	MakeCode	(0X101594);
	MakeComm	(0X1015A4,	"ns");
	MakeDword	(0X1015BC);
	MakeCode	(0X1015C0);
	MakeDword	(0X1015D4);
	MakeComm	(0X1015D8,	"thread_priority");
	MakeCode	(0X1015D8);
	MakeName	(0X1015D8,	"main");
	MakeCode	(x=0X1015DC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1015E0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1015F0);
	OpOff		(x,	1,	0X10ACF4);
	OpOff		(x,	129,	0X10ACF4);
	MakeCode	(x=0X101608);
	OpOff		(x,	1,	0X10ACF4);
	OpOff		(x,	129,	0X10ACF4);
	MakeCode	(x=0X101610);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10161C);
	OpOff		(x,	1,	0X10ACF4);
	OpOff		(x,	129,	0X10ACF4);
	MakeCode	(x=0X101630);
	OpOff		(x,	1,	0X108600);
	OpOff		(x,	129,	0X108600);
	MakeCode	(x=0X101634);
	OpOff		(x,	1,	0X108600);
	OpOff		(x,	129,	0X108600);
	MakeCode	(x=0X10163C);
	OpOff		(x,	1,	0X108600);
	OpOff		(x,	129,	0X108600);
	MakeCode	(x=0X101654);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X101674);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10168C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1016D4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X1016DC,	"ns");
	MakeCode	(0X1016EC);
	MakeCode	(x=0X1016F0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1016FC);
	OpOff		(x,	1,	0X10ACF4);
	OpOff		(x,	129,	0X10ACF4);
	MakeCode	(0X101720);
	MakeCode	(x=0X101728);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X101738,	"size");
	MakeComm	(0X101744,	"ptr");
	MakeComm	(0X101758,	"dst");
	MakeComm	(0X10175C,	"buf");
	MakeComm	(0X101764,	"size");
	MakeComm	(0X101768,	"ptr");
	MakeCode	(x=0X101780);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10179C);
	OpOff		(x,	1,	0X10ACF4);
	OpOff		(x,	129,	0X10ACF4);
	MakeComm	(0X1017A8,	"entrypoint");
	MakeCode	(x=0X1017A8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X1017B0,	"arg");
	MakeComm	(0X1017B4,	"thread");
	MakeCode	(x=0X1017B4);
	OpStkvar	(x,	1);
	MakeComm	(0X1017B8,	"stack_top");
	MakeCode	(x=0X1017C4);
	OpOff		(x,	1,	0X10ACF4);
	OpOff		(x,	129,	0X10ACF4);
	MakeComm	(0X1017FC,	"thread");
	MakeCode	(x=0X1017FC);
	OpStkvar	(x,	1);
	MakeComm	(0X101800,	"entrypoint");
	MakeCode	(x=0X101800);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X101804,	"arg");
	MakeComm	(0X101808,	"stack_top");
	MakeComm	(0X101810,	"ns");
	MakeCode	(0X101830);
	MakeDword	(x=0X101860);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X101864);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X101868);
	MakeDword	(x=0X10186C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X101870);
	MakeDword	(x=0X101874);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X101878);
	MakeDword	(x=0X10187C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X101880);
	MakeDword	(0X101884);
	MakeDword	(0X101888);
	MakeDword	(0X10188C);
	MakeDword	(0X101890);
	MakeDword	(0X101894);
	MakeDword	(x=0X101898);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X10189C);
	MakeDword	(x=0X1018A0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X1018A4);
	MakeDword	(0X1018A8);
	MakeDword	(x=0X1018AC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1018B0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeName	(0X1018B0,	"ptr");
	MakeDword	(x=0X1018B4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X1018B8);
	MakeDword	(x=0X1018BC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeName	(0X1018BC,	"entrypoint");
	MakeDword	(0X1018C0);
	MakeName	(0X1018C0,	"stack_top");
	MakeDword	(0X1018C4);
	MakeDword	(x=0X1018C8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X1018CC);
	MakeDword	(0X1018D0);
	MakeCode	(0X1018D4);
	MakeName	(0X1018D4,	"write_color");
	MakeCode	(0X1018E4);
	MakeName	(0X1018E4,	"write_byte");
	MakeCode	(0X1018EC);
	MakeName	(0X1018EC,	"nibble_to_readable");
	MakeCode	(0X101900);
	MakeCode	(x=0X101910);
	OpHex		(x,	1);
	MakeComm	(0X101920,	"nibble");
	MakeCode	(0X101938);
	MakeCode	(0X10193C);
	MakeName	(0X10193C,	"u32_to_string");
	MakeCode	(0X101990);
	MakeArray	(0X101994,	0XC);
	MakeCode	(0X1019A0);
	MakeName	(0X1019A0,	"sleep");
	MakeCode	(0X1019A8);
	MakeCode	(x=0X1019B0);
	OpHex		(x,	1);
	MakeCode	(0X1019C0);
	MakeName	(0X1019C0,	"InvalidateEntireInstructionCache");
	MakeCode	(0X1019CC);
	MakeName	(0X1019CC,	"CleanEntireDataCache");
	MakeArray	(0X1019D8,	0X8);
	MakeName	(0X1019D8,	"nsDbgPrint_5");
	MakeCode	(x=0X1019E0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X101A10);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X101A14);
	MakeCode	(x=0X101A1C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X101A20);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X101A24);
	OpStkvar	(x,	1);
	MakeComm	(0X101A40,	"lock");
	MakeCode	(x=0X101A48);
	OpStkvar	(x,	1);
	MakeCode	(x=0X101A4C);
	OpStkvar	(x,	1);
	MakeComm	(0X101A58,	"lock");
	MakeDword	(x=0X101A70);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0X101A74);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X101A98);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0X101A9C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X101AD8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X101AE8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X101AEC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0X101AF0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X101B2C);
	MakeDword	(x=0X101B3C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X101B40);
	MakeCode	(0X101B44);
	MakeComm	(0X101B48,	"archive");
	MakeCode	(x=0X101B4C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X101B78);
	OpStkvar	(x,	1);
	MakeCode	(x=0X101B7C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X101B84);
	OpStkvar	(x,	1);
	MakeCode	(x=0X101B88);
	OpStkvar	(x,	1);
	MakeCode	(x=0X101B8C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X101B90);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X101B9C);
	OpStkvar	(x,	1);
	MakeComm	(0X101BAC,	"openflags");
	MakeCode	(x=0X101BAC);
	OpStkvar	(x,	1);
	MakeComm	(0X101BB4,	"attributes");
	MakeCode	(x=0X101BB4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X101BC0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X101BC8,	"handle");
	MakeComm	(0X101BCC,	"out");
	MakeCode	(x=0X101BCC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X101BE8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X101BF8);
	MakeComm	(0X101C24,	"flushFlags");
	MakeComm	(0X101C30,	"data");
	MakeCode	(x=0X101C30);
	OpStkvar	(x,	1);
	MakeComm	(0X101C38,	"size");
	MakeCode	(x=0X101C38);
	OpStkvar	(x,	1);
	MakeComm	(0X101C50,	"handle");
	MakeCode	(x=0X101C50);
	OpStkvar	(x,	1);
	MakeCode	(x=0X101C58);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X101C6C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X101C70);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X101C74);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X101C78);
	MakeDword	(x=0X101C7C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X101C80);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0X101C84);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X101CC0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0X101CC4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X101CF0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X101D20,	"hook");
	MakeDword	(x=0X101D38);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X101D3C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X101D40);
	MakeCode	(x=0X101D44);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X101D70);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X101DA0,	"hook");
	MakeCode	(x=0X101DA8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X101DB8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X101DBC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X101DC0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X101DC4);
	MakeCode	(x=0X101DCC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X101DDC,	"lock");
	MakeComm	(0X101E10,	"lock");
	MakeComm	(0X101E30,	"lock");
	MakeComm	(0X101E40,	"lock");
	MakeComm	(0X101E54,	"lock");
	MakeCode	(x=0X101E58);
	OpStkvar	(x,	1);
	MakeComm	(0X101E60,	"ns");
	MakeCode	(x=0X101E6C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X101E80);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X101E8C,	"lock");
	MakeDword	(x=0X101E9C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X101EA0);
	MakeCode	(0X101EA4);
	MakeCode	(x=0X101EAC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X101ECC,	"size");
	MakeComm	(0X101ED0,	"addr");
	MakeCode	(x=0X101EE0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X101EF4);
	MakeCode	(x=0X101F18);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X101F44);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X101F4C,	"ptr");
	MakeComm	(0X101F58,	"size");
	MakeComm	(0X101F78,	"funcAddr");
	MakeComm	(0X101F7C,	"callbackAddr");
	MakeComm	(0X101F80,	"hook");
	MakeComm	(0X101F88,	"ns");
	MakeDword	(x=0X101F9C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X101FA0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X101FA4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X101FA8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X101FAC);
	MakeCode	(x=0X101FB0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X102000);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X10201C);
	MakeDword	(x=0X102040);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X102044);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X102048);
	MakeCode	(x=0X10204C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X102064);
	OpStkvar	(x,	1);
	MakeComm	(0X10206C,	"process");
	MakeComm	(0X102070,	"processId");
	MakeCode	(x=0X102074);
	OpStkvar	(x,	1);
	MakeCode	(x=0X102084);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X102090);
	OpStkvar	(x,	1);
	MakeCode	(x=0X102098);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1020B4);
	OpStkvar	(x,	1);
	MakeComm	(0X1020FC,	"handle");
	MakeCode	(x=0X1020FC);
	OpStkvar	(x,	1);
	MakeDword	(x=0X102110);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X102114);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X102118);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X10211C);
	MakeDword	(0X102120);
	MakeCode	(0X102124);
	MakeCode	(x=0X102128);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X102178);
	MakeCode	(0X1021A4);
	MakeCode	(0X1021B8);
	MakeCode	(0X1021CC);
	MakeCode	(0X1021E0);
	MakeDword	(x=0X1021EC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X1021F0);
	MakeDword	(0X1021F4);
	MakeDword	(0X1021F8);
	MakeCode	(x=0X1021FC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10220C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X102210,	"op");
	MakeCode	(x=0X10223C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X102240);
	OpStkvar	(x,	1);
	MakeCode	(x=0X102248);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10224C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X102254);
	OpStkvar	(x,	1);
	MakeCode	(x=0X102258);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X102264,	"openflags");
	MakeCode	(x=0X102264);
	OpStkvar	(x,	1);
	MakeComm	(0X10226C,	"attributes");
	MakeCode	(x=0X10226C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X102278);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X102280,	"handle");
	MakeComm	(0X102284,	"out");
	MakeCode	(x=0X102284);
	OpStkvar	(x,	1);
	MakeCode	(x=0X102294);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X10229C,	"handle");
	MakeCode	(x=0X10229C);
	OpStkvar	(x,	1);
	MakeComm	(0X1022A0,	"size");
	MakeCode	(x=0X1022A0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1022AC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X1022BC,	"size");
	MakeCode	(x=0X1022BC);
	OpStkvar	(x,	1);
	MakeComm	(0X1022C8,	"addr0");
	MakeComm	(0X1022CC,	"addr1");
	MakeComm	(0X1022D8,	"size");
	MakeComm	(0X1022DC,	"addr_out");
	MakeCode	(x=0X1022DC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1022EC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1022F4);
	OpStkvar	(x,	1);
	MakeComm	(0X1022F8,	"buffer");
	MakeCode	(x=0X1022F8);
	OpStkvar	(x,	1);
	MakeComm	(0X1022FC,	"size");
	MakeCode	(x=0X1022FC);
	OpStkvar	(x,	1);
	MakeComm	(0X102324,	"size");
	MakeComm	(0X102328,	"addr");
	MakeCode	(x=0X102328);
	OpStkvar	(x,	1);
	MakeCode	(x=0X102338);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X102348);
	OpStkvar	(x,	1);
	MakeCode	(0X102354);
	MakeDword	(x=0X10235C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X102360);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X102364);
	MakeDword	(x=0X102368);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X10236C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X102370);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X102374);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X102378);
	MakeDword	(x=0X10237C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X102380);
	MakeDword	(x=0X102384);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X102388);
	MakeCode	(x=0X102390);
	OpStkvar	(x,	1);
	MakeComm	(0X102394,	"processIds");
	MakeComm	(0X102398,	"processCount");
	MakeCode	(x=0X102398);
	OpStkvar	(x,	1);
	MakeComm	(0X10239C,	"processIdMaxCount");
	MakeCode	(x=0X1023BC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1023C4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1023C8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1023D8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1023E0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1023E8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1023EC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1023F0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1023F4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1023F8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X102408);
	OpStkvar	(x,	1);
	MakeCode	(x=0X102414);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(0X102424);
	MakeDword	(x=0X102428);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X10242C);
	MakeDword	(x=0X102430);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0X102434);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X10243C,	"process");
	MakeCode	(x=0X10243C);
	OpStkvar	(x,	1);
	MakeComm	(0X102448,	"processId");
	MakeCode	(x=0X102458);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10246C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X102474);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10247C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X102484,	"hProcess");
	MakeCode	(x=0X102484);
	OpStkvar	(x,	1);
	MakeComm	(0X102488,	"addr");
	MakeComm	(0X10248C,	"size");
	MakeComm	(0X1024DC,	"handle");
	MakeCode	(x=0X1024DC);
	OpStkvar	(x,	1);
	MakeDword	(x=0X1024F4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1024F8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1024FC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X102500);
	MakeDword	(0X102504);
	MakeCode	(0X102508);
	MakeCode	(x=0X10250C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X102530);
	OpStkvar	(x,	1);
	MakeComm	(0X102538,	"processId");
	MakeCode	(0X102538);
	MakeComm	(0X10253C,	"process");
	MakeCode	(x=0X10253C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10254C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10255C);
	OpStkvar	(x,	1);
	MakeCode	(0X102564);
	MakeCode	(x=0X102570);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X102578,	"addr");
	MakeCode	(0X102578);
	MakeComm	(0X10257C,	"hProcess");
	MakeCode	(x=0X10257C);
	OpStkvar	(x,	1);
	MakeComm	(0X102580,	"size");
	MakeCode	(0X1025A0);
	MakeCode	(0X1025FC);
	MakeCode	(0X102604);
	MakeCode	(x=0X102610);
	OpStkvar	(x,	1);
	MakeCode	(x=0X102614);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10263C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X102644,	"handle");
	MakeCode	(x=0X102644);
	OpStkvar	(x,	1);
	MakeDword	(x=0X102660);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X102664);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X102668);
	MakeDword	(0X10266C);
	MakeDword	(0X102670);
	MakeDword	(0X102674);
	MakeDword	(x=0X102678);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X10267C);
	MakeCode	(x=0X102684);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1026A8);
	OpStkvar	(x,	1);
	MakeComm	(0X1026B0,	"processId");
	MakeCode	(0X1026B0);
	MakeComm	(0X1026B4,	"process");
	MakeCode	(x=0X1026B4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1026C4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1026D4);
	OpStkvar	(x,	1);
	MakeCode	(0X1026DC);
	MakeComm	(0X1026E4,	"addr");
	MakeComm	(0X1026E8,	"hProcess");
	MakeCode	(x=0X1026E8);
	OpStkvar	(x,	1);
	MakeComm	(0X1026EC,	"size");
	MakeCode	(0X10270C);
	MakeCode	(0X102758);
	MakeCode	(0X102760);
	MakeCode	(x=0X102764);
	OpStkvar	(x,	1);
	MakeCode	(x=0X102774);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1027B4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X1027BC,	"handle");
	MakeCode	(x=0X1027BC);
	OpStkvar	(x,	1);
	MakeDword	(x=0X1027D8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1027DC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X1027E0);
	MakeDword	(0X1027E4);
	MakeDword	(0X1027E8);
	MakeDword	(0X1027EC);
	MakeDword	(x=0X1027F0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X1027F4);
	MakeCode	(x=0X102804);
	OpStkvar	(x,	1);
	MakeComm	(0X102808,	"threadIds");
	MakeComm	(0X10280C,	"threadCount");
	MakeComm	(0X102810,	"threadIdMaxCount");
	MakeComm	(0X102814,	"domain");
	MakeCode	(x=0X102838);
	OpStkvar	(x,	1);
	MakeCode	(x=0X102844);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10285C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X102870);
	OpStkvar	(x,	1);
	MakeCode	(x=0X102874);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10287C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X102880);
	OpStkvar	(x,	1);
	MakeCode	(0X102890);
	MakeCode	(x=0X1028A0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1028C0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1028DC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1028E0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X102900);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10290C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10292C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X102948);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10294C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X10296C);
	MakeDword	(0X10297C);
	MakeDword	(0X102980);
	MakeDword	(x=0X102984);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X102988);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0X10298C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1029A4);
	OpStkvar	(x,	1);
	MakeComm	(0X1029A8,	"processId");
	MakeComm	(0X1029AC,	"process");
	MakeCode	(x=0X1029BC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1029CC);
	OpStkvar	(x,	1);
	MakeComm	(0X1029D4,	"threadIds");
	MakeCode	(0X1029D4);
	MakeComm	(0X1029D8,	"threadCount");
	MakeComm	(0X1029DC,	"threadIdMaxCount");
	MakeComm	(0X1029E0,	"domain");
	MakeCode	(x=0X1029E0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1029F0);
	OpStkvar	(x,	1);
	MakeCode	(0X102A04);
	MakeCode	(x=0X102A1C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X102A24,	"handle");
	MakeCode	(x=0X102A30);
	OpStkvar	(x,	1);
	MakeCode	(x=0X102A64);
	OpStkvar	(x,	1);
	MakeCode	(x=0X102A6C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X102A70);
	OpStkvar	(x,	1);
	MakeCode	(x=0X102A74);
	OpStkvar	(x,	1);
	MakeCode	(x=0X102A84);
	OpStkvar	(x,	1);
	MakeComm	(0X102A8C,	"handle");
	MakeCode	(x=0X102A8C);
	OpStkvar	(x,	1);
	MakeDword	(x=0X102AA8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X102AAC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X102AB0);
	MakeDword	(0X102AB4);
	MakeDword	(x=0X102AB8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X102ABC);
	MakeDword	(x=0X102AC0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0X102AC4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X102AD4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X102AE8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X102B0C);
	MakeComm	(0X102B10,	"size");
	MakeComm	(0X102B14,	"addr");
	MakeComm	(0X102B34,	"size");
	MakeComm	(0X102B38,	"hProcess");
	MakeComm	(0X102B3C,	"addr");
	MakeCode	(x=0X102B3C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X102B50);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X102B54);
	OpStkvar	(x,	1);
	MakeComm	(0X102BA4,	"hProcess");
	MakeComm	(0X102BA8,	"addr");
	MakeComm	(0X102BAC,	"size");
	MakeCode	(x=0X102BD4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X102BF4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X102C20);
	OpStkvar	(x,	1);
	MakeCode	(x=0X102C24);
	OpStkvar	(x,	1);
	MakeCode	(x=0X102C30);
	OpStkvar	(x,	1);
	MakeCode	(x=0X102C3C);
	OpStkvar	(x,	1);
	MakeDword	(x=0X102C68);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X102C6C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X102C70);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X102C74);
	MakeDword	(0X102C78);
	MakeDword	(0X102C7C);
	MakeDword	(x=0X102C80);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X102C84);
	MakeDword	(0X102C88);
	MakeDword	(0X102C8C);
	MakeDword	(0X102C90);
	MakeDword	(0X102C94);
	MakeDword	(0X102C98);
	MakeDword	(0X102C9C);
	MakeDword	(0X102CA0);
	MakeDword	(0X102CA4);
	MakeCode	(x=0X102CA8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X102CC4);
	OpStkvar	(x,	1);
	MakeComm	(0X102CE0,	"processId");
	MakeComm	(0X102CE4,	"process");
	MakeCode	(x=0X102CE4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X102CE8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X102CF8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X102D08);
	OpStkvar	(x,	1);
	MakeCode	(0X102D10);
	MakeCode	(x=0X102D14);
	OpStkvar	(x,	1);
	MakeCode	(x=0X102D18);
	OpStkvar	(x,	1);
	MakeComm	(0X102D30,	"handle");
	MakeCode	(x=0X102D30);
	OpStkvar	(x,	1);
	MakeDword	(x=0X102D48);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X102D4C);
	MakeDword	(x=0X102D50);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X102D54);
	MakeCode	(0X102D58);
	MakeCode	(x=0X102D64);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X102D88);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X102DA0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X102DAC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X102DB0);
	MakeDword	(x=0X102DB4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X102DB8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X102DBC);
	MakeCode	(x=0X102DC0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X102DCC,	"lock");
	MakeCode	(x=0X102DD8);
	OpStkvar	(x,	1);
	MakeComm	(0X102DF8,	"lock");
	MakeCode	(x=0X102E00);
	OpStkvar	(x,	1);
	MakeCode	(x=0X102E0C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X102E30);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X102E34);
	OpStkvar	(x,	1);
	MakeCode	(x=0X102E3C);
	OpStkvar	(x,	1);
	MakeDword	(x=0X102E5C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X102E60);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X102E64);
	MakeCode	(x=0X102E68);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X102E94);
	MakeCode	(x=0X102E9C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X102EA4,	"lock");
	MakeComm	(0X102EDC,	"lock");
	MakeCode	(0X102EEC);
	MakeCode	(0X102EFC);
	MakeCode	(0X102F0C);
	MakeCode	(0X102F1C);
	MakeCode	(0X102F2C);
	MakeCode	(0X102F3C);
	MakeCode	(0X102F4C);
	MakeCode	(0X102F5C);
	MakeCode	(0X102F6C);
	MakeCode	(0X102F7C);
	MakeDword	(x=0X102F8C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X102F90);
	MakeDword	(x=0X102F94);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X102F98);
	MakeComm	(0X102FB8,	"ns");
	MakeCode	(x=0X102FC8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X102FD0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X102FF0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X102FF4);
	OpStkvar	(x,	1);
	MakeCode	(0X10303C);
	MakeComm	(0X1030A4,	"ns");
	MakeCode	(0X1030B4);
	MakeDword	(0X1030D4);
	MakeDword	(x=0X1030D8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X1030DC);
	MakeDword	(0X1030E0);
	MakeDword	(0X1030E4);
	MakeDword	(0X1030E8);
	MakeDword	(0X1030EC);
	MakeCode	(0X1030F0);
	MakeCode	(0X103100);
	MakeCode	(x=0X103104);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X103108);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10310C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X103118,	"lock");
	MakeDword	(x=0X103148);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X10314C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X103150);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X103154);
	MakeComm	(0X103158,	"thread_priority");
	MakeCode	(0X103158);
	MakeComm	(0X10315C,	"size");
	MakeCode	(x=0X103164);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X103178);
	OpStkvar	(x,	1);
	MakeComm	(0X10318C,	"addr0");
	MakeComm	(0X103194,	"addr1");
	MakeComm	(0X103198,	"addr_out");
	MakeCode	(x=0X103198);
	OpStkvar	(x,	1);
	MakeComm	(0X10319C,	"size");
	MakeCode	(x=0X1031A8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X1031B4,	"addr");
	MakeComm	(0X1031B8,	"size");
	MakeCode	(x=0X1031D4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1031F4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X103204);
	OpStkvar	(x,	1);
	MakeCode	(x=0X103214);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10321C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X103220);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X103230);
	OpStkvar	(x,	1);
	MakeCode	(x=0X103234);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X103280,	"lock");
	MakeComm	(0X103290,	"lock");
	MakeComm	(0X1032EC,	"size");
	MakeCode	(0X1032EC);
	MakeCode	(x=0X1032F0);
	OpStkvar	(x,	1);
	MakeComm	(0X103308,	"entrypoint");
	MakeCode	(x=0X103308);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X10330C,	"arg");
	MakeComm	(0X103318,	"stack_top");
	MakeComm	(0X10331C,	"thread");
	MakeCode	(x=0X10331C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10332C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(0X103340);
	MakeName	(0X103340,	"size");
	MakeDword	(x=0X103344);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X103348);
	MakeDword	(x=0X10334C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X103350);
	MakeDword	(x=0X103354);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X103358);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X10335C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X103360);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X103364);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X103368);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X10336C);
	MakeName	(0X10336C,	"OS_ConvertVaddr2Physaddr");
	MakeCode	(0X103380);
	MakeName	(0X103380,	"osConvertOldLINEARMemToNew");
	MakeCode	(0X103394);
	MakeCode	(0X1033A8);
	MakeCode	(0X1033C8);
	MakeName	(0X1033C8,	"__udiv_w_sdiv");
	MakeCode	(x=0X1033D0);
	OpHex		(x,	1);
	MakeComm	(0X1033D4,	"op");
	MakeCode	(x=0X1033E4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X1033EC,	"addr_out");
	MakeCode	(x=0X1033EC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1033F4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1033FC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X103414,	"addr0");
	MakeComm	(0X10341C,	"addr1");
	MakeComm	(0X103420,	"size");
	MakeDword	(x=0X103448);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X10344C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X103450);
	MakeCode	(0X103454);
	MakeCode	(x=0X10345C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10346C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X10347C);
	MakeDword	(x=0X103480);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X103484);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X103488);
	MakeCode	(x=0X10348C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10349C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X1034A8);
	MakeCode	(x=0X1034AC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X1034C4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1034C8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1034CC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X1034D0);
	MakeCode	(x=0X1034D4);
	OpStkvar	(x,	1);
	MakeComm	(0X1034E0,	"handleptr");
	MakeCode	(x=0X1034E4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X103508);
	MakeCode	(x=0X10350C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X103530,	"session");
	MakeCode	(x=0X103530);
	OpStkvar	(x,	1);
	MakeComm	(0X103538,	"handle");
	MakeCode	(x=0X103538);
	OpStkvar	(x,	1);
	MakeDword	(x=0X103548);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X10354C);
	MakeDword	(x=0X103550);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0X103554);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10355C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X103560);
	OpStkvar	(x,	1);
	MakeCode	(x=0X103564);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X103568);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10356C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X103570);
	OpStkvar	(x,	1);
	MakeCode	(x=0X103578);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10357C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X103580,	"entryCount");
	MakeComm	(0X103584,	"captions");
	MakeCode	(x=0X1035AC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X1035B4);
	MakeCode	(x=0X1035CC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1035D8);
	OpStkvar	(x,	1);
	MakeDword	(x=0X1035DC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1035E0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1035E4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X1035E8);
	MakeDword	(x=0X1035EC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeName	(0X1035EC,	"title");
	MakeDword	(x=0X1035F0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1035F4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X1035F8);
	MakeCode	(x=0X103604);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X103608);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10360C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X103610);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X103618);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10361C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X103624);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10362C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X103630);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X103634);
	OpOff		(x,	1,	0X10AED8);
	OpOff		(x,	129,	0X10AED8);
	MakeCode	(x=0X103654);
	OpStkvar	(x,	1);
	MakeCode	(0X103674);
	MakeCode	(x=0X103678);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X10367C,	"entryCount");
	MakeComm	(0X103680,	"captions");
	MakeCode	(0X1036A0);
	MakeCode	(x=0X1036A8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1036BC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X1036C8);
	MakeCode	(0X1036D0);
	MakeCode	(0X1036E8);
	MakeCode	(0X1036F8);
	MakeCode	(x=0X1036FC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10370C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X103738);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X10373C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X103740);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X103744);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X103748);
	MakeDword	(x=0X10374C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X103750);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X103754);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X103758);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X10375C);
	MakeCode	(x=0X103760);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X103764);
	OpOff		(x,	1,	0X10AED8);
	OpOff		(x,	129,	0X10AED8);
	MakeCode	(0X103778);
	MakeCode	(x=0X10377C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X103790);
	OpOff		(x,	1,	0X10AED8);
	OpOff		(x,	129,	0X10AED8);
	MakeDword	(x=0X10379C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1037A0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeComm	(0X1037A4,	"op");
	MakeCode	(0X1037A4);
	MakeCode	(x=0X1037A8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1037AC);
	OpOff		(x,	1,	0X10AED8);
	OpOff		(x,	129,	0X10AED8);
	MakeCode	(x=0X1037B4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1037B8);
	OpOff		(x,	1,	0X1085F4);
	OpOff		(x,	129,	0X1085F4);
	MakeCode	(x=0X1037BC);
	OpOff		(x,	1,	0X10AED8);
	OpOff		(x,	129,	0X10AED8);
	MakeCode	(x=0X1037C0);
	OpOff		(x,	1,	0X10AED8);
	OpOff		(x,	129,	0X10AED8);
	MakeComm	(0X1037EC,	"addr_out");
	MakeCode	(x=0X1037EC);
	OpStkvar	(x,	1);
	MakeComm	(0X1037F4,	"addr0");
	MakeComm	(0X1037F8,	"addr1");
	MakeComm	(0X1037FC,	"size");
	MakeComm	(0X10380C,	"hProcess");
	MakeComm	(0X103810,	"addr");
	MakeComm	(0X103814,	"size");
	MakeCode	(0X103838);
	MakeDword	(x=0X103848);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X10384C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X103850);
	MakeDword	(0X103854);
	MakeDword	(0X103858);
	MakeName	(0X103858,	"hProcess");
	MakeDword	(0X10385C);
	MakeCode	(0X103860);
	MakeCode	(x=0X103864);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X103874);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X103888);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10388C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X1038C0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1038C4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1038C8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X1038CC);
	MakeDword	(0X1038D0);
	MakeCode	(0X1038D4);
	MakeCode	(x=0X1038DC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1038E8);
	OpOff		(x,	1,	0X10AED8);
	OpOff		(x,	129,	0X10AED8);
	MakeComm	(0X1038F8,	"process");
	MakeComm	(0X1038FC,	"processId");
	MakeCode	(x=0X103908);
	OpOff		(x,	1,	0X10AED8);
	OpOff		(x,	129,	0X10AED8);
	MakeCode	(x=0X10391C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10392C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X103934);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10393C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10394C);
	OpOff		(x,	1,	0X1085F4);
	OpOff		(x,	129,	0X1085F4);
	MakeCode	(x=0X103958);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10396C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X103970);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X103974);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10397C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X103980);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10398C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X103990);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1039A8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1039B4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1039B8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1039C0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1039D4);
	OpOff		(x,	1,	0X1085F4);
	OpOff		(x,	129,	0X1085F4);
	MakeCode	(x=0X1039E0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1039E4);
	OpOff		(x,	1,	0X1085F4);
	OpOff		(x,	129,	0X1085F4);
	MakeComm	(0X1039EC,	"size");
	MakeCode	(x=0X1039F4);
	OpStkvar	(x,	1);
	MakeCode	(0X103A0C);
	MakeCode	(0X103A1C);
	MakeComm	(0X103A44,	"addr");
	MakeCode	(0X103A44);
	MakeComm	(0X103A48,	"size");
	MakeCode	(x=0X103A48);
	OpOff		(x,	1,	0X1085F4);
	OpOff		(x,	129,	0X1085F4);
	MakeCode	(x=0X103A54);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X103A64,	"hProcess");
	MakeComm	(0X103A68,	"addr");
	MakeCode	(x=0X103A68);
	OpOff		(x,	1,	0X1085F4);
	OpOff		(x,	129,	0X1085F4);
	MakeComm	(0X103A6C,	"size");
	MakeCode	(x=0X103A84);
	OpStkvar	(x,	1);
	MakeCode	(x=0X103A8C);
	OpOff		(x,	1,	0X1085F4);
	OpOff		(x,	129,	0X1085F4);
	MakeCode	(x=0X103AAC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X103AC8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X103AE8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X103AF0);
	MakeCode	(x=0X103AF8);
	OpStkvar	(x,	1);
	MakeCode	(0X103B18);
	MakeCode	(0X103B20);
	MakeDword	(x=0X103B30);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X103B34);
	MakeDword	(0X103B38);
	MakeDword	(x=0X103B3C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X103B40);
	MakeDword	(x=0X103B44);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X103B48);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X103B4C);
	MakeDword	(0X103B50);
	MakeDword	(0X103B54);
	MakeDword	(0X103B58);
	MakeDword	(0X103B5C);
	MakeDword	(x=0X103B60);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X103B64);
	MakeCode	(0X103B68);
	MakeCode	(x=0X103B80);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X103B8C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X103B90);
	MakeCode	(x=0X103BA0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X103BAC);
	OpOff		(x,	1,	0X10AED8);
	OpOff		(x,	129,	0X10AED8);
	MakeCode	(x=0X103BB8);
	OpOff		(x,	1,	0X10AED8);
	OpOff		(x,	129,	0X10AED8);
	MakeCode	(x=0X103BBC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X103BDC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X103BE8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X103BEC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X103BF0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0X103BF4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X103BFC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X103C00,	"funcAddr");
	MakeComm	(0X103C04,	"hook");
	MakeComm	(0X103C08,	"callbackAddr");
	MakeCode	(x=0X103C08);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X103C10,	"hook");
	MakeDword	(x=0X103C1C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X103C20);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X103C24);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X103C28);
	MakeComm	(0X103C30,	"archive");
	MakeCode	(x=0X103C48);
	OpStkvar	(x,	1);
	MakeCode	(x=0X103C50);
	OpStkvar	(x,	1);
	MakeCode	(x=0X103C54);
	OpStkvar	(x,	1);
	MakeCode	(x=0X103C58);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X103C5C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X103C64);
	OpStkvar	(x,	1);
	MakeCode	(x=0X103C7C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X103C84,	"handle");
	MakeComm	(0X103C88,	"out");
	MakeCode	(x=0X103C88);
	OpStkvar	(x,	1);
	MakeCode	(0X103CB4);
	MakeComm	(0X103CE0,	"buffer");
	MakeComm	(0X103CE4,	"handle");
	MakeCode	(x=0X103CE4);
	OpStkvar	(x,	1);
	MakeComm	(0X103CE8,	"entriesRead");
	MakeCode	(x=0X103CE8);
	OpStkvar	(x,	1);
	MakeComm	(0X103CEC,	"entrycount");
	MakeCode	(x=0X103CF0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X103CF8);
	OpStkvar	(x,	1);
	MakeComm	(0X103D10,	"handle");
	MakeCode	(x=0X103D10);
	OpStkvar	(x,	1);
	MakeDword	(x=0X103D28);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X103D2C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X103D30);
	MakeCode	(x=0X103D34);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X103D44);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X103D4C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X103D54);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X103D58);
	OpOff		(x,	1,	0X10AED8);
	OpOff		(x,	129,	0X10AED8);
	MakeCode	(x=0X103D5C);
	OpOff		(x,	1,	0X10AED8);
	OpOff		(x,	129,	0X10AED8);
	MakeDword	(x=0X103D6C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X103D70);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X103D74);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X103D78);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X103D7C);
	MakeCode	(0X103D80);
	MakeCode	(x=0X103D90);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X103D94);
	OpStkvar	(x,	1);
	MakeCode	(x=0X103DA0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X103DA4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X103DAC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X103DC4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X103DCC);
	OpStkvar	(x,	1);
	MakeComm	(0X103DD4,	"fileName");
	MakeCode	(x=0X103DD4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X103DE0);
	OpStkvar	(x,	1);
	MakeComm	(0X103E10,	"fileName");
	MakeCode	(x=0X103E10);
	OpStkvar	(x,	1);
	MakeComm	(0X103E14,	"pBuf");
	MakeComm	(0X103E18,	"bufSize");
	MakeCode	(x=0X103E34);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X103E68);
	MakeDword	(x=0X103E78);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X103E7C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X103E80);
	MakeDword	(0X103E84);
	MakeDword	(0X103E88);
	MakeDword	(0X103E8C);
	MakeDword	(x=0X103E90);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X103E94);
	MakeCode	(x=0X103EB0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X103ED0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X103EE0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X103F04);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X103F14);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X103F18);
	MakeDword	(x=0X103F1C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X103F20);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X103F24);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0X103F28);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X103F3C);
	OpStkvar	(x,	1);
	MakeComm	(0X103F4C,	"processId");
	MakeComm	(0X103F50,	"process");
	MakeCode	(x=0X103F50);
	OpStkvar	(x,	1);
	MakeCode	(x=0X103F54);
	OpStkvar	(x,	1);
	MakeCode	(x=0X103F64);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X103F74);
	OpStkvar	(x,	1);
	MakeCode	(x=0X103F7C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X103F84);
	OpStkvar	(x,	1);
	MakeComm	(0X103F8C,	"handle");
	MakeCode	(x=0X103F8C);
	OpStkvar	(x,	1);
	MakeDword	(x=0X103FA4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X103FA8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X103FAC);
	MakeCode	(x=0X103FB0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X103FB4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X103FC8,	"addr");
	MakeComm	(0X103FCC,	"size");
	MakeCode	(x=0X103FDC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X103FF0);
	MakeCode	(0X10402C);
	MakeDword	(x=0X104030);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X104034);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X104038);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X10403C);
	MakeDword	(0X104040);
	MakeCode	(0X104044);
	MakeCode	(x=0X104048);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10404C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X104050);
	OpOff		(x,	1,	0X1085F4);
	OpOff		(x,	129,	0X1085F4);
	MakeCode	(x=0X104074);
	OpOff		(x,	1,	0X10B394);
	OpOff		(x,	129,	0X10B394);
	MakeCode	(x=0X104078);
	OpOff		(x,	1,	0X10B394);
	OpOff		(x,	129,	0X10B394);
	MakeComm	(0X104080,	"archive");
	MakeCode	(x=0X104084);
	OpOff		(x,	1,	0X10B394);
	OpOff		(x,	129,	0X10B394);
	MakeCode	(x=0X104088);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X10408C,	"handle");
	MakeCode	(x=0X10409C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1040A8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X1040AC,	"size");
	MakeCode	(x=0X1040B0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1040D0);
	OpOff		(x,	1,	0X10AED8);
	OpOff		(x,	129,	0X10AED8);
	MakeCode	(x=0X1040D4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1040DC);
	OpOff		(x,	1,	0X10AED8);
	OpOff		(x,	129,	0X10AED8);
	MakeCode	(x=0X1040F0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X1040F8,	"fileName");
	MakeComm	(0X1040FC,	"pBuf");
	MakeComm	(0X104100,	"bufSize");
	MakeCode	(x=0X104108);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X104114);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X104120);
	OpOff		(x,	1,	0X10AED8);
	OpOff		(x,	129,	0X10AED8);
	MakeCode	(x=0X104124);
	OpOff		(x,	1,	0X10AED8);
	OpOff		(x,	129,	0X10AED8);
	MakeCode	(x=0X104138);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X104154);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X104160);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X104170);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X104174,	"hook");
	MakeCode	(x=0X104174);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X104178,	"callbackAddr");
	MakeCode	(x=0X104178);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X10417C,	"funcAddr");
	MakeComm	(0X104184,	"hook");
	MakeCode	(x=0X104184);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X104194);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X104198);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X10419C);
	MakeDword	(x=0X1041A0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1041A4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1041A8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1041AC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1041B0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeName	(0X1041B0,	"fileName");
	MakeDword	(x=0X1041B4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1041B8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1041BC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1041C0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1041C4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1041C8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1041CC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1041D0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1041D4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X1041D8);
	MakeCode	(x=0X1041E0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1041E4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1041EC);
	OpOff		(x,	1,	0X1085F4);
	OpOff		(x,	129,	0X1085F4);
	MakeCode	(0X104234);
	MakeDword	(x=0X104238);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X10423C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X104240);
	MakeCode	(0X104244);
	MakeCode	(0X104248);
	MakeName	(0X104248,	"getCurrentProcessId");
	MakeCode	(x=0X10424C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X104250,	"handle");
	MakeComm	(0X104254,	"out");
	MakeDword	(x=0X104264);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeName	(0X104264,	"out");
	MakeDword	(0X104268);
	MakeCode	(0X10426C);
	MakeName	(0X10426C,	"getCurrentProcessHandle");
	MakeCode	(x=0X104274);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X104278);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10427C);
	OpOff		(x,	1,	0X10B480);
	OpOff		(x,	129,	0X10B480);
	MakeComm	(0X104288,	"handle");
	MakeComm	(0X10428C,	"out");
	MakeComm	(0X104294,	"processId");
	MakeComm	(0X104298,	"process");
	MakeCode	(x=0X104298);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1042A4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1042A8);
	OpOff		(x,	1,	0X10B480);
	OpOff		(x,	129,	0X10B480);
	MakeDword	(x=0X1042C8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X1042CC);
	MakeDword	(0X1042D0);
	MakeCode	(0X1042D4);
	MakeCode	(0X1042D8);
	MakeName	(0X1042D8,	"controlMemory");
	MakeComm	(0X1042DC,	"op");
	MakeCode	(x=0X1042E0);
	OpStkvar	(x,	1);
	MakeComm	(0X104314,	"addr_out");
	MakeComm	(0X10431C,	"addr0");
	MakeComm	(0X104320,	"addr1");
	MakeComm	(0X104324,	"size");
	MakeCode	(x=0X10433C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10434C);
	OpStkvar	(x,	1);
	MakeDword	(0X104370);
	MakeDword	(x=0X104374);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X104378);
	MakeComm	(0X10437C,	"Type");
	MakeCode	(0X10437C);
	MakeName	(0X10437C,	"protectRemoteMemory");
	MakeComm	(0X104380,	"size");
	MakeComm	(0X104390,	"Addr1");
	MakeCode	(x=0X10439C);
	OpStkvar	(x,	1);
	MakeCode	(0X1043A0);
	MakeName	(0X1043A0,	"protectMemory");
	MakeComm	(0X1043B0,	"addr");
	MakeComm	(0X1043B4,	"size");
	MakeCode	(0X1043C0);
	MakeCode	(x=0X1043C8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1043CC);
	OpStkvar	(x,	1);
	MakeComm	(0X1043F4,	"handle");
	MakeComm	(0X1043F8,	"addr");
	MakeComm	(0X1043FC,	"size");
	MakeCode	(x=0X104400);
	OpStkvar	(x,	1);
	MakeComm	(0X104414,	"handle");
	MakeComm	(0X104418,	"addr");
	MakeComm	(0X10441C,	"size");
	MakeCode	(x=0X10442C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X10443C,	"src");
	MakeCode	(x=0X10443C);
	OpStkvar	(x,	1);
	MakeComm	(0X104444,	"hdma");
	MakeCode	(x=0X104444);
	OpStkvar	(x,	1);
	MakeComm	(0X104448,	"dstProcess");
	MakeComm	(0X10444C,	"dst");
	MakeComm	(0X104450,	"srcProcess");
	MakeComm	(0X104470,	"state");
	MakeCode	(x=0X104470);
	OpStkvar	(x,	1);
	MakeComm	(0X104474,	"dma");
	MakeCode	(x=0X104474);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104478);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104480);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1044AC);
	OpHex		(x,	1);
	MakeComm	(0X1044B8,	"ns");
	MakeCode	(x=0X1044D0);
	OpStkvar	(x,	1);
	MakeComm	(0X1044E4,	"handle");
	MakeCode	(x=0X1044E4);
	OpStkvar	(x,	1);
	MakeComm	(0X1044EC,	"handle");
	MakeComm	(0X1044F0,	"addr");
	MakeComm	(0X1044F4,	"size");
	MakeDword	(0X104504);
	MakeDword	(x=0X104508);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X10450C);
	MakeDword	(0X104510);
	MakeDword	(0X104514);
	MakeDword	(0X104518);
	MakeDword	(0X10451C);
	MakeDword	(0X104520);
	MakeCode	(0X104524);
	MakeCode	(x=0X104544);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X104548);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10455C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104564);
	OpStkvar	(x,	1);
	MakeDword	(x=0X104574);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X104578);
	MakeComm	(0X104588,	"process");
	MakeCode	(x=0X104588);
	OpStkvar	(x,	1);
	MakeComm	(0X10458C,	"processId");
	MakeCode	(x=0X1045A4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1045B8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1045C0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1045D8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1045DC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1045F0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1045FC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104600);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104608);
	OpStkvar	(x,	1);
	MakeComm	(0X104614,	"handle");
	MakeCode	(x=0X104614);
	OpStkvar	(x,	1);
	MakeDword	(x=0X104630);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X104634);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X104638);
	MakeComm	(0X104640,	"archive");
	MakeCode	(x=0X104654);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10465C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104660);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104664);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104668);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X104674);
	OpStkvar	(x,	1);
	MakeComm	(0X104684,	"openflags");
	MakeCode	(x=0X104684);
	OpStkvar	(x,	1);
	MakeComm	(0X10468C,	"attributes");
	MakeCode	(x=0X10468C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104698);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X1046A0,	"handle");
	MakeComm	(0X1046A4,	"out");
	MakeCode	(x=0X1046A4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1046B0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X1046C0,	"processId");
	MakeComm	(0X1046C4,	"process");
	MakeCode	(x=0X1046C4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1046D4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1046DC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1046E4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1046EC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X104714,	"hProcess");
	MakeCode	(x=0X104714);
	OpStkvar	(x,	1);
	MakeComm	(0X104718,	"addr");
	MakeComm	(0X10471C,	"size");
	MakeComm	(0X104740,	"handle");
	MakeCode	(x=0X104740);
	OpStkvar	(x,	1);
	MakeCode	(0X104754);
	MakeCode	(x=0X104758);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104764);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10478C);
	OpStkvar	(x,	1);
	MakeComm	(0X104794,	"data");
	MakeCode	(x=0X104794);
	OpStkvar	(x,	1);
	MakeComm	(0X104798,	"size");
	MakeComm	(0X10479C,	"flushFlags");
	MakeComm	(0X1047B0,	"handle");
	MakeCode	(x=0X1047B0);
	OpStkvar	(x,	1);
	MakeDword	(x=0X1047CC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1047D0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1047D4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1047D8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1047DC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X1047E0);
	MakeDword	(0X1047E4);
	MakeDword	(0X1047E8);
	MakeDword	(0X1047EC);
	MakeCode	(0X1047F0);
	MakeCode	(x=0X10482C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X104858);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X104870);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1048D4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X104920);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X104940);
	MakeCode	(0X10496C);
	MakeDword	(x=0X104988);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X10498C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X104990);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X104994);
	MakeDword	(0X104998);
	MakeDword	(0X10499C);
	MakeDword	(x=0X1049A0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1049A4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X1049A8);
	MakeComm	(0X1049B0,	"archive");
	MakeCode	(x=0X1049B4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1049F4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X104A00);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104A08);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X104A14,	"openflags");
	MakeCode	(x=0X104A14);
	OpStkvar	(x,	1);
	MakeComm	(0X104A1C,	"attributes");
	MakeCode	(x=0X104A1C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104A28);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X104A30,	"handle");
	MakeComm	(0X104A34,	"out");
	MakeCode	(x=0X104A34);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104A4C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104A58);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X104A64);
	MakeCode	(x=0X104A7C);
	OpStkvar	(x,	1);
	MakeComm	(0X104A84,	"size");
	MakeCode	(x=0X104A84);
	OpStkvar	(x,	1);
	MakeComm	(0X104A88,	"flushFlags");
	MakeComm	(0X104A8C,	"data");
	MakeCode	(x=0X104AAC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X104AE0);
	MakeDword	(0X104AEC);
	MakeDword	(x=0X104AF0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X104AF4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X104AF8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X104AFC);
	MakeDword	(0X104B00);
	MakeDword	(x=0X104B04);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X104B08);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X104B0C);
	MakeCode	(x=0X104B18);
	OpStkvar	(x,	1);
	MakeComm	(0X104B2C,	"processId");
	MakeComm	(0X104B40,	"hProcess");
	MakeCode	(x=0X104B40);
	OpStkvar	(x,	1);
	MakeComm	(0X104B44,	"addr");
	MakeComm	(0X104B48,	"size");
	MakeCode	(x=0X104B58);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104B5C);
	OpStkvar	(x,	1);
	MakeComm	(0X104B74,	"handle");
	MakeCode	(x=0X104B74);
	OpStkvar	(x,	1);
	MakeDword	(0X104B90);
	MakeCode	(0X104B94);
	MakeDword	(0X104BD8);
	MakeDword	(0X104BDC);
	MakeDword	(0X104BE0);
	MakeDword	(0X104BE4);
	MakeCode	(0X104BE8);
	MakeCode	(x=0X104BF4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104BF8);
	OpStkvar	(x,	1);
	MakeComm	(0X104C00,	"processIds");
	MakeComm	(0X104C04,	"processCount");
	MakeComm	(0X104C08,	"processIdMaxCount");
	MakeCode	(x=0X104C0C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104C1C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104C38);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104C3C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104C4C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104C58);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104C60);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104C6C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104C84);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X104C88,	"title");
	MakeComm	(0X104C8C,	"entryCount");
	MakeCode	(x=0X104C8C);
	OpStkvar	(x,	1);
	MakeComm	(0X104C90,	"captions");
	MakeCode	(x=0X104CA4);
	OpStkvar	(x,	1);
	MakeComm	(0X104CB8,	"captions");
	MakeComm	(0X104CBC,	"title");
	MakeComm	(0X104CC0,	"entryCount");
	MakeCode	(x=0X104CD0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104CE4);
	OpStkvar	(x,	1);
	MakeCode	(0X104CF0);
	MakeCode	(x=0X104CFC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104D00);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104D0C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104D18);
	OpStkvar	(x,	1);
	MakeCode	(0X104D28);
	MakeDword	(0X104D34);
	MakeDword	(0X104D38);
	MakeDword	(x=0X104D3C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X104D40);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X104D44);
	MakeDword	(0X104D48);
	MakeCode	(0X104D4C);
	MakeName	(0X104D4C,	"rtInitLock");
	MakeCode	(0X104D58);
	MakeName	(0X104D58,	"rtAcquireLock");
	MakeComm	(0X104D6C,	"ns");
	MakeCode	(0X104D7C);
	MakeDword	(0X104D88);
	MakeCode	(0X104D8C);
	MakeName	(0X104D8C,	"rtReleaseLock");
	MakeCode	(0X104D98);
	MakeName	(0X104D98,	"rtAlignToPageSize");
	MakeCode	(x=0X104DA0);
	OpHex		(x,	1);
	MakeCode	(x=0X104DA4);
	OpHex		(x,	1);
	MakeCode	(x=0X104DB0);
	OpHex		(x,	1);
	MakeName	(0X104DB0,	"rtGetPageOfAddress");
	MakeCode	(x=0X104DB4);
	OpHex		(x,	1);
	MakeCode	(0X104DBC);
	MakeName	(0X104DBC,	"rtCheckRemoteMemoryRegionSafeForWrite");
	MakeCode	(x=0X104DC8);
	OpHex		(x,	1);
	MakeCode	(x=0X104DCC);
	OpHex		(x,	1);
	MakeCode	(x=0X104DD4);
	OpHex		(x,	1);
	MakeCode	(x=0X104DD8);
	OpHex		(x,	1);
	MakeComm	(0X104DE4,	"hProcess");
	MakeComm	(0X104DE8,	"addr");
	MakeComm	(0X104DEC,	"size");
	MakeCode	(0X104E04);
	MakeCode	(0X104E0C);
	MakeName	(0X104E0C,	"rtSafeCopyMemory");
	MakeComm	(0X104E18,	"hProcess");
	MakeComm	(0X104E1C,	"addr");
	MakeComm	(0X104E30,	"hProcess");
	MakeComm	(0X104E34,	"addr");
	MakeComm	(0X104E38,	"size");
	MakeDword	(0X104E60);
	MakeCode	(0X104E64);
	MakeCode	(0X104EAC);
	MakeCode	(0X104EB8);
	MakeCode	(0X104EC0);
	MakeCode	(0X104F04);
	MakeCode	(0X104F10);
	MakeCode	(0X104F18);
	MakeCode	(x=0X104F20);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104F24);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104F28);
	OpStkvar	(x,	1);
	MakeCode	(0X104F34);
	MakeName	(0X104F34,	"rtGetFileSize");
	MakeComm	(0X104F38,	"archive");
	MakeCode	(x=0X104F44);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104F4C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104F50);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104F54);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104F58);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X104F64);
	OpStkvar	(x,	1);
	MakeComm	(0X104F74,	"openflags");
	MakeCode	(x=0X104F74);
	OpStkvar	(x,	1);
	MakeComm	(0X104F7C,	"attributes");
	MakeCode	(x=0X104F7C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104F88);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X104F90,	"handle");
	MakeComm	(0X104F94,	"out");
	MakeCode	(x=0X104F94);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104FB8);
	OpStkvar	(x,	1);
	MakeCode	(0X104FC0);
	MakeComm	(0X104FC4,	"size");
	MakeCode	(x=0X104FC4);
	OpStkvar	(x,	1);
	MakeComm	(0X104FC8,	"handle");
	MakeCode	(x=0X104FC8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X104FD4);
	OpStkvar	(x,	1);
	MakeComm	(0X104FEC,	"handle");
	MakeCode	(x=0X104FEC);
	OpStkvar	(x,	1);
	MakeDword	(x=0X105010);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X105014);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X105018);
	MakeDword	(0X10501C);
	MakeCode	(0X105020);
	MakeName	(0X105020,	"rtLoadFileToBuffer");
	MakeComm	(0X105024,	"archive");
	MakeCode	(x=0X105038);
	OpStkvar	(x,	1);
	MakeCode	(x=0X105040);
	OpStkvar	(x,	1);
	MakeCode	(x=0X105044);
	OpStkvar	(x,	1);
	MakeCode	(x=0X105048);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10504C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X105058);
	OpStkvar	(x,	1);
	MakeComm	(0X105068,	"openflags");
	MakeCode	(x=0X105068);
	OpStkvar	(x,	1);
	MakeComm	(0X105070,	"attributes");
	MakeCode	(x=0X105070);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10507C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X105084,	"handle");
	MakeComm	(0X105088,	"out");
	MakeCode	(x=0X105088);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1050AC);
	OpStkvar	(x,	1);
	MakeCode	(0X1050B4);
	MakeComm	(0X1050B8,	"size");
	MakeCode	(x=0X1050B8);
	OpStkvar	(x,	1);
	MakeComm	(0X1050BC,	"handle");
	MakeCode	(x=0X1050BC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1050DC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1050F8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1050FC);
	OpStkvar	(x,	1);
	MakeComm	(0X105100,	"buffer");
	MakeCode	(x=0X105100);
	OpStkvar	(x,	1);
	MakeComm	(0X105104,	"size");
	MakeCode	(x=0X105104);
	OpStkvar	(x,	1);
	MakeComm	(0X10512C,	"handle");
	MakeCode	(x=0X10512C);
	OpStkvar	(x,	1);
	MakeDword	(x=0X105150);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X105154);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X105158);
	MakeDword	(0X10515C);
	MakeDword	(0X105160);
	MakeDword	(0X105164);
	MakeCode	(0X105168);
	MakeComm	(0X105178,	"thread");
	MakeCode	(x=0X105178);
	OpStkvar	(x,	1);
	MakeComm	(0X10517C,	"process");
	MakeComm	(0X105180,	"threadId");
	MakeCode	(x=0X1051A4);
	OpStkvar	(x,	1);
	MakeComm	(0X1051D0,	"handle");
	MakeCode	(x=0X1051D0);
	OpStkvar	(x,	1);
	MakeDword	(0X1051E4);
	MakeCode	(0X1051E8);
	MakeName	(0X1051E8,	"rtGenerateJumpCode");
	MakeDword	(0X1051FC);
	MakeCode	(0X105200);
	MakeName	(0X105200,	"rtFlushInstructionCache");
	MakeComm	(0X105204,	"size");
	MakeComm	(0X105208,	"handle");
	MakeComm	(0X10520C,	"addr");
	MakeDword	(0X105214);
	MakeName	(0X105214,	"handle");
	MakeCode	(0X105218);
	MakeName	(0X105218,	"rtInitHook");
	MakeComm	(0X105238,	"addr");
	MakeComm	(0X10523C,	"size");
	MakeComm	(0X105264,	"ptr");
	MakeComm	(0X105280,	"size");
	MakeDword	(0X10528C);
	MakeCode	(0X105290);
	MakeName	(0X105290,	"rtEnableHook");
	MakeComm	(0X1052BC,	"size");
	MakeComm	(0X1052C0,	"ptr");
	MakeCode	(0X1052D4);
	MakeName	(0X1052D4,	"rtDisableHook");
	MakeComm	(0X105300,	"size");
	MakeComm	(0X105304,	"ptr");
	MakeCode	(0X105318);
	MakeComm	(0X10531C,	"archive");
	MakeCode	(x=0X10532C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X105334);
	OpStkvar	(x,	1);
	MakeCode	(x=0X105338);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10533C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X105340);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X105348);
	OpStkvar	(x,	1);
	MakeComm	(0X105358,	"attributes");
	MakeCode	(x=0X105358);
	OpStkvar	(x,	1);
	MakeComm	(0X105360,	"openflags");
	MakeCode	(x=0X105360);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10536C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X105374,	"handle");
	MakeComm	(0X105378,	"out");
	MakeCode	(x=0X105378);
	OpStkvar	(x,	1);
	MakeCode	(x=0X105384);
	OpStkvar	(x,	1);
	MakeDword	(x=0X105390);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X105394);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X105398);
	MakeCode	(0X1053CC);
	MakeCode	(x=0X1053E4);
	OpStkvar	(x,	1);
	MakeComm	(0X1053E8,	"size");
	MakeCode	(x=0X1053E8);
	OpStkvar	(x,	1);
	MakeComm	(0X1053EC,	"flushFlags");
	MakeCode	(x=0X1053FC);
	OpStkvar	(x,	1);
	MakeCode	(0X105408);
	MakeName	(0X105408,	"j_FSFILE_Close");
	MakeCode	(0X10540C);
	MakeCode	(0X10542C);
	MakeCode	(0X10543C);
	MakeCode	(0X105544);
	MakeCode	(x=0X105548);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10554C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X105550);
	OpHex		(x,	1);
	MakeCode	(0X1055BC);
	MakeCode	(x=0X1055DC);
	OpHex		(x,	1);
	MakeCode	(0X1055E4);
	MakeCode	(x=0X1055FC);
	OpHex		(x,	1);
	MakeCode	(x=0X105608);
	OpHex		(x,	1);
	MakeCode	(x=0X105614);
	OpHex		(x,	1);
	MakeCode	(0X10561C);
	MakeCode	(x=0X105630);
	OpHex		(x,	1);
	MakeCode	(x=0X105640);
	OpHex		(x,	1);
	MakeCode	(x=0X105644);
	OpHex		(x,	1);
	MakeCode	(0X105660);
	MakeCode	(0X105670);
	MakeCode	(0X105674);
	MakeCode	(x=0X105684);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X1056B0);
	MakeDword	(x=0X1056BC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X1056C0);
	MakeCode	(x=0X1056C8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1056E8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1056F8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X105704);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X105718);
	OpStkvar	(x,	1);
	MakeCode	(x=0X105724);
	OpStkvar	(x,	1);
	MakeCode	(x=0X105730);
	OpStkvar	(x,	1);
	MakeCode	(x=0X105750);
	OpHex		(x,	1);
	MakeCode	(x=0X105754);
	OpStkvar	(x,	1);
	MakeCode	(x=0X105758);
	OpStkvar	(x,	1);
	MakeCode	(x=0X105770);
	OpStkvar	(x,	1);
	MakeCode	(x=0X105774);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X105788);
	OpStkvar	(x,	1);
	MakeCode	(x=0X105790);
	OpStkvar	(x,	1);
	MakeCode	(x=0X105794);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1057AC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1057B8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1057C8);
	OpHex		(x,	1);
	MakeCode	(x=0X1057F0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1057F4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1057FC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10580C);
	OpStkvar	(x,	1);
	MakeDword	(x=0X105840);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X105844);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X105848);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X10584C);
	MakeDword	(x=0X105850);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X105854);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X105858);
	MakeDword	(0X10585C);
	MakeCode	(0X105860);
	MakeDword	(0X1058C4);
	MakeCode	(0X1058C8);
	MakeCode	(x=0X1058D0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1058D8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1058EC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X105904);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(0X10591C);
	MakeDword	(x=0X105920);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X105924);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X105928);
	MakeDword	(x=0X10592C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X105930);
	MakeDword	(x=0X105934);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X105938);
	MakeCode	(x=0X10593C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X105940);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10594C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X105954);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10595C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X105964);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10596C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X105974);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10597C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X105984);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X105990);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X105994);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X105998);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X10599C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1059A0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1059A4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1059A8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1059AC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1059B0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1059B4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X1059B8);
	MakeCode	(x=0X1059C8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X1059E8);
	MakeDword	(x=0X1059F0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X1059F4);
	MakeCode	(x=0X105A1C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X105A28,	"session");
	MakeDword	(0X105A3C);
	MakeDword	(x=0X105A40);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X105A44);
	MakeCode	(x=0X105A4C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X105A7C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X105A80);
	MakeCode	(x=0X105A88);
	OpStkvar	(x,	1);
	MakeComm	(0X105A8C,	"my_perm");
	MakeComm	(0X105A9C,	"other_perm");
	MakeCode	(x=0X105A9C);
	OpStkvar	(x,	1);
	MakeComm	(0X105AA0,	"addr");
	MakeComm	(0X105AA4,	"size");
	MakeComm	(0X105AB0,	"handleptr");
	MakeComm	(0X105AB8,	"out");
	MakeCode	(x=0X105AB8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X105ABC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X105ACC);
	OpStkvar	(x,	1);
	MakeDword	(x=0X105AE0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X105AE4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0X105AE8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X105AEC);
	OpOff		(x,	1,	0X10B490);
	OpOff		(x,	129,	0X10B490);
	MakeDword	(x=0X105AF4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X105AF8);
	MakeCode	(x=0X105B14);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X105B2C,	"session");
	MakeCode	(0X105B58);
	MakeDword	(0X105B60);
	MakeDword	(x=0X105B64);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X105B68);
	MakeCode	(x=0X105B7C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X105B8C,	"session");
	MakeDword	(0X105BC0);
	MakeDword	(x=0X105BC4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X105BC8);
	MakeCode	(x=0X105BE0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(0X105C28);
	MakeDword	(x=0X105C2C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X105C30);
	MakeCode	(x=0X105C48);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X105C5C,	"session");
	MakeDword	(0X105C90);
	MakeDword	(x=0X105C94);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X105C98);
	MakeCode	(x=0X105CB0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X105CE0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X105CF8,	"session");
	MakeCode	(x=0X105D48);
	OpStkvar	(x,	1);
	MakeCode	(x=0X105D58);
	OpStkvar	(x,	1);
	MakeCode	(0X105D7C);
	MakeDword	(0X105D90);
	MakeDword	(x=0X105D94);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X105D98);
	MakeCode	(0X105D9C);
	MakeCode	(x=0X105DB4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X105DE0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X105DEC);
	OpOff		(x,	1,	0X10B490);
	OpOff		(x,	129,	0X10B490);
	MakeCode	(x=0X105E00);
	OpStkvar	(x,	1);
	MakeCode	(x=0X105E04);
	OpStkvar	(x,	1);
	MakeCode	(x=0X105E1C);
	OpHex		(x,	1);
	MakeComm	(0X105E30,	"session");
	MakeDword	(x=0X105E64);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X105E68);
	MakeCode	(0X105E6C);
	MakeCode	(x=0X105E90);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X105EB8);
	OpOff		(x,	1,	0X10B490);
	OpOff		(x,	129,	0X10B490);
	MakeCode	(x=0X105EE4);
	OpHex		(x,	1);
	MakeDword	(x=0X105F34);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X105F38);
	MakeCode	(0X105F3C);
	MakeCode	(x=0X105F54);
	OpStkvar	(x,	1);
	MakeCode	(x=0X105F58);
	OpStkvar	(x,	1);
	MakeCode	(x=0X105F60);
	OpStkvar	(x,	1);
	MakeCode	(x=0X105F8C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X105F9C);
	OpHex		(x,	1);
	MakeComm	(0X105FBC,	"session");
	MakeCode	(x=0X105FC8);
	OpHex		(x,	1);
	MakeCode	(x=0X106010);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106020);
	OpStkvar	(x,	1);
	MakeCode	(0X106044);
	MakeDword	(0X106058);
	MakeDword	(x=0X10605C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X106060);
	MakeCode	(x=0X106074);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106078);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10607C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106084);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1060B4);
	OpHex		(x,	1);
	MakeCode	(x=0X1060C0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1060D0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1060DC);
	OpHex		(x,	1);
	MakeComm	(0X1060FC,	"session");
	MakeCode	(x=0X106100);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106104);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106118);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10611C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106158);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106168);
	OpStkvar	(x,	1);
	MakeCode	(0X10618C);
	MakeDword	(0X1061A0);
	MakeDword	(x=0X1061A4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X1061A8);
	MakeCode	(x=0X1061B4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1061BC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1061CC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1061D8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1061E8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1061F8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106210);
	OpOff		(x,	1,	0X10B490);
	OpOff		(x,	129,	0X10B490);
	MakeCode	(x=0X106218);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106228);
	OpStkvar	(x,	1);
	MakeCode	(0X106234);
	MakeCode	(x=0X106248);
	OpHex		(x,	1);
	MakeCode	(x=0X106254);
	OpHex		(x,	1);
	MakeCode	(x=0X10625C);
	OpHex		(x,	1);
	MakeComm	(0X106278,	"session");
	MakeDword	(x=0X1062B4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X1062B8);
	MakeCode	(0X1062BC);
	MakeCode	(x=0X1062C8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1062D0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1062E0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1062EC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1062FC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10630C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106324);
	OpOff		(x,	1,	0X10B490);
	OpOff		(x,	129,	0X10B490);
	MakeCode	(x=0X10632C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10633C);
	OpStkvar	(x,	1);
	MakeCode	(0X106348);
	MakeCode	(x=0X106360);
	OpHex		(x,	1);
	MakeCode	(x=0X106364);
	OpHex		(x,	1);
	MakeCode	(x=0X10636C);
	OpHex		(x,	1);
	MakeCode	(x=0X106374);
	OpHex		(x,	1);
	MakeComm	(0X106390,	"session");
	MakeDword	(x=0X1063CC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X1063D0);
	MakeCode	(x=0X1063D4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1063DC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1063E0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1063E8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1063F0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1063F4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1063F8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106400);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106408);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10640C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106414);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10641C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106420);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106424);
	OpStkvar	(x,	1);
	MakeCode	(0X10642C);
	MakeCode	(x=0X106434);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106438);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106444);
	OpStkvar	(x,	1);
	MakeCode	(0X106448);
	MakeCode	(x=0X106450);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106454);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106460);
	OpStkvar	(x,	1);
	MakeCode	(0X106464);
	MakeCode	(x=0X106494);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1064A4);
	OpHex		(x,	1);
	MakeCode	(0X106500);
	MakeCode	(0X10650C);
	MakeDword	(0X106514);
	MakeDword	(x=0X106518);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X10651C);
	MakeCode	(x=0X106544);
	OpHex		(x,	1);
	MakeCode	(x=0X106548);
	OpHex		(x,	1);
	MakeCode	(x=0X106550);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(0X1065A4);
	MakeDword	(x=0X1065A8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X1065AC);
	MakeCode	(x=0X1065D0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1065DC);
	OpOff		(x,	1,	0X10B490);
	OpOff		(x,	129,	0X10B490);
	MakeCode	(0X1065E4);
	MakeCode	(x=0X106600);
	OpHex		(x,	1);
	MakeDword	(x=0X10666C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X106670);
	MakeCode	(0X106674);
	MakeCode	(x=0X106688);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(0X1066CC);
	MakeDword	(x=0X1066D0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X1066D4);
	MakeCode	(x=0X1066E4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X106710);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X106714);
	MakeCode	(x=0X106740);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X106798);
	OpOff		(x,	1,	0X10B490);
	OpOff		(x,	129,	0X10B490);
	MakeCode	(0X1067A4);
	MakeCode	(0X1067EC);
	MakeDword	(0X1067F8);
	MakeDword	(x=0X1067FC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X106800);
	MakeCode	(0X106804);
	MakeCode	(x=0X106830);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X106888);
	OpOff		(x,	1,	0X10B490);
	OpOff		(x,	129,	0X10B490);
	MakeCode	(0X106894);
	MakeCode	(0X1068DC);
	MakeDword	(0X1068E8);
	MakeDword	(x=0X1068EC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X1068F0);
	MakeCode	(x=0X1068F4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeName	(0X1068F4,	"exitSrv");
	MakeComm	(0X106900,	"handle");
	MakeDword	(x=0X10691C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X106920);
	MakeName	(0X106920,	"srv_RegisterClient");
	MakeCode	(x=0X106928);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X106944,	"session");
	MakeDword	(x=0X106958);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X10695C);
	MakeCode	(0X106960);
	MakeName	(0X106960,	"initSrv");
	MakeComm	(0X106964,	"out");
	MakeCode	(x=0X106964);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X106968);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X106978,	"handleptr");
	MakeCode	(x=0X106978);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X106984);
	MakeDword	(x=0X10698C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeName	(0X10698C,	"handleptr");
	MakeDword	(x=0X106990);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeName	(0X106990,	"portName");
	MakeCode	(0X106994);
	MakeName	(0X106994,	"srv_getServiceHandle");
	MakeCode	(x=0X1069A0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1069C8);
	OpHex		(x,	1);
	MakeComm	(0X1069F4,	"session");
	MakeCode	(0X106A10);
	MakeDword	(x=0X106A18);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X106A1C);
	MakeCode	(0X106A20);
	MakeName	(0X106A20,	"getThreadCommandBuffer");
	MakeCode	(0X106A2C);
	MakeName	(0X106A2C,	"svcControlMemory");
	MakeCode	(x=0X106A30);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106A34);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106A3C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106A44);
	OpStkvar	(x,	1);
	MakeCode	(0X106A4C);
	MakeName	(0X106A4C,	"svcExitProcess");
	MakeCode	(0X106A54);
	MakeName	(0X106A54,	"svcCreateThread");
	MakeCode	(x=0X106A58);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106A5C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106A64);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106A6C);
	OpStkvar	(x,	1);
	MakeCode	(0X106A74);
	MakeName	(0X106A74,	"svcExitThread");
	MakeCode	(0X106A7C);
	MakeName	(0X106A7C,	"svcSleepThread");
	MakeCode	(x=0X106A84);
	OpStkvar	(x,	1);
	MakeName	(0X106A84,	"svcCreateMutex");
	MakeCode	(x=0X106A8C);
	OpStkvar	(x,	1);
	MakeCode	(0X106A98);
	MakeName	(0X106A98,	"svcReleaseMutex");
	MakeCode	(x=0X106AA0);
	OpStkvar	(x,	1);
	MakeName	(0X106AA0,	"svcReleaseSemaphore");
	MakeCode	(x=0X106AA8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106AB4);
	OpStkvar	(x,	1);
	MakeName	(0X106AB4,	"svcCreateEvent");
	MakeCode	(x=0X106ABC);
	OpStkvar	(x,	1);
	MakeCode	(0X106AC8);
	MakeName	(0X106AC8,	"svcSignalEvent");
	MakeCode	(0X106AD0);
	MakeName	(0X106AD0,	"svcClearEvent");
	MakeCode	(x=0X106AD8);
	OpStkvar	(x,	1);
	MakeName	(0X106AD8,	"svcCreateMemoryBlock");
	MakeCode	(x=0X106ADC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106AE4);
	OpStkvar	(x,	1);
	MakeCode	(0X106AF0);
	MakeName	(0X106AF0,	"svcMapMemoryBlock");
	MakeCode	(0X106AF8);
	MakeName	(0X106AF8,	"svcUnmapMemoryBlock");
	MakeCode	(0X106B00);
	MakeName	(0X106B00,	"svcArbitrateAddress");
	MakeCode	(0X106B08);
	MakeName	(0X106B08,	"svcCloseHandle");
	MakeCode	(0X106B10);
	MakeName	(0X106B10,	"svcWaitSynchronization");
	MakeCode	(x=0X106B18);
	OpStkvar	(x,	1);
	MakeName	(0X106B18,	"svcWaitSynchronizationN");
	MakeCode	(x=0X106B20);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106B24);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106B30);
	OpStkvar	(x,	1);
	MakeCode	(0X106B38);
	MakeName	(0X106B38,	"svcGetSystemTick");
	MakeCode	(0X106B40);
	MakeName	(0X106B40,	"svcGetSystemInfo");
	MakeCode	(x=0X106B48);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106B54);
	OpStkvar	(x,	1);
	MakeCode	(0X106B5C);
	MakeName	(0X106B5C,	"svcGetProcessInfo");
	MakeCode	(x=0X106B64);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106B70);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106B78);
	OpStkvar	(x,	1);
	MakeName	(0X106B78,	"svcConnectToPort");
	MakeCode	(x=0X106B80);
	OpStkvar	(x,	1);
	MakeCode	(0X106B8C);
	MakeName	(0X106B8C,	"svcSendSyncRequest");
	MakeCode	(x=0X106B94);
	OpStkvar	(x,	1);
	MakeName	(0X106B94,	"svcGetProcessId");
	MakeCode	(x=0X106B9C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106BA8);
	OpStkvar	(x,	1);
	MakeName	(0X106BA8,	"svcGetThreadId");
	MakeCode	(x=0X106BB0);
	OpStkvar	(x,	1);
	MakeCode	(0X106BBC);
	MakeName	(0X106BBC,	"svcSetThreadIdealProcessor");
	MakeCode	(x=0X106BC4);
	OpStkvar	(x,	1);
	MakeName	(0X106BC4,	"svcOpenThread");
	MakeCode	(x=0X106BCC);
	OpStkvar	(x,	1);
	MakeCode	(0X106BD8);
	MakeName	(0X106BD8,	"svcFlushProcessDataCache");
	MakeCode	(0X106BE0);
	MakeName	(0X106BE0,	"svcInvalidateProcessDataCache");
	MakeCode	(0X106BE8);
	MakeName	(0X106BE8,	"svcQueryMemory");
	MakeCode	(0X106BF0);
	MakeName	(0X106BF0,	"svcAddCodeSegment");
	MakeCode	(0X106BF8);
	MakeName	(0X106BF8,	"svcTerminateProcess");
	MakeCode	(x=0X106C00);
	OpStkvar	(x,	1);
	MakeName	(0X106C00,	"svcOpenProcess");
	MakeCode	(x=0X106C08);
	OpStkvar	(x,	1);
	MakeCode	(0X106C14);
	MakeName	(0X106C14,	"svcControlProcessMemory");
	MakeCode	(x=0X106C18);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106C1C);
	OpStkvar	(x,	1);
	MakeCode	(0X106C2C);
	MakeName	(0X106C2C,	"svcMapProcessMemory");
	MakeCode	(0X106C34);
	MakeName	(0X106C34,	"svcStartInterProcessDma");
	MakeCode	(x=0X106C38);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106C3C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106C40);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106C54);
	OpStkvar	(x,	1);
	MakeName	(0X106C54,	"svcGetDmaState");
	MakeCode	(x=0X106C5C);
	OpStkvar	(x,	1);
	MakeCode	(0X106C68);
	MakeName	(0X106C68,	"svcBackdoor");
	MakeCode	(x=0X106C70);
	OpStkvar	(x,	1);
	MakeName	(0X106C70,	"svcGetProcessList");
	MakeCode	(x=0X106C78);
	OpStkvar	(x,	1);
	MakeCode	(x=0X106C84);
	OpStkvar	(x,	1);
	MakeName	(0X106C84,	"svcGetThreadList");
	MakeCode	(x=0X106C8C);
	OpStkvar	(x,	1);
	MakeCode	(0X106C98);
	MakeName	(0X106C98,	"svcGetThreadContext");
	MakeCode	(x=0X106CA0);
	OpStkvar	(x,	1);
	MakeName	(0X106CA0,	"svc_debugActiveProcess");
	MakeCode	(x=0X106CA8);
	OpStkvar	(x,	1);
	MakeCode	(0X106CB4);
	MakeName	(0X106CB4,	"svcReadProcessMemory");
	MakeCode	(0X106CBC);
	MakeName	(0X106CBC,	"svc_writeProcessMemory");
	MakeArray	(0X106CC4,	0XC);
	MakeName	(0X106CC4,	"nsDbgPrint_6");
	MakeCode	(0X106CD0);
	MakeCode	(0X106CE4);
	MakeCode	(0X106CE8);
	MakeCode	(0X106CF0);
	MakeCode	(x=0X106D1C);
	OpHex		(x,	1);
	MakeCode	(x=0X106D40);
	OpHex		(x,	1);
	MakeCode	(x=0X106D44);
	OpHex		(x,	1);
	MakeCode	(0X106D50);
	MakeCode	(x=0X106D58);
	OpHex		(x,	1);
	MakeCode	(x=0X106D5C);
	OpHex		(x,	1);
	MakeCode	(x=0X106D90);
	OpHex		(x,	1);
	MakeCode	(x=0X106D98);
	OpHex		(x,	1);
	MakeCode	(x=0X106D9C);
	OpHex		(x,	1);
	MakeCode	(x=0X106DA8);
	OpHex		(x,	1);
	MakeCode	(x=0X106DAC);
	OpHex		(x,	1);
	MakeCode	(x=0X106DB0);
	OpHex		(x,	1);
	MakeDword	(0X106DD0);
	MakeDword	(0X106DD4);
	MakeCode	(0X106DD8);
	MakeCode	(x=0X106DE0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X106E20);
	OpOff		(x,	1,	0X108618);
	OpOff		(x,	129,	0X108618);
	MakeComm	(0X106E38,	"dst");
	MakeCode	(x=0X106E38);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X106E40,	"buf");
	MakeCode	(x=0X106E48);
	OpOff		(x,	1,	0X108618);
	OpOff		(x,	129,	0X108618);
	MakeCode	(x=0X106E4C);
	OpOff		(x,	1,	0X108618);
	OpOff		(x,	129,	0X108618);
	MakeCode	(x=0X106E54);
	OpOff		(x,	1,	0X108618);
	OpOff		(x,	129,	0X108618);
	MakeDword	(x=0X106E64);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X106E68);
	MakeDword	(0X106E6C);
	MakeDword	(0X106E70);
	MakeDword	(0X106E74);
	MakeDword	(x=0X106E78);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeName	(0X106E78,	"dst");
	MakeCode	(0X106E7C);
	MakeCode	(x=0X106EA0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(0X106ECC);
	MakeDword	(x=0X106ED0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X106ED4);
	MakeCode	(x=0X106ED8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X106EE8);
	OpOff		(x,	1,	0X10B49C);
	OpOff		(x,	129,	0X10B49C);
	MakeCode	(x=0X106EEC);
	OpOff		(x,	1,	0X10B49C);
	OpOff		(x,	129,	0X10B49C);
	MakeCode	(x=0X106EF0);
	OpOff		(x,	1,	0X10B49C);
	OpOff		(x,	129,	0X10B49C);
	MakeCode	(0X106F10);
	MakeCode	(x=0X106F18);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X106F1C);
	OpOff		(x,	1,	0X10B49C);
	OpOff		(x,	129,	0X10B49C);
	MakeCode	(x=0X106F20);
	OpOff		(x,	1,	0X108618);
	OpOff		(x,	129,	0X108618);
	MakeCode	(x=0X106F34);
	OpOff		(x,	1,	0X10B49C);
	OpOff		(x,	129,	0X10B49C);
	MakeCode	(0X106F3C);
	MakeCode	(x=0X106F48);
	OpOff		(x,	1,	0X10B49C);
	OpOff		(x,	129,	0X10B49C);
	MakeCode	(x=0X106F6C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X106F78);
	OpOff		(x,	1,	0X108618);
	OpOff		(x,	129,	0X108618);
	MakeCode	(0X106F8C);
	MakeCode	(x=0X106F94);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X106FC0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X106FC4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X106FC8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X106FCC);
	MakeCode	(x=0X106FD4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X106FDC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X106FE4);
	OpOff		(x,	1,	0X108618);
	OpOff		(x,	129,	0X108618);
	MakeCode	(x=0X106FEC);
	OpOff		(x,	1,	0X10B49C);
	OpOff		(x,	129,	0X10B49C);
	MakeDword	(x=0X106FF4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X106FF8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0X106FFC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X107004);
	OpOff		(x,	1,	0X10B49C);
	OpOff		(x,	129,	0X10B49C);
	MakeCode	(x=0X10700C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X107010,	"callback");
	MakeCode	(x=0X107010);
	OpOff		(x,	1,	0X108618);
	OpOff		(x,	129,	0X108618);
	MakeDword	(x=0X107018);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X10701C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X107020);
	MakeCode	(x=0X107028);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X107030);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X107034,	"callback");
	MakeCode	(x=0X107034);
	OpOff		(x,	1,	0X108618);
	OpOff		(x,	129,	0X108618);
	MakeCode	(x=0X10703C);
	OpOff		(x,	1,	0X10B49C);
	OpOff		(x,	129,	0X10B49C);
	MakeDword	(x=0X107044);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X107048);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X10704C);
	MakeCode	(x=0X107054);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10705C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X107060);
	OpOff		(x,	1,	0X10B49C);
	OpOff		(x,	129,	0X10B49C);
	MakeComm	(0X107064,	"callback");
	MakeCode	(x=0X107064);
	OpOff		(x,	1,	0X108618);
	OpOff		(x,	129,	0X108618);
	MakeCode	(x=0X10706C);
	OpOff		(x,	1,	0X10B49C);
	OpOff		(x,	129,	0X10B49C);
	MakeDword	(x=0X107074);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X107078);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0X10707C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10708C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X107090,	"callback");
	MakeCode	(x=0X107090);
	OpOff		(x,	1,	0X108618);
	OpOff		(x,	129,	0X108618);
	MakeDword	(x=0X107098);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X10709C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0X1070A0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1070AC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X1070B0,	"callback");
	MakeCode	(x=0X1070B0);
	OpOff		(x,	1,	0X108618);
	OpOff		(x,	129,	0X108618);
	MakeDword	(x=0X1070B8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1070BC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X1070C0);
	MakeCode	(0X1070C4);
	MakeCode	(0X1070D8);
	MakeCode	(0X1070EC);
	MakeCode	(0X107100);
	MakeCode	(0X107104);
	MakeComm	(0X107108,	"size");
	MakeComm	(0X10710C,	"addr");
	MakeCode	(x=0X10710C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10711C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X107128);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X10712C);
	MakeName	(0X10712C,	"debounceKey");
	MakeCode	(x=0X107138);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10713C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X107144);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10714C);
	OpStkvar	(x,	1);
	MakeDword	(0X10715C);
	MakeCode	(0X107160);
	MakeCode	(x=0X107168);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10716C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X107174);
	OpStkvar	(x,	1);
	MakeCode	(0X107188);
	MakeCode	(x=0X10718C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X107190);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X1071BC,	"handle");
	MakeComm	(0X1071DC,	"size");
	MakeComm	(0X1071E0,	"addr");
	MakeDword	(x=0X1071EC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1071F0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X1071F4);
	MakeDword	(0X1071F8);
	MakeDword	(0X1071FC);
	MakeCode	(0X107200);
	MakeCode	(x=0X107204);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X10721C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X107220);
	MakeCode	(x=0X107224);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X107228);
	OpOff		(x,	1,	0X10B51C);
	OpOff		(x,	129,	0X10B51C);
	MakeCode	(x=0X107234);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X107238);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10723C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X107254);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X107268);
	OpOff		(x,	1,	0X10B52C);
	OpOff		(x,	129,	0X10B52C);
	MakeCode	(x=0X107270);
	OpOff		(x,	1,	0X10B52C);
	OpOff		(x,	129,	0X10B52C);
	MakeCode	(x=0X107278);
	OpOff		(x,	1,	0X10B52C);
	OpOff		(x,	129,	0X10B52C);
	MakeCode	(x=0X107280);
	OpOff		(x,	1,	0X10B52C);
	OpOff		(x,	129,	0X10B52C);
	MakeComm	(0X10729C,	"y");
	MakeComm	(0X1072A8,	"x");
	MakeComm	(0X1072C8,	"xs");
	MakeComm	(0X1072CC,	"ys");
	MakeDword	(x=0X1072E4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1072E8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1072EC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1072F0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X1072F4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X1072F8);
	MakeDword	(0X1072FC);
	MakeCode	(x=0X107300);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X107304);
	OpOff		(x,	1,	0X10B51C);
	OpOff		(x,	129,	0X10B51C);
	MakeCode	(x=0X107310);
	OpOff		(x,	1,	0X10B51C);
	OpOff		(x,	129,	0X10B51C);
	MakeCode	(x=0X107318);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X10731C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X107330);
	OpOff		(x,	1,	0X10B52C);
	OpOff		(x,	129,	0X10B52C);
	MakeCode	(x=0X10733C);
	OpOff		(x,	1,	0X10B52C);
	OpOff		(x,	129,	0X10B52C);
	MakeCode	(x=0X107348);
	OpOff		(x,	1,	0X10B52C);
	OpOff		(x,	129,	0X10B52C);
	MakeCode	(x=0X107354);
	OpOff		(x,	1,	0X10B52C);
	OpOff		(x,	129,	0X10B52C);
	MakeDword	(x=0X107360);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X107364);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X107368);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X10736C);
	MakeCode	(0X107380);
	MakeCode	(0X107390);
	MakeCode	(x=0X107398);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X1073A4);
	MakeCode	(x=0X1073A8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X1073C8);
	MakeDword	(x=0X1073CC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0X1073D0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeName	(0X1073D0,	"getKey");
	MakeDword	(x=0X1073EC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X1073F0);
	MakeName	(0X1073F0,	"waitKey");
	MakeCode	(0X107420);
	MakeName	(0X107420,	"showMenu");
	MakeCode	(x=0X10743C);
	OpStkvar	(x,	1);
	MakeComm	(0X107440,	"x");
	MakeComm	(0X107444,	"y");
	MakeComm	(0X107448,	"xs");
	MakeComm	(0X10744C,	"ys");
	MakeComm	(0X107458,	"x");
	MakeComm	(0X10745C,	"y");
	MakeComm	(0X107460,	"g");
	MakeCode	(x=0X107460);
	OpStkvar	(x,	1);
	MakeComm	(0X107464,	"b");
	MakeCode	(x=0X107464);
	OpStkvar	(x,	1);
	MakeComm	(0X107468,	"r");
	MakeComm	(0X10746C,	"s");
	MakeCode	(x=0X10746C);
	OpStkvar	(x,	1);
	MakeComm	(0X107478,	"g");
	MakeCode	(x=0X107478);
	OpStkvar	(x,	1);
	MakeComm	(0X10747C,	"b");
	MakeCode	(x=0X10747C);
	OpStkvar	(x,	1);
	MakeComm	(0X107480,	"x");
	MakeComm	(0X107484,	"r");
	MakeComm	(0X107488,	"y");
	MakeComm	(0X10748C,	"s");
	MakeCode	(x=0X1074CC);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1074D8);
	OpStkvar	(x,	1);
	MakeComm	(0X1074E0,	"r");
	MakeComm	(0X1074E4,	"y");
	MakeComm	(0X1074E8,	"g");
	MakeCode	(x=0X1074E8);
	OpStkvar	(x,	1);
	MakeComm	(0X1074EC,	"b");
	MakeCode	(x=0X1074EC);
	OpStkvar	(x,	1);
	MakeComm	(0X1074F0,	"s");
	MakeCode	(x=0X1074F0);
	OpStkvar	(x,	1);
	MakeComm	(0X1074F4,	"x");
	MakeCode	(0X107508);
	MakeCode	(0X107530);
	MakeCode	(0X107544);
	MakeCode	(0X10755C);
	MakeDword	(0X107568);
	MakeDword	(0X10756C);
	MakeDword	(x=0X107570);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeName	(0X107570,	"s");
	MakeCode	(x=0X107574);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X10758C,	"ns");
	MakeCode	(x=0X10759C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0X1075B4,	"x");
	MakeComm	(0X1075B8,	"y");
	MakeComm	(0X1075BC,	"xs");
	MakeComm	(0X1075C0,	"ys");
	MakeComm	(0X1075C8,	"x");
	MakeComm	(0X1075CC,	"y");
	MakeComm	(0X1075D0,	"r");
	MakeComm	(0X1075D4,	"g");
	MakeCode	(x=0X1075D4);
	OpStkvar	(x,	1);
	MakeComm	(0X1075D8,	"b");
	MakeCode	(x=0X1075D8);
	OpStkvar	(x,	1);
	MakeComm	(0X1075DC,	"s");
	MakeComm	(0X1075E8,	"x");
	MakeComm	(0X1075EC,	"y");
	MakeComm	(0X1075F0,	"b");
	MakeCode	(x=0X1075F0);
	OpStkvar	(x,	1);
	MakeComm	(0X1075F4,	"g");
	MakeCode	(x=0X1075F4);
	OpStkvar	(x,	1);
	MakeComm	(0X1075F8,	"r");
	MakeComm	(0X1075FC,	"s");
	MakeCode	(x=0X1075FC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X107624);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X107628);
	MakeDword	(x=0X10762C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X107630);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X107634);
	MakeName	(0X107634,	"showDbg");
	MakeCode	(x=0X107670);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X107688);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10768C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X107694);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10769C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1076B4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1076B8);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1076C0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1076C8);
	OpStkvar	(x,	1);
	MakeDword	(x=0X1076D8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X1076DC);
	MakeCode	(0X1076E0);
	MakeCode	(x=0X107710);
	OpStkvar	(x,	1);
	MakeCode	(x=0X107744);
	OpStkvar	(x,	1);
	MakeCode	(0X107748);
	MakeCode	(x=0X107768);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1077B4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X1077E0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X10780C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X107810);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X107814);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0X107818);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X107838);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X10784C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X107850);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X107854);
	MakeCode	(0X107870);
	MakeCode	(x=0X107874);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X1078A0);
	MakeDword	(x=0X1078A8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X1078AC);
	MakeCode	(x=0X107924);
	OpHex		(x,	1);
	MakeCode	(x=0X107930);
	OpHex		(x,	1);
	MakeCode	(0X107980);
	MakeCode	(0X1079A8);
	MakeCode	(0X1079B0);
	MakeCode	(x=0X1079C0);
	OpHex		(x,	1);
	MakeCode	(0X1079E4);
	MakeCode	(0X107A04);
	MakeCode	(0X107A14);
	MakeCode	(0X107A24);
	MakeCode	(0X107A2C);
	MakeCode	(0X107A3C);
	MakeCode	(x=0X107A5C);
	OpHex		(x,	1);
	MakeCode	(x=0X107A78);
	OpStkvar	(x,	1);
	MakeCode	(x=0X107A80);
	OpStkvar	(x,	1);
	MakeCode	(x=0X107A88);
	OpStkvar	(x,	1);
	MakeCode	(x=0X107A8C);
	OpStkvar	(x,	1);
	MakeCode	(x=0X107AB4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X107ADC);
	OpHex		(x,	1);
	MakeCode	(x=0X107AE0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X107AF8);
	OpHex		(x,	1);
	MakeCode	(x=0X107B04);
	OpHex		(x,	1);
	MakeCode	(0X107B2C);
	MakeCode	(x=0X107B34);
	OpStkvar	(x,	1);
	MakeCode	(0X107B60);
	MakeCode	(0X107B68);
	MakeCode	(x=0X107B70);
	OpStkvar	(x,	1);
	MakeCode	(x=0X107B74);
	OpStkvar	(x,	1);
	MakeCode	(x=0X107B78);
	OpStkvar	(x,	1);
	MakeCode	(x=0X107B84);
	OpStkvar	(x,	1);
	MakeCode	(0X107B90);
	MakeCode	(x=0X107B98);
	OpStkvar	(x,	1);
	MakeCode	(x=0X107B9C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X107BA0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X107BA8);
	OpStkvar	(x,	1);
	MakeDword	(x=0X107BD0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X107BD4);
	MakeCode	(x=0X107BE0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X107C0C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X107C10);
	MakeCode	(x=0X107C1C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0X107C50);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X107C60);
	MakeCode	(0X107C94);
	MakeCode	(x=0X107CAC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X107CCC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X107CD0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X107CD4);
	MakeDword	(x=0X107CD8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0X107CDC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0X107D18);
	MakeCode	(0X107D48);
	MakeCode	(0X107D6C);
	MakeCode	(0X107D84);
	MakeDword	(x=0X107D8C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X107D90);
	MakeCode	(x=0X107D94);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0X107DB4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0X107DB8);
	MakeCode	(0X107E30);
	MakeCode	(0X107E44);
	MakeCode	(0X107E64);
	MakeCode	(0X107ECC);
	MakeCode	(0X107EE0);
	MakeName	(0X107EE0,	"memcpy");
	MakeCode	(x=0X107EF0);
	OpHex		(x,	1);
	MakeCode	(x=0X107F3C);
	OpHex		(x,	1);
	MakeCode	(x=0X107F40);
	OpHex		(x,	1);
	MakeCode	(x=0X107F7C);
	OpHex		(x,	1);
	MakeCode	(x=0X107F8C);
	OpHex		(x,	1);
	MakeCode	(0X107F94);
	MakeCode	(0X107FC0);
	MakeCode	(0X107FC8);
	MakeCode	(x=0X107FD0);
	OpHex		(x,	1);
	MakeName	(0X107FD0,	"memset");
	MakeCode	(x=0X107FE8);
	OpHex		(x,	1);
	MakeCode	(0X107FF4);
	MakeCode	(x=0X108004);
	OpHex		(x,	1);
	MakeCode	(x=0X108014);
	OpHex		(x,	1);
	MakeCode	(x=0X108054);
	OpHex		(x,	1);
	MakeCode	(x=0X108058);
	OpHex		(x,	1);
	MakeCode	(x=0X108088);
	OpHex		(x,	1);
	MakeCode	(x=0X108094);
	OpHex		(x,	1);
	MakeCode	(x=0X1080A0);
	OpHex		(x,	1);
	MakeCode	(0X1080BC);
	MakeCode	(x=0X1080C4);
	OpHex		(x,	1);
	MakeName	(0X1080C4,	"strcat");
	MakeDword	(0X108140);
	MakeDword	(0X108144);
	MakeCode	(0X108148);
	MakeName	(0X108148,	"strcmp");
	MakeCode	(x=0X10814C);
	OpHex		(x,	1);
	MakeCode	(x=0X108154);
	OpHex		(x,	1);
	MakeCode	(x=0X108158);
	OpHex		(x,	1);
	MakeCode	(x=0X10815C);
	OpHex		(x,	1);
	MakeCode	(x=0X10816C);
	OpHex		(x,	1);
	MakeCode	(x=0X108188);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1081CC);
	OpHex		(x,	1);
	MakeCode	(x=0X1081D4);
	OpStkvar	(x,	1);
	MakeCode	(x=0X1081DC);
	OpHex		(x,	1);
	MakeCode	(0X108200);
	MakeCode	(x=0X108214);
	OpHex		(x,	1);
	MakeCode	(x=0X108218);
	OpHex		(x,	1);
	MakeCode	(x=0X10822C);
	OpHex		(x,	1);
	MakeCode	(0X108260);
	MakeCode	(x=0X108268);
	OpHex		(x,	1);
	MakeCode	(0X10827C);
	MakeCode	(x=0X108280);
	OpHex		(x,	1);
	MakeCode	(0X108288);
	MakeCode	(0X1082C0);
	MakeCode	(0X1082D4);
	MakeCode	(x=0X1082E4);
	OpHex		(x,	1);
	MakeCode	(0X108318);
	MakeCode	(x=0X108320);
	OpHex		(x,	1);
	MakeCode	(x=0X108330);
	OpHex		(x,	1);
	MakeCode	(0X108338);
	MakeCode	(x=0X108344);
	OpHex		(x,	1);
	MakeCode	(x=0X108348);
	OpHex		(x,	1);
	MakeCode	(0X10836C);
	MakeName	(0X10836C,	"strcpy");
	MakeCode	(x=0X108374);
	OpHex		(x,	1);
	MakeCode	(x=0X10837C);
	OpHex		(x,	1);
	MakeCode	(x=0X108384);
	OpStkvar	(x,	1);
	MakeCode	(x=0X108394);
	OpStkvar	(x,	1);
	MakeCode	(x=0X108398);
	OpHex		(x,	1);
	MakeCode	(x=0X1083F4);
	OpHex		(x,	1);
	MakeCode	(x=0X108400);
	OpStkvar	(x,	1);
	MakeCode	(x=0X108404);
	OpStkvar	(x,	1);
	MakeCode	(x=0X10840C);
	OpHex		(x,	1);
	MakeCode	(x=0X108424);
	OpHex		(x,	1);
	MakeCode	(x=0X108430);
	OpHex		(x,	1);
	MakeCode	(x=0X10843C);
	OpHex		(x,	1);
	MakeCode	(0X108448);
	MakeCode	(x=0X10845C);
	OpHex		(x,	1);
	MakeName	(0X10845C,	"strlen");
	MakeCode	(x=0X108460);
	OpHex		(x,	1);
	MakeCode	(x=0X1084A0);
	OpHex		(x,	1);
	MakeCode	(x=0X1084A8);
	OpHex		(x,	1);
	MakeCode	(x=0X1084B0);
	OpHex		(x,	1);
	MakeCode	(0X1084BC);
	MakeName	(0X1084BC,	"__udivsi3");
	MakeCode	(x=0X1084D8);
	OpHex		(x,	1);
	MakeCode	(0X10855C);
	MakeCode	(0X108568);
	MakeCode	(0X1085A4);
	MakeCode	(0X1085B0);
	MakeName	(0X1085B0,	"__aeabi_uidivmod");
	MakeCode	(0X1085D0);
	MakeDword	(0X1085D4);
	MakeDword	(0X1085D8);
	MakeDword	(0X1085DC);
	MakeDword	(0X1085E0);
	MakeDword	(0X1085E4);
	MakeDword	(0X1085E8);
	MakeDword	(0X1085EC);
	MakeArray	(0X1085EC,	0X2);
	MakeDword	(0X1085F4);
	MakeDword	(0X1085F8);
	MakeDword	(0X1085FC);
	MakeDword	(0X108600);
	MakeName	(0X108600,	"sdmcArchive");
	MakeByte	(0X108604);
	MakeByte	(0X108605);
	MakeArray	(0X108605,	0X3);
	MakeDword	(0X108608);
	MakeDword	(0X10860C);
	MakeDword	(0X108610);
	MakeArray	(0X108610,	0X2);
	MakeDword	(0X108618);
	MakeDword	(0X10861C);
	MakeDword	(0X108620);
	MakeDword	(0X108624);
	MakeDword	(0X108628);
	MakeDword	(0X10862C);
	MakeDword	(0X108630);
	MakeDword	(0X108634);
	MakeDword	(0X108638);
	MakeArray	(0X108638,	0XC);
	MakeDword	(0X108668);
	MakeArray	(0X108668,	0X2);
	MakeDword	(0X108670);
	MakeArray	(0X108670,	0X2);
	MakeDword	(0X108678);
	MakeArray	(0X108678,	0X10);
	MakeDword	(x=0X1086B8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X1086BC);
	MakeArray	(0X1086BC,	0X2);
	MakeDword	(x=0X1086C4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X1086C8);
	MakeArray	(0X1086C8,	0X200);
	MakeDword	(0X108EC8);
	MakeArray	(0X108EC8,	0X195);
	MakeStr		(0X10951C,	0X10952D);
	MakeName	(0X10951C,	"aUsrLibLd_so_1");
	MakeByte	(0X10952D);
	MakeArray	(0X10952D,	0X3);
	MakeDword	(0X109530);
	MakeArray	(0X109530,	0X5);
	MakeDword	(x=0X109544);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X109548);
	MakeDword	(0X10954C);
	MakeArray	(0X10954C,	0X2);
	MakeDword	(x=0X109554);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X109558);
	MakeDword	(0X10955C);
	MakeArray	(0X10955C,	0X4);
	MakeDword	(0X10956C);
	MakeArray	(0X10956C,	0X4);
	MakeDword	(0X10957C);
	MakeArray	(0X10957C,	0X4);
	MakeDword	(0X10958C);
	MakeArray	(0X10958C,	0XA);
	MakeDword	(0X1095B4);
	MakeArray	(0X1095B4,	0XB);
	MakeDword	(0X1095E0);
	MakeArray	(0X1095E0,	0X2);
	MakeName	(0X1095E0,	"font");
	MakeDword	(0X1095E8);
	MakeArray	(0X1095E8,	0X4);
	MakeDword	(0X1095F8);
	MakeArray	(0X1095F8,	0XA);
	MakeDword	(0X109620);
	MakeArray	(0X109620,	0X9);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_1(void) {
        auto x;
#define id x

	MakeDword	(0X109644);
	MakeArray	(0X109644,	0X4);
	MakeDword	(0X109654);
	MakeArray	(0X109654,	0X62);
	MakeDword	(0X1097DC);
	MakeArray	(0X1097DC,	0X3);
	MakeDword	(0X1097E8);
	MakeArray	(0X1097E8,	0X17E);
	MakeCode	(0X109DE0);
	MakeDword	(0X109E0C);
	MakeDword	(x=0X109E10);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X109E14);
	MakeArray	(x,	0X13);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeByte	(0X109E60);
	MakeStr		(0X109E61,	0X109E66);
	MakeName	(0X109E61,	"aAcU");
	MakeStr		(0X109E66,	0X109E75);
	MakeName	(0X109E66,	"aPatchingSmdh");
	MakeStr		(0X109E75,	0X109E85);
	MakeName	(0X109E75,	"aFatal_Lr08x");
	MakeStr		(0X109E85,	0X109EAB);
	MakeName	(0X109E85,	"aFsuser_opendir");
	MakeStr		(0X109EAB,	0X109EBA);
	MakeName	(0X109EAB,	"aNoFileFound_");
	MakeStr		(0X109EBA,	0X109EBF);
	MakeName	(0X109EBA,	"aSS");
	MakeStr		(0X109EBF,	0X109EDC);
	MakeName	(0X109EBF,	"aOpenarchiveFai");
	MakeStr		(0X109EDC,	0X109EDE);
	MakeStr		(0X109EDE,	0X109EEA);
	MakeName	(0X109EDE,	"aDebug_flag");
	MakeStr		(0X109EEA,	0X109F01);
	MakeName	(0X109EEA,	"aInitCfgMemoryF");
	MakeStr		(0X109F01,	0X109F0A);
	MakeName	(0X109F01,	"aNtrMain");
	MakeStr		(0X109F0A,	0X109F25);
	MakeName	(0X109F0A,	"aFirmVersionNot");
	MakeStr		(0X109F25,	0X109F44);
	MakeName	(0X109F25,	"aHomemenuVersio");
	MakeStr		(0X109F44,	0X109F63);
	MakeName	(0X109F44,	"aFirmwareVersio");
	MakeStr		(0X109F63,	0X109F6D);
	MakeName	(0X109F63,	"aPid0_dmp");
	MakeStr		(0X109F6D,	0X109F77);
	MakeName	(0X109F6D,	"aPid2_dmp");
	MakeStr		(0X109F77,	0X109F81);
	MakeName	(0X109F77,	"aPid3_dmp");
	MakeStr		(0X109F81,	0X109F8B);
	MakeName	(0X109F81,	"aPidf_dmp");
	MakeStr		(0X109F8B,	0X109F98);
	MakeName	(0X109F8B,	"aAxiwram_dmp");
	MakeStr		(0X109F98,	0X109FE4);
	MakeName	(0X109F98,	"aCurrentFirmwar");
	MakeStr		(0X109FE4,	0X109FF3);
	MakeName	(0X109FE4,	"aKernelhaxDone");
	MakeStr		(0X109FF3,	0X10A004);
	MakeName	(0X109FF3,	"aHomemenuVerD");
	MakeStr		(0X10A004,	0X10A023);
	MakeName	(0X10A004,	"aSendRemainSize");
	MakeStr		(0X10A023,	0X10A042);
	MakeName	(0X10A023,	"aRecvRemainSize");
	MakeStr		(0X10A042,	0X10A058);
	MakeName	(0X10A042,	"aOpenfileFailed");
	MakeStr		(0X10A058,	0X10A072);
	MakeName	(0X10A058,	"aSavedToSSucces");
	MakeStr		(0X10A072,	0X10A089);
	MakeName	(0X10A072,	"aBpDAlreadyEnab");
	MakeStr		(0X10A089,	0X10A098);
	MakeName	(0X10A089,	"aBpDEnabled");
	MakeStr		(0X10A098,	0X10A0B0);
	MakeName	(0X10A098,	"aBpDAlreadyDisa");
	MakeStr		(0X10A0B0,	0X10A0C0);
	MakeName	(0X10A0B0,	"aBpDDisabled");
	MakeStr		(0X10A0C0,	0X10A0F4);
	MakeName	(0X10A0C0,	"aRtcheckremotem");
	MakeStr		(0X10A0F4,	0X10A119);
	MakeName	(0X10A0F4,	"aCodeBreakpoint");
	MakeStr		(0X10A119,	0X10A132);
	MakeName	(0X10A119,	"aInitBreakpoint");
	MakeStr		(0X10A132,	0X10A147);
	MakeName	(0X10A132,	"aOpenprocessF_1");
	MakeStr		(0X10A147,	0X10A159);
	MakeName	(0X10A147,	"aH08xP08x");
	MakeStr		(0X10A159,	0X10A165);
	MakeName	(0X10A159,	"aFreeidD");
	MakeStr		(0X10A165,	0X10A175);
	MakeName	(0X10A165,	"aSetResumeFlag");
	MakeStr		(0X10A175,	0X10A183);
	MakeName	(0X10A175,	"aInvalidBpid");
	MakeStr		(0X10A183,	0X10A18E);
	MakeName	(0X10A183,	"aArm11_bin");
	MakeStr		(0X10A18E,	0X10A1AA);
	MakeName	(0X10A18E,	"aFsfile_getsize");
	MakeStr		(0X10A1AA,	0X10A1C9);
	MakeName	(0X10A1AA,	"aSvc_controlmem");
	MakeStr		(0X10A1C9,	0X10A1E2);
	MakeName	(0X10A1C9,	"aFsfile_readFai");
	MakeStr		(0X10A1E2,	0X10A1FD);
	MakeName	(0X10A1E2,	"aProtectmemoryF");
	MakeStr		(0X10A1FD,	0X10A21A);
	MakeName	(0X10A1FD,	"aGetprocesslist");
	MakeStr		(0X10A21A,	0X10A237);
	MakeName	(0X10A21A,	"aGetprocessinfo");
	MakeStr		(0X10A237,	0X10A26C);
	MakeName	(0X10A237,	"aPid0x08xPname8");
	MakeStr		(0X10A26C,	0X10A282);
	MakeName	(0X10A26C,	"aEndOfProcessLi");
	MakeStr		(0X10A282,	0X10A29C);
	MakeName	(0X10A282,	"aOpenprocessF_2");
	MakeStr		(0X10A29C,	0X10A2AF);
	MakeName	(0X10A29C,	"aValidMemregion");
	MakeStr		(0X10A2AF,	0X10A2C9);
	MakeName	(0X10A2AF,	"a08x08xSize08x");
	MakeStr		(0X10A2C9,	0X10A2DC);
	MakeName	(0X10A2C9,	"aEndOfMemlayout");
	MakeStr		(0X10A2DC,	0X10A301);
	MakeName	(0X10A2DC,	"aOpenprocessFai");
	MakeStr		(0X10A301,	0X10A335);
	MakeName	(0X10A301,	"aRtcheckremot_0");
	MakeStr		(0X10A335,	0X10A360);
	MakeName	(0X10A335,	"aCopyremotememo");
	MakeStr		(0X10A360,	0X10A369);
	MakeName	(0X10A360,	"aFinished");
	MakeStr		(0X10A369,	0X10A385);
	MakeName	(0X10A369,	"aGetthreadlistF");
	MakeStr		(0X10A385,	0X10A394);
	MakeName	(0X10A385,	"aRecommendPc");
	MakeStr		(0X10A394,	0X10A3A3);
	MakeName	(0X10A394,	"aRecommendLr");
	MakeStr		(0X10A3A3,	0X10A3B0);
	MakeName	(0X10A3A3,	"aTid0x08x");
	MakeStr		(0X10A3B0,	0X10A3C4);
	MakeName	(0X10A3B0,	"aPc08xLr08x");
	MakeStr		(0X10A3C4,	0X10A3DB);
	MakeName	(0X10A3C4,	"aBuf08xSize08x");
	MakeStr		(0X10A3DB,	0X10A3ED);
	MakeName	(0X10A3DB,	"aArm11NotLoaded");
	MakeStr		(0X10A3ED,	0X10A40B);
	MakeName	(0X10A3ED,	"aMapremotememor");
	MakeStr		(0X10A40B,	0X10A42D);
	MakeName	(0X10A40B,	"aProtectremotem");
	MakeStr		(0X10A42D,	0X10A44F);
	MakeName	(0X10A42D,	"aCopyremoteme_0");
	MakeStr		(0X10A44F,	0X10A45F);
	MakeName	(0X10A44F,	"aRemotepc08x");
	MakeStr		(0X10A45F,	0X10A481);
	MakeName	(0X10A45F,	"aCopyremoteme_1");
	MakeStr		(0X10A481,	0X10A4A3);
	MakeName	(0X10A481,	"aCopyremoteme_2");
	MakeStr		(0X10A4A3,	0X10A4C5);
	MakeName	(0X10A4A3,	"aCopyremoteme_3");
	MakeStr		(0X10A4C5,	0X10A4DE);
	MakeName	(0X10A4C5,	"aWillListenAtPo");
	MakeStr		(0X10A4DE,	0X10A4E9);
	MakeName	(0X10A4DE,	"aCpsr08x");
	MakeStr		(0X10A4E9,	0X10A4FA);
	MakeName	(0X10A4E9,	"aLr08xSp08x");
	MakeStr		(0X10A4FA,	0X10A504);
	MakeName	(0X10A4FA,	"aRD08x");
	MakeStr		(0X10A504,	0X10A517);
	MakeName	(0X10A504,	"aBreakpointDHit");
	MakeStr		(0X10A517,	0X10A51D);
	MakeName	(0X10A517,	"aHello");
	MakeStr		(0X10A51D,	0X10A52F);
	MakeName	(0X10A51D,	"aBindFailed08x");
	MakeStr		(0X10A52F,	0X10A543);
	MakeName	(0X10A52F,	"aListenFailed08");
	MakeStr		(0X10A543,	0X10A55D);
	MakeName	(0X10A543,	"aRtrecvsocketFa");
	MakeStr		(0X10A55D,	0X10A579);
	MakeName	(0X10A55D,	"aBrokenProtocol");
	MakeStr		(0X10A579,	0X10A5AC);
	MakeName	(0X10A579,	"aRtcheckremot_1");
	MakeStr		(0X10A5AC,	0X10A5C8);
	MakeName	(0X10A5AC,	"aSoc_initialize");
	MakeStr		(0X10A5C8,	0X10A5E6);
	MakeName	(0X10A5C8,	"aSvc_createthre");
	MakeStr		(0X10A5E6,	0X10A5EE);
	MakeName	(0X10A5E6,	"aFsUser");
	MakeStr		(0X10A5EE,	0X10A5F3);
	MakeName	(0X10A5EE,	"aNsS");
	MakeStr		(0X10A5F3,	0X10A60A);
	MakeName	(0X10A5F3,	"aOpenNsSFailed0");
	MakeStr		(0X10A60A,	0X10A618);
	MakeName	(0X10A60A,	"aNtrMenuXY");
	MakeStr		(0X10A618,	0X10A62A);
	MakeName	(0X10A618,	"aNtrMenuLStart");
	MakeStr		(0X10A62A,	0X10A63F);
	MakeName	(0X10A62A,	"aScreenshotDisa");
	MakeStr		(0X10A63F,	0X10A658);
	MakeName	(0X10A63F,	"aScreenshotSele");
	MakeStr		(0X10A658,	0X10A664);
	MakeName	(0X10A658,	"aNtrCfw2_2");
	MakeStr		(0X10A664,	0X10A674);
	MakeName	(0X10A664,	"aProcessManager");
	MakeStr		(0X10A674,	0X10A684);
	MakeName	(0X10A674,	"aEnableDebugger");
	MakeStr		(0X10A684,	0X10A68F);
	MakeName	(0X10A684,	"aCleanMode");
	MakeStr		(0X10A68F,	0X10A69A);
	MakeName	(0X10A68F,	"aSetHotkey");
	MakeStr		(0X10A69A,	0X10A6BD);
	MakeName	(0X10A69A,	"aDebuggerHasAlr");
	MakeStr		(0X10A6BD,	0X10A6E1);
	MakeName	(0X10A6BD,	"aExpandPoolAddr");
	MakeStr		(0X10A6E1,	0X10A700);
	MakeName	(0X10A6E1,	"aAllocPlgMemory");
	MakeStr		(0X10A700,	0X10A707);
	MakeName	(0X10A700,	"aFsReg");
	MakeStr		(0X10A707,	0X10A727);
	MakeName	(0X10A707,	"aFsuser_initial");
	MakeStr		(0X10A727,	0X10A73B);
	MakeName	(0X10A727,	"aFsuserhandle08");
	MakeStr		(0X10A73B,	0X10A75B);
	MakeName	(0X10A73B,	"aOpenMenuProces");
	MakeStr		(0X10A75B,	0X10A76E);
	MakeName	(0X10A75B,	"aHmenuprocess08");
	MakeStr		(0X10A76E,	0X10A788);
	MakeName	(0X10A76E,	"aLoadPlginfoFai");
	MakeStr		(0X10A788,	0X10A79B);
	MakeName	(0X10A788,	"aProctid08x08x");
	MakeStr		(0X10A79B,	0X10A7A9);
	MakeName	(0X10A79B,	"aTidMismatch");
	MakeStr		(0X10A7A9,	0X10A7CB);
	MakeName	(0X10A7A9,	"aAllocPluginMem");
	MakeStr		(0X10A7CB,	0X10A7DD);
	MakeName	(0X10A7CB,	"aRwxFailed08x");
	MakeStr		(0X10A7DD,	0X10A7F8);
	MakeName	(0X10A7DD,	"aCopyPlginfoFai");
	MakeStr		(0X10A7F8,	0X10A80F);
	MakeName	(0X10A7F8,	"aLoadPlgFailed0");
	MakeStr		(0X10A80F,	0X10A82C);
	MakeName	(0X10A80F,	"aAttachProcessF");
	MakeStr		(0X10A82C,	0X10A84E);
	MakeName	(0X10A82C,	"aRunappletTid00");
	MakeStr		(0X10A84E,	0X10A859);
	MakeName	(0X10A84E,	"aPluginS");
	MakeStr		(0X10A859,	0X10A85F);
	MakeName	(0X10A859,	"aSS_0");
	MakeStr		(0X10A85F,	0X10A88B);
	MakeName	(0X10A85F,	"aLoadingPluginS");
	MakeStr		(0X10A88B,	0X10A8A7);
	MakeName	(0X10A88B,	"aAllocPluginM_0");
	MakeStr		(0X10A8A7,	0X10A8C2);
	MakeName	(0X10A8A7,	"aRtloadfiletobu");
	MakeStr		(0X10A8C2,	0X10A8DD);
	MakeName	(0X10A8C2,	"aStartingApplet");
	MakeStr		(0X10A8DD,	0X10A8E2);
	MakeName	(0X10A8DD,	"aGame");
	MakeStr		(0X10A8E2,	0X10A8EB);
	MakeName	(0X10A8E2,	"a08x08x");
	MakeStr		(0X10A8EB,	0X10A8F6);
	MakeName	(0X10A8EB,	"aPlg08x");
	MakeStr		(0X10A8F6,	0X10A917);
	MakeName	(0X10A8F6,	"aFsuser_openarc");
	MakeStr		(0X10A917,	0X10A920);
	MakeName	(0X10A917,	"aNtr_bin");
	MakeStr		(0X10A920,	0X10A936);
	MakeName	(0X10A920,	"aArm11BinSize08");
	MakeStr		(0X10A936,	0X10A958);
	MakeName	(0X10A936,	"aAllocMemoryFor");
	MakeStr		(0X10A958,	0X10A96E);
	MakeName	(0X10A958,	"aLoadArm11binFa");
	MakeStr		(0X10A96E,	0X10A973);
	MakeName	(0X10A96E,	"aHome");
	MakeStr		(0X10A973,	0X10A991);
	MakeName	(0X10A973,	"aOpenprocessF_3");
	MakeStr		(0X10A991,	0X10A9AB);
	MakeName	(0X10A991,	"aOutaddr08xAddr");
	MakeStr		(0X10A9AB,	0X10A9D4);
	MakeName	(0X10A9AB,	"aSvc_flushpro_0");
	MakeStr		(0X10A9D4,	0X10A9FD);
	MakeName	(0X10A9D4,	"aSvc_flushproce");
	MakeStr		(0X10A9FD,	0X10AA1C);
	MakeName	(0X10A9FD,	"aReadremotememo");
	MakeStr		(0X10AA1C,	0X10AA35);
	MakeName	(0X10AA1C,	"aOpenprocessF_0");
	MakeStr		(0X10AA35,	0X10AA51);
	MakeName	(0X10AA35,	"aDumpFinishedAt");
	MakeStr		(0X10AA51,	0X10AA6F);
	MakeName	(0X10AA51,	"aReadremoteme_0");
	MakeStr		(0X10AA6F,	0X10AA7B);
	MakeName	(0X10AA6F,	"aHfile08x");
	MakeStr		(0X10AA7B,	0X10AA9B);
	MakeName	(0X10AA7B,	"aDebugactivepro");
	MakeStr		(0X10AA9B,	0X10AAA8);
	MakeName	(0X10AA9B,	"aHdebug08x");
	MakeStr		(0X10AAA8,	0X10AACB);
	MakeName	(0X10AAA8,	"aReadmemoryAddr");
	MakeStr		(0X10AACB,	0X10AAD4);
	MakeName	(0X10AACB,	"aDumpcode");
	MakeStr		(0X10AAD4,	0X10AADD);
	MakeName	(0X10AAD4,	"aTestpath");
	MakeStr		(0X10AADD,	0X10AAE6);
	MakeName	(0X10AADD,	"aOpenfile");
	MakeStr		(0X10AAE6,	0X10AAF7);
	MakeName	(0X10AAE6,	"aOpenFileFailed");
	MakeStr		(0X10AAF7,	0X10AB0D);
	MakeName	(0X10AAF7,	"aPatchSmFailed0");
	MakeStr		(0X10AB0D,	0X10AB29);
	MakeName	(0X10AB0D,	"aGetprocessli_0");
	MakeStr		(0X10AB29,	0X10AB35);
	MakeName	(0X10AB29,	"aProcesslist");
	MakeStr		(0X10AB35,	0X10AB43);
	MakeName	(0X10AB35,	"aDump_pid08x");
	MakeStr		(0X10AB43,	0X10AB4D);
	MakeName	(0X10AB43,	"aPnameS");
	MakeByte	(0X10AB4D);
	MakeArray	(0X10AB4D,	0X3);
	MakeCode	(0X10AB50);
	MakeStr		(0X10AB77,	0X10AB8B);
	MakeName	(0X10AB77,	"aTsizeFailed08x");
	MakeStr		(0X10AB8B,	0X10ABB1);
	MakeName	(0X10AB8B,	"aRtloadfileto_0");
	MakeStr		(0X10ABB1,	0X10ABCB);
	MakeName	(0X10ABB1,	"aFsfile_readF_0");
	MakeStr		(0X10ABCB,	0X10ABE4);
	MakeName	(0X10ABCB,	"aOpenthreadFail");
	MakeStr		(0X10ABE4,	0X10ABF2);
	MakeName	(0X10ABE4,	"aTop_04d_bmp");
	MakeStr		(0X10ABF2,	0X10AC05);
	MakeName	(0X10ABF2,	"aOut_addr08x");
	MakeStr		(0X10AC05,	0X10AC13);
	MakeName	(0X10AC05,	"aBot_04d_bmp");
	MakeStr		(0X10AC13,	0X10AC33);
	MakeName	(0X10AC13,	"aInitializingSc");
	MakeStr		(0X10AC33,	0X10AC43);
	MakeName	(0X10AC33,	"aTakeScreenshot");
	MakeStr		(0X10AC43,	0X10AC54);
	MakeName	(0X10AC43,	"aBmpIndexIsD");
	MakeStr		(0X10AC54,	0X10AC5A);
	MakeName	(0X10AC54,	"aSocU");
	MakeStr		(0X10AC5A,	0X10AC5F);
	MakeName	(0X10AC5A,	"aSrv");
	MakeStr		(0X10AC5F,	0X10AC63);
	MakeStr		(0X10AC63,	0X10AC67);
	MakeStr		(0X10AC67,	0X10AC7C);
	MakeName	(0X10AC67,	"aHttp44670_orgN");
	MakeDword	(0X10AC7C);
	MakeArray	(0X10AC7C,	0X4);
	MakeDword	(0X10AC8C);
	MakeByte	(0X10AC91);
	MakeArray	(0X10AC91,	0X3);
	MakeDword	(0X10AC94);
	MakeArray	(0X10AC94,	0X2);
	MakeDword	(0X10AC9C);
	MakeArray	(0X10AC9C,	0X3);
	MakeDword	(0X10ACA8);
	MakeArray	(0X10ACA8,	0X4);
	MakeByte	(0X10ACB9);
	MakeArray	(0X10ACB9,	0X3);
	MakeDword	(0X10ACBC);
	MakeArray	(0X10ACBC,	0X8);
	MakeDword	(0X10ACDC);
	MakeByte	(0X10ACE1);
	MakeArray	(0X10ACE1,	0X3);
	MakeDword	(0X10ACE4);
	MakeArray	(0X10ACE4,	0X4);
	MakeDword	(0X10ACF4);
	MakeName	(0X10ACF4,	"IoBasePad");
	MakeDword	(0X10ACF8);
	MakeDword	(0X10ACFC);
	MakeName	(0X10ACFC,	"fsUserHandle");
	MakeDword	(0X10AD00);
	MakeDword	(0X10AD04);
	MakeDword	(x=0X10AD08);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0X10AD0C);
	MakeDword	(0X10AD10);
	MakeArray	(0X10AD10,	0X2);
	MakeDword	(0X10AD18);
	MakeDword	(0X10AD1C);
	MakeArray	(0X10AD1C,	0X11);
	MakeDword	(0X10AD60);
	MakeDword	(0X10AD64);
	MakeArray	(0X10AD64,	0X21);
	MakeDword	(0X10ADE8);
	MakeDword	(0X10ADEC);
	MakeArray	(0X10ADEC,	0X23);
	MakeCode	(0X10AE78);
	MakeDword	(0X10AEB8);
	MakeDword	(0X10AEBC);
	MakeDword	(0X10AEC0);
	MakeDword	(0X10AEC4);
	MakeDword	(0X10AEC8);
	MakeDword	(0X10AECC);
	MakeArray	(0X10AECC,	0X2);
	MakeDword	(0X10AED4);
	MakeDword	(0X10AED8);
	MakeDword	(0X10AEDC);
	MakeDword	(0X10AEE0);
	MakeDword	(0X10AEE4);
	MakeDword	(0X10AEE8);
	MakeDword	(0X10AEEC);
	MakeDword	(0X10AEF0);
	MakeDword	(0X10AEF4);
	MakeDword	(0X10AEF8);
	MakeArray	(0X10AEF8,	0X23);
	MakeCode	(0X10AF84);
	MakeDword	(0X10B2C4);
	MakeDword	(0X10B2C8);
	MakeArray	(0X10B2C8,	0X23);
	MakeCode	(0X10B354);
	MakeDword	(0X10B394);
	MakeByte	(0X10B398);
	MakeByte	(0X10B399);
	MakeArray	(0X10B399,	0X3);
	MakeDword	(0X10B39C);
	MakeDword	(0X10B3A0);
	MakeDword	(0X10B3A4);
	MakeArray	(0X10B3A4,	0X2);
	MakeDword	(0X10B3AC);
	MakeDword	(0X10B3B0);
	MakeDword	(0X10B3B4);
	MakeArray	(0X10B3B4,	0X23);
	MakeCode	(0X10B440);
	MakeDword	(0X10B480);
	MakeDword	(0X10B484);
	MakeDword	(0X10B488);
	MakeDword	(0X10B48C);
	MakeDword	(0X10B490);
	MakeDword	(0X10B494);
	MakeDword	(0X10B498);
	MakeName	(0X10B498,	"srvHandle");
	MakeDword	(0X10B49C);
	MakeDword	(0X10B4A0);
	MakeDword	(0X10B4A4);
	MakeDword	(0X10B4A8);
	MakeDword	(0X10B4AC);
	MakeArray	(0X10B4AC,	0X1C);
	MakeDword	(0X10B51C);
	MakeDword	(0X10B520);
	MakeDword	(0X10B524);
	MakeArray	(0X10B524,	0X2);
	MakeDword	(0X10B52C);
	MakeDword	(0X10B530);
	MakeDword	(0X10B534);
	MakeDword	(0X10B538);
	MakeDword	(0X10B53C);
	MakeDword	(0X10B540);
	MakeArray	(0X10B540,	0X5);
	MakeDword	(0X10B554);
	MakeDword	(x=0X10B558);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0X10B55C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
}

static Functions_0(void) {

	MakeFunction    (0X10011C,0X1001A4);
	SetFunctionFlags(0X10011C,0x404);
	MakeFrame(0X10011C, 0X38, 0, 0);
	MakeFunction    (0X1001D0,0X1001FC);
	SetFunctionFlags(0X1001D0,0x444);
	SetType(0X1001D0, "void __usercall paint_pixel(int x@<R0>, int y@<R1>, unsigned __int8 r@<R2>, unsigned __int8 g@<R3>, unsigned __int8 b, int screen);");
	MakeFrame(0X1001D0, 0, 0, 0);
	MakeLocal(0X1001D0, 0X1001FC, "[bp+0]", "b");
	MakeLocal(0X1001D0, 0X1001FC, "[bp+0X4]", "screen");
	MakeFunction    (0X1001FC,0X100270);
	SetFunctionFlags(0X1001FC,0x404);
	SetType(0X1001FC, "void __usercall paint_square(int x@<R0>, int y@<R1>, unsigned __int8 r@<R2>, unsigned __int8 g@<R3>, unsigned __int8 b, int w, int h, int screen);");
	MakeFrame(0X1001FC, 0X30, 0, 0);
	MakeLocal(0X1001FC, 0X100270, "[bp+0]", "b");
	MakeLocal(0X1001FC, 0X100270, "[bp+0X4]", "w");
	MakeLocal(0X1001FC, 0X100270, "[bp+0X8]", "h");
	MakeLocal(0X1001FC, 0X100270, "[bp+0XC]", "screen");
	MakeFunction    (0X100270,0X1002D8);
	SetFunctionFlags(0X100270,0x404);
	SetType(0X100270, "void __fastcall blank(int x, int y, int xs, int ys);");
	MakeFrame(0X100270, 0X30, 0, 0);
	MakeLocal(0X100270, 0X1002D8, "[bp-0X28]", "h");
	MakeLocal(0X100270, 0X1002D8, "[bp-0X24]", "screen");
	MakeFunction    (0X1002DC,0X100374);
	SetFunctionFlags(0X1002DC,0x404);
	SetType(0X1002DC, "void __usercall paint_letter(unsigned __int8 letter@<R0>, int x@<R1>, int y@<R2>, unsigned __int8 r@<R3>, unsigned __int8 g, unsigned __int8 b, int screen);");
	MakeFrame(0X1002DC, 0X40, 0, 0);
	MakeLocal(0X1002DC, 0X100374, "[bp+0]", "g");
	MakeLocal(0X1002DC, 0X100374, "[bp+0X4]", "b");
	MakeLocal(0X1002DC, 0X100374, "[bp+0X8]", "screen");
	MakeFunction    (0X100378,0X1003F8);
	SetFunctionFlags(0X100378,0x400);
	SetType(0X100378, "void __usercall paint_word(unsigned __int8 *word@<R0>, int x@<R1>, int y@<R2>, unsigned __int8 r@<R3>, unsigned __int8 g, unsigned __int8 b, int screen);");
	MakeFrame(0X100378, 0X40, 0, 0);
	MakeLocal(0X100378, 0X1003F8, "[bp+0]", "g");
	MakeLocal(0X100378, 0X1003F8, "[bp+0X4]", "b");
	MakeLocal(0X100378, 0X1003F8, "[bp+0X8]", "screen");
	MakeFunction    (0X1003F8,0X100480);
	SetFunctionFlags(0X1003F8,0x400);
	SetType(0X1003F8, "void __usercall print(unsigned __int8 *s@<R0>, int x@<R1>, int y@<R2>, unsigned __int8 r@<R3>, unsigned __int8 g, unsigned __int8 b);");
	MakeFrame(0X1003F8, 0X30, 0, 0);
	MakeLocal(0X1003F8, 0X100480, "[bp-0X28]", "screen");
	MakeLocal(0X1003F8, 0X100480, "[bp+0]", "g");
	MakeLocal(0X1003F8, 0X100480, "[bp+0X4]", "b");
	MakeFunction    (0X1005C8,0X100600);
	SetFunctionFlags(0X1005C8,0x400);
	SetType(0X1005C8, "Result __fastcall ACU_GetWifiStatus(Handle servhandle, u32 *out);");
	MakeFrame(0X1005C8, 0X10, 0, 0);
	MakeFunction    (0X100600,0X100658);
	SetFunctionFlags(0X100600,0x400);
	SetType(0X100600, "Result __stdcall ACU_WaitInternetConnection();");
	MakeFrame(0X100600, 0X10, 0, 0);
	MakeLocal(0X100600, 0X100658, "[bp-0X10]", "handle");
	MakeLocal(0X100600, 0X100658, "[bp-0XC]", "out");
	MakeFunction    (0X10065C,0X100680);
	SetFunctionFlags(0X10065C,0x400);
	SetType(0X10065C, "void __fastcall c_entry(uint32_t *reg);");
	MakeFunction    (0X100688,0X10068C);
	SetFunctionFlags(0X100688,0x400);
	SetType(0X100688, "void __stdcall IRQHandler();");
	MakeFunction    (0X10068C,0X1006BC);
	SetFunctionFlags(0X10068C,0x400);
	SetType(0X10068C, "Result __fastcall FSUSER_Initialize(Handle handle);");
	MakeFrame(0X10068C, 0X10, 0, 0);
	MakeFunction    (0X1006C0,0X10075C);
	SetFunctionFlags(0X1006C0,0x400);
	SetType(0X1006C0, "Result __stdcall FSUSER_OpenFile(Handle handle, Handle *out, FS_archive archive, FS_path fileLowPath, u32 openflags, u32 attributes);");
	MakeFrame(0X1006C0, 0X20, 0, 0);
	MakeLocal(0X1006C0, 0X10075C, "[bp+0X1C]", "openflags");
	MakeLocal(0X1006C0, 0X10075C, "[bp+0X20]", "attributes");
	MakeFunction    (0X100760,0X10081C);
	SetFunctionFlags(0X100760,0x400);
	SetType(0X100760, "Result __stdcall FSUSER_OpenFileDirectly(Handle handle, Handle *out, FS_archive archive, FS_path fileLowPath, u32 openflags, u32 attributes);");
	MakeFrame(0X100760, 0X20, 0, 0);
	MakeLocal(0X100760, 0X10081C, "[bp+0]", "archive");
	MakeLocal(0X100760, 0X10081C, "[bp+0X1C]", "openflags");
	MakeLocal(0X100760, 0X10081C, "[bp+0X20]", "attributes");
	MakeFunction    (0X100820,0X1008A0);
	SetFunctionFlags(0X100820,0x400);
	SetType(0X100820, "Result __fastcall FSUSER_OpenArchive(Handle handle, FS_archive *archive);");
	MakeFunction    (0X1008A4,0X10092C);
	SetFunctionFlags(0X1008A4,0x400);
	SetType(0X1008A4, "Result __stdcall FSUSER_OpenDirectory(Handle handle, Handle *out, FS_archive archive, FS_path dirLowPath);");
	MakeFrame(0X1008A4, 0X20, 0, 0);
	MakeFunction    (0X100930,0X100980);
	SetFunctionFlags(0X100930,0x400);
	SetType(0X100930, "Result __fastcall FSUSER_CloseArchive(Handle handle, FS_archive *archive);");
	MakeFunction    (0X100984,0X1009B0);
	SetFunctionFlags(0X100984,0x400);
	SetType(0X100984, "Result __fastcall FSFILE_Close(Handle handle);");
	MakeFrame(0X100984, 0X10, 0, 0);
	MakeFunction    (0X1009B4,0X100A1C);
	SetFunctionFlags(0X1009B4,0x400);
	SetType(0X1009B4, "int __stdcall FSFILE_Read(u32 *buffer, u32 size);");
	MakeFrame(0X1009B4, 0X20, 0, 0);
	MakeFunction    (0X100A20,0X100A90);
	SetFunctionFlags(0X100A20,0x400);
	SetType(0X100A20, "int __stdcall FSFILE_Write(u32 *data, u32 size, u32 flushFlags);");
	MakeFrame(0X100A20, 0X20, 0, 0);
	MakeFunction    (0X100A94,0X100AD4);
	SetFunctionFlags(0X100A94,0x400);
	SetType(0X100A94, "Result __fastcall FSFILE_GetSize(Handle handle, u64 *size);");
	MakeFrame(0X100A94, 0X10, 0, 0);
	MakeFunction    (0X100AD8,0X100B10);
	SetFunctionFlags(0X100AD8,0x400);
	SetType(0X100AD8, "Result __fastcall FSFILE_SetSize(Handle handle, u64 size);");
	MakeFrame(0X100AD8, 0X18, 0, 0);
	MakeFunction    (0X100B14,0X100B74);
	SetFunctionFlags(0X100B14,0x400);
	SetType(0X100B14, "Result __fastcall FSDIR_Read(Handle handle, u32 *entriesRead, u32 entrycount, u16 *buffer);");
	MakeFrame(0X100B14, 0X18, 0, 0);
	MakeFunction    (0X100B78,0X100BA4);
	SetFunctionFlags(0X100B78,0x400);
	SetType(0X100B78, "Result __fastcall FSDIR_Close(Handle handle);");
	MakeFrame(0X100B78, 0X10, 0, 0);
	MakeFunction    (0X100BA8,0X100BB0);
	SetFunctionFlags(0X100BA8,0x404);
	MakeFunction    (0X100BB4,0X100C08);
	SetFunctionFlags(0X100BB4,0x400);
	MakeFrame(0X100BB4, 0X18, 0, 0);
	MakeFunction    (0X100C14,0X100C28);
	SetFunctionFlags(0X100C14,0x400);
	MakeFrame(0X100C14, 0X8, 0, 0);
	MakeFunction    (0X100C28,0X100C88);
	SetFunctionFlags(0X100C28,0x400);
	MakeFunction    (0X100CA8,0X100E28);
	SetFunctionFlags(0X100CA8,0x400);
	MakeFrame(0X100CA8, 0X18, 0, 0);
	MakeLocal(0X100CA8, 0X100E28, "[bp-0XC]", "process");
	MakeFunction    (0X100E98,0X100EE4);
	SetFunctionFlags(0X100E98,0x400);
	MakeFrame(0X100E98, 0X18, 0, 0);
	MakeFunction    (0X100EEC,0X100F18);
	SetFunctionFlags(0X100EEC,0x401);
	MakeFrame(0X100EEC, 0X8, 0, 0);
	MakeFunction    (0X100F20,0X100F38);
	SetFunctionFlags(0X100F20,0x400);
	MakeFunction    (0X100F64,0X10110C);
	SetFunctionFlags(0X100F64,0x400);
	MakeFrame(0X100F64, 0X6458, 0, 0);
	MakeLocal(0X100F64, 0X10110C, "[bp-0X6434]", "handle");
	MakeLocal(0X100F64, 0X10110C, "[bp-0X6430]", "entriesRead");
	MakeLocal(0X100F64, 0X10110C, "[bp-0X6420]", "buffer");
	MakeFunction    (0X1011C8,0X1011E0);
	SetFunctionFlags(0X1011C8,0x400);
	MakeFunction    (0X1011E4,0X101270);
	SetFunctionFlags(0X1011E4,0x400);
	MakeFrame(0X1011E4, 0X48, 0, 0);
	MakeLocal(0X1011E4, 0X101270, "[bp-0X2C]", "openflags");
	MakeLocal(0X1011E4, 0X101270, "[bp-0X28]", "attributes");
	MakeLocal(0X1011E4, 0X101270, "[bp-0X20]", "out");
	MakeFunction    (0X101278,0X1013B0);
	SetFunctionFlags(0X101278,0x401);
	MakeFrame(0X101278, 0X18, 0, 0);
	MakeFunction    (0X101458,0X1014D4);
	SetFunctionFlags(0X101458,0x400);
	MakeFrame(0X101458, 0X20, 0, 0);
	MakeLocal(0X101458, 0X1014D4, "[bp-0X20]", "op");
	MakeLocal(0X101458, 0X1014D4, "[bp-0X1C]", "perm");
	MakeLocal(0X101458, 0X1014D4, "[bp-0X14]", "addr_out");
	MakeFunction    (0X1014DC,0X10155C);
	SetFunctionFlags(0X1014DC,0x400);
	MakeFrame(0X1014DC, 0X248, 0, 0);
	MakeLocal(0X1014DC, 0X10155C, "[bp-0X244]", "handle");
	MakeFunction    (0X101570,0X101590);
	SetFunctionFlags(0X101570,0x400);
	MakeFrame(0X101570, 0X8, 0, 0);
	MakeFunction    (0X101594,0X1015BC);
	SetFunctionFlags(0X101594,0x400);
	MakeFrame(0X101594, 0X8, 0, 0);
	MakeFunction    (0X1015D8,0X101860);
	SetFunctionFlags(0X1015D8,0x400);
	SetType(0X1015D8, "int __cdecl main(int argc, const char **argv, const char **envp);");
	MakeFrame(0X1015D8, 0X28, 0, 0);
	MakeLocal(0X1015D8, 0X101860, "[bp-0X1C]", "thread");
	MakeFunction    (0X1018E4,0X1018EC);
	SetFunctionFlags(0X1018E4,0x404);
	SetType(0X1018E4, "void __fastcall write_byte(u32 address, u8 byte);");
	MakeFunction    (0X1018EC,0X101900);
	SetFunctionFlags(0X1018EC,0x404);
	SetType(0X1018EC, "unsigned __int8 __fastcall nibble_to_readable(u8 nibble);");
	MakeFunction    (0X101900,0X10193C);
	SetFunctionFlags(0X101900,0x400);
	SetType(0X101900, "u32 __fastcall sub_101900(u8 byte, unsigned __int8 *ret, int max_len);");
	MakeFunction    (0X10193C,0X101994);
	SetFunctionFlags(0X10193C,0x404);
	SetType(0X10193C, "u32 __fastcall u32_to_string(u32 byte, unsigned __int8 *ret, int max_len);");
	MakeFunction    (0X1019A0,0X1019A8);
	SetFunctionFlags(0X1019A0,0x404);
	SetType(0X1019A0, "void __stdcall sleep(s64 ns);");
	MakeFunction    (0X1019C0,0X1019CC);
	SetFunctionFlags(0X1019C0,0x404);
	MakeFunction    (0X1019CC,0X1019D8);
	SetFunctionFlags(0X1019CC,0x444);
	MakeFunction    (0X1019E0,0X101A10);
	SetFunctionFlags(0X1019E0,0x400);
	MakeFunction    (0X101A14,0X101A70);
	SetFunctionFlags(0X101A14,0x400);
	MakeFrame(0X101A14, 0X20, 0, 0);
	MakeLocal(0X101A14, 0X101A70, "[bp-0X10]", "varg_r0");
	MakeLocal(0X101A14, 0X101A70, "[bp-0XC]", "varg_r1");
	MakeLocal(0X101A14, 0X101A70, "[bp-0X8]", "varg_r2");
	MakeLocal(0X101A14, 0X101A70, "[bp-0X4]", "varg_r3");
	MakeFunction    (0X101A74,0X101A98);
	SetFunctionFlags(0X101A74,0x400);
	MakeFunction    (0X101A9C,0X101AE8);
	SetFunctionFlags(0X101A9C,0x400);
	MakeFrame(0X101A9C, 0X8, 0, 0);
	MakeFunction    (0X101AF0,0X101B3C);
	SetFunctionFlags(0X101AF0,0x400);
	MakeFrame(0X101AF0, 0X8, 0, 0);
	MakeFunction    (0X101B44,0X101C6C);
	SetFunctionFlags(0X101B44,0x410);
	MakeFrame(0X101B44, 0X260, 32, 0);
	MakeLocal(0X101B44, 0X101C6C, "[bp-0X244]", "openflags");
	MakeLocal(0X101B44, 0X101C6C, "[bp-0X240]", "attributes");
	MakeLocal(0X101B44, 0X101C6C, "[bp-0X234]", "out");
	MakeFunction    (0X101C84,0X101CC0);
	SetFunctionFlags(0X101C84,0x400);
	MakeFunction    (0X101CC4,0X101D38);
	SetFunctionFlags(0X101CC4,0x400);
	MakeFrame(0X101CC4, 0X8, 0, 0);
	MakeFunction    (0X101D44,0X101DB8);
	SetFunctionFlags(0X101D44,0x400);
	MakeFrame(0X101D44, 0X8, 0, 0);
	MakeFunction    (0X101DC4,0X101E9C);
	SetFunctionFlags(0X101DC4,0x400);
	MakeFrame(0X101DC4, 0X20, 0, 0);
	MakeFunction    (0X101EA4,0X101F9C);
	SetFunctionFlags(0X101EA4,0x400);
	MakeFrame(0X101EA4, 0X20, 0, 0);
	MakeFunction    (0X101FB0,0X102040);
	SetFunctionFlags(0X101FB0,0x400);
	MakeFrame(0X101FB0, 0X10, 0, 0);
	MakeFunction    (0X10204C,0X102110);
	SetFunctionFlags(0X10204C,0x400);
	MakeFrame(0X10204C, 0X658, 0, 0);
	MakeLocal(0X10204C, 0X102110, "[bp-0X658]", "handle");
	MakeFunction    (0X102124,0X1021EC);
	SetFunctionFlags(0X102124,0x400);
	MakeFrame(0X102124, 0X10, 0, 0);
	MakeFunction    (0X1021FC,0X10235C);
	SetFunctionFlags(0X1021FC,0x400);
	MakeFrame(0X1021FC, 0X60, 0, 0);
	MakeLocal(0X1021FC, 0X10235C, "[bp-0X44]", "openflags");
	MakeLocal(0X1021FC, 0X10235C, "[bp-0X40]", "attributes");
	MakeLocal(0X1021FC, 0X10235C, "[bp-0X34]", "addr_out");
	MakeLocal(0X1021FC, 0X10235C, "[bp-0X30]", "out");
	MakeLocal(0X1021FC, 0X10235C, "[bp-0X28]", "size");
	MakeFunction    (0X102388,0X102424);
	SetFunctionFlags(0X102388,0x400);
	MakeFrame(0X102388, 0X1D8, 0, 0);
	MakeLocal(0X102388, 0X102424, "[bp-0X1CC]", "processCount");
	MakeLocal(0X102388, 0X102424, "[bp-0X1A0]", "processIds");
	MakeFunction    (0X102434,0X1024F4);
	SetFunctionFlags(0X102434,0x400);
	MakeFrame(0X102434, 0X20, 0, 0);
	MakeLocal(0X102434, 0X1024F4, "[bp-0X1C]", "hProcess");
	MakeFunction    (0X102508,0X102660);
	SetFunctionFlags(0X102508,0x400);
	MakeFrame(0X102508, 0X30, 0, 0);
	MakeLocal(0X102508, 0X102660, "[bp-0X24]", "hProcess");
	MakeFunction    (0X10267C,0X1027D8);
	SetFunctionFlags(0X10267C,0x400);
	MakeFrame(0X10267C, 0X30, 0, 0);
	MakeLocal(0X10267C, 0X1027D8, "[bp-0X24]", "hProcess");
	MakeFunction    (0X1027F4,0X10297C);
	SetFunctionFlags(0X1027F4,0x400);
	MakeFrame(0X1027F4, 0XB10, 0, 0);
	MakeLocal(0X1027F4, 0X10297C, "[bp-0XB08]", "threadIds");
	MakeFunction    (0X10298C,0X102AA8);
	SetFunctionFlags(0X10298C,0x400);
	MakeFrame(0X10298C, 0X7F0, 0, 0);
	MakeLocal(0X10298C, 0X102AA8, "[bp-0X7F0]", "handle");
	MakeFunction    (0X102AC4,0X102C68);
	SetFunctionFlags(0X102AC4,0x400);
	MakeFrame(0X102AC4, 0X78, 0, 0);
	MakeFunction    (0X102CA8,0X102D48);
	SetFunctionFlags(0X102CA8,0x400);
	MakeFrame(0X102CA8, 0X250, 0, 0);
	MakeLocal(0X102CA8, 0X102D48, "[bp-0X24C]", "process");
	MakeFunction    (0X102D58,0X102DAC);
	SetFunctionFlags(0X102D58,0x400);
	MakeFrame(0X102D58, 0X10, 0, 0);
	MakeFunction    (0X102DBC,0X102E5C);
	SetFunctionFlags(0X102DBC,0x400);
	MakeFrame(0X102DBC, 0X18, 0, 0);
	MakeFunction    (0X102E64,0X102F8C);
	SetFunctionFlags(0X102E64,0x400);
	MakeFrame(0X102E64, 0X10, 0, 0);
	MakeFunction    (0X102F98,0X1030D4);
	SetFunctionFlags(0X102F98,0x400);
	MakeFrame(0X102F98, 0X28, 0, 0);
	MakeFunction    (0X1030F0,0X103100);
	SetFunctionFlags(0X1030F0,0x401);
	MakeFrame(0X1030F0, 0X8, 0, 0);
	MakeFunction    (0X103100,0X103148);
	SetFunctionFlags(0X103100,0x400);
	MakeFrame(0X103100, 0X8, 0, 0);
	MakeFunction    (0X103158,0X103340);
	SetFunctionFlags(0X103158,0x400);
	MakeFrame(0X103158, 0X20, 0, 0);
	MakeLocal(0X103158, 0X103340, "[bp-0X18]", "addr_out");
	MakeLocal(0X103158, 0X103340, "[bp-0X14]", "thread");
	MakeFunction    (0X10336C,0X103380);
	SetFunctionFlags(0X10336C,0x444);
	MakeFunction    (0X103380,0X1033A8);
	SetFunctionFlags(0X103380,0x444);
	MakeFunction    (0X1033C8,0X1033D0);
	SetFunctionFlags(0X1033C8,0x444);
	MakeFunction    (0X1033D0,0X103448);
	SetFunctionFlags(0X1033D0,0x400);
	MakeFrame(0X1033D0, 0X20, 0, 0);
	MakeLocal(0X1033D0, 0X103448, "[bp-0X14]", "addr_out");
	MakeFunction    (0X103454,0X103480);
	SetFunctionFlags(0X103454,0x400);
	MakeFrame(0X103454, 0X8, 0, 0);
	MakeFunction    (0X1034D0,0X103548);
	SetFunctionFlags(0X1034D0,0x400);
	MakeFrame(0X1034D0, 0X18, 0, 0);
	MakeLocal(0X1034D0, 0X103548, "[bp-0X14]", "handle");
	MakeFunction    (0X103554,0X1035DC);
	SetFunctionFlags(0X103554,0x400);
	MakeFrame(0X103554, 0X28, 0, 0);
	MakeFunction    (0X1035F8,0X103738);
	SetFunctionFlags(0X1035F8,0x400);
	MakeFrame(0X1035F8, 0X238, 0, 0);
	MakeFunction    (0X10375C,0X10379C);
	SetFunctionFlags(0X10375C,0x400);
	MakeFrame(0X10375C, 0XC, 0, 0);
	MakeFunction    (0X1037A4,0X103848);
	SetFunctionFlags(0X1037A4,0x400);
	MakeFrame(0X1037A4, 0X28, 0, 0);
	MakeLocal(0X1037A4, 0X103848, "[bp-0X1C]", "addr_out");
	MakeFunction    (0X1038D4,0X103B30);
	SetFunctionFlags(0X1038D4,0x400);
	MakeFrame(0X1038D4, 0X498, 0, 0);
	MakeFunction    (0X103B68,0X103B8C);
	SetFunctionFlags(0X103B68,0x400);
	MakeFrame(0X103B68, 0X10, 0, 0);
	MakeFunction    (0X103BF4,0X103C1C);
	SetFunctionFlags(0X103BF4,0x400);
	MakeFrame(0X103BF4, 0X8, 0, 0);
	MakeFunction    (0X103C28,0X103D28);
	SetFunctionFlags(0X103C28,0x400);
	MakeFrame(0X103C28, 0X4A8, 0, 0);
	MakeLocal(0X103C28, 0X103D28, "[bp-0X484]", "handle");
	MakeLocal(0X103C28, 0X103D28, "[bp-0X480]", "entriesRead");
	MakeFunction    (0X103D34,0X103D6C);
	SetFunctionFlags(0X103D34,0x400);
	MakeFunction    (0X103D80,0X103E78);
	SetFunctionFlags(0X103D80,0x400);
	MakeFrame(0X103D80, 0X1228, 0, 0);
	MakeLocal(0X103D80, 0X103E78, "[bp-0X10E0]", "fileName");
	MakeFunction    (0X103E94,0X103F14);
	SetFunctionFlags(0X103E94,0x400);
	MakeFrame(0X103E94, 0X30, 0, 0);
	MakeFunction    (0X103F28,0X103FA4);
	SetFunctionFlags(0X103F28,0x400);
	MakeFrame(0X103F28, 0X248, 0, 0);
	MakeLocal(0X103F28, 0X103FA4, "[bp-0X244]", "process");
	MakeFunction    (0X103FAC,0X104030);
	SetFunctionFlags(0X103FAC,0x400);
	MakeFrame(0X103FAC, 0X10, 0, 0);
	MakeFunction    (0X104044,0X104194);
	SetFunctionFlags(0X104044,0x400);
	MakeFrame(0X104044, 0X18, 0, 0);
	MakeFunction    (0X1041D8,0X104238);
	SetFunctionFlags(0X1041D8,0x400);
	MakeFrame(0X1041D8, 0X18, 0, 0);
	MakeFunction    (0X104248,0X104264);
	SetFunctionFlags(0X104248,0x400);
	SetType(0X104248, "uint32_t __stdcall getCurrentProcessId();");
	MakeFrame(0X104248, 0X8, 0, 0);
	MakeFunction    (0X10426C,0X1042C8);
	SetFunctionFlags(0X10426C,0x400);
	SetType(0X10426C, "uint32_t __stdcall getCurrentProcessHandle();");
	MakeFrame(0X10426C, 0X18, 0, 0);
	MakeLocal(0X10426C, 0X1042C8, "[bp-0X14]", "process");
	MakeFunction    (0X1042D8,0X104370);
	SetFunctionFlags(0X1042D8,0x400);
	SetType(0X1042D8, "uint32_t __fastcall controlMemory(void *addr, uint32_t size);");
	MakeFrame(0X1042D8, 0X30, 0, 0);
	MakeFunction    (0X10437C,0X1043A0);
	SetFunctionFlags(0X10437C,0x400);
	SetType(0X10437C, "uint32_t __fastcall protectRemoteMemory(Handle hProcess, void *addr, uint32_t size);");
	MakeFrame(0X10437C, 0X10, 0, 0);
	MakeFunction    (0X1043A0,0X1043C0);
	SetFunctionFlags(0X1043A0,0x400);
	SetType(0X1043A0, "uint32_t __fastcall protectMemory(void *addr, uint32_t size);");
	MakeFrame(0X1043A0, 0X10, 0, 0);
	MakeFunction    (0X1043C0,0X104504);
	SetFunctionFlags(0X1043C0,0x400);
	MakeFrame(0X1043C0, 0X88, 0, 0);
	MakeLocal(0X1043C0, 0X104504, "[bp-0X88]", "src");
	MakeLocal(0X1043C0, 0X104504, "[bp-0X78]", "hdma");
	MakeLocal(0X1043C0, 0X104504, "[bp-0X74]", "state");
	MakeFunction    (0X104524,0X104574);
	SetFunctionFlags(0X104524,0x400);
	MakeFrame(0X104524, 0X208, 0, 0);
	MakeFunction    (0X104578,0X104630);
	SetFunctionFlags(0X104578,0x400);
	MakeFrame(0X104578, 0X228, 0, 0);
	MakeLocal(0X104578, 0X104630, "[bp-0X224]", "process");
	MakeFunction    (0X104638,0X1047CC);
	SetFunctionFlags(0X104638,0x400);
	MakeFrame(0X104638, 0X1078, 0, 0);
	MakeLocal(0X104638, 0X1047CC, "[bp-0X105C]", "openflags");
	MakeLocal(0X104638, 0X1047CC, "[bp-0X1058]", "attributes");
	MakeLocal(0X104638, 0X1047CC, "[bp-0X1050]", "hProcess");
	MakeLocal(0X104638, 0X1047CC, "[bp-0X104C]", "out");
	MakeFunction    (0X1049A8,0X104AEC);
	SetFunctionFlags(0X1049A8,0x400);
	MakeFrame(0X1049A8, 0X1128, 0, 0);
	MakeLocal(0X1049A8, 0X104AEC, "[bp-0X110C]", "openflags");
	MakeLocal(0X1049A8, 0X104AEC, "[bp-0X1108]", "attributes");
	MakeLocal(0X1049A8, 0X104AEC, "[bp-0X1100]", "out");
	MakeFunction    (0X104B0C,0X104B90);
	SetFunctionFlags(0X104B0C,0x400);
	MakeFrame(0X104B0C, 0X28, 0, 0);
	MakeLocal(0X104B0C, 0X104B90, "[bp-0X1C]", "hProcess");
	MakeFunction    (0X104BE8,0X104D34);
	SetFunctionFlags(0X104BE8,0x400);
	MakeFrame(0X104BE8, 0X6C0, 0, 0);
	MakeLocal(0X104BE8, 0X104D34, "[bp-0X6BC]", "entryCount");
	MakeLocal(0X104BE8, 0X104D34, "[bp-0X658]", "processIds");
	MakeLocal(0X104BE8, 0X104D34, "[bp-0X4C8]", "captions");
	MakeFunction    (0X104D4C,0X104D58);
	SetFunctionFlags(0X104D4C,0x404);
	SetType(0X104D4C, "void __stdcall rtInitLock(RT_LOCK *lock);");
	MakeFunction    (0X104D58,0X104D88);
	SetFunctionFlags(0X104D58,0x400);
	SetType(0X104D58, "void __fastcall rtAcquireLock(RT_LOCK *lock);");
	MakeFrame(0X104D58, 0X8, 0, 0);
	MakeFunction    (0X104D8C,0X104D98);
	SetFunctionFlags(0X104D8C,0x404);
	SetType(0X104D8C, "void __stdcall rtReleaseLock(RT_LOCK *lock);");
	MakeFunction    (0X104D98,0X104DB0);
	SetFunctionFlags(0X104D98,0x400);
	SetType(0X104D98, "uint32_t __fastcall rtAlignToPageSize(uint32_t size);");
	MakeFunction    (0X104DB0,0X104DBC);
	SetFunctionFlags(0X104DB0,0x444);
	SetType(0X104DB0, "u32 __stdcall rtGetPageOfAddress(u32 addr);");
	MakeFunction    (0X104DBC,0X104E0C);
	SetFunctionFlags(0X104DBC,0x400);
	SetType(0X104DBC, "uint32_t __fastcall rtCheckRemoteMemoryRegionSafeForWrite(Handle hProcess, uint32_t addr, uint32_t size);");
	MakeFrame(0X104DBC, 0X10, 0, 0);
	MakeFunction    (0X104E0C,0X104E60);
	SetFunctionFlags(0X104E0C,0x400);
	SetType(0X104E0C, "uint32_t __fastcall rtSafeCopyMemory(uint32_t dst, uint32_t src, uint32_t size);");
	MakeFrame(0X104E0C, 0X18, 0, 0);
	MakeFunction    (0X104E64,0X104EC0);
	SetFunctionFlags(0X104E64,0x400);
	MakeFrame(0X104E64, 0X18, 0, 0);
	MakeFunction    (0X104EC0,0X104F18);
	SetFunctionFlags(0X104EC0,0x400);
	MakeFrame(0X104EC0, 0X18, 0, 0);
	MakeFunction    (0X104F18,0X104F34);
	SetFunctionFlags(0X104F18,0x400);
	MakeFrame(0X104F18, 0X8, 0, 0);
	MakeFunction    (0X104F34,0X105010);
	SetFunctionFlags(0X104F34,0x400);
	SetType(0X104F34, "uint32_t __fastcall rtGetFileSize(uint8_t *fileName);");
	MakeFrame(0X104F34, 0X60, 0, 0);
	MakeLocal(0X104F34, 0X105010, "[bp-0X44]", "openflags");
	MakeLocal(0X104F34, 0X105010, "[bp-0X40]", "attributes");
	MakeLocal(0X104F34, 0X105010, "[bp-0X34]", "out");
	MakeLocal(0X104F34, 0X105010, "[bp-0X30]", "size");
	MakeFunction    (0X105020,0X105150);
	SetFunctionFlags(0X105020,0x400);
	SetType(0X105020, "uint32_t __fastcall rtLoadFileToBuffer(uint8_t *fileName, uint32_t *pBuf, uint32_t bufSize);");
	MakeFrame(0X105020, 0X68, 0, 0);
	MakeLocal(0X105020, 0X105150, "[bp-0X4C]", "openflags");
	MakeLocal(0X105020, 0X105150, "[bp-0X48]", "attributes");
	MakeLocal(0X105020, 0X105150, "[bp-0X40]", "out");
	MakeLocal(0X105020, 0X105150, "[bp-0X38]", "size");
	MakeFunction    (0X105168,0X1051E4);
	SetFunctionFlags(0X105168,0x400);
	MakeFrame(0X105168, 0X18, 0, 0);
	MakeLocal(0X105168, 0X1051E4, "[bp-0X14]", "handle");
	MakeFunction    (0X1051E8,0X1051FC);
	SetFunctionFlags(0X1051E8,0x404);
	SetType(0X1051E8, "u32 __stdcall rtGenerateJumpCode(u32 dst, u32 *buf);");
	MakeFunction    (0X105200,0X105214);
	SetFunctionFlags(0X105200,0x400);
	SetType(0X105200, "u32 __stdcall rtFlushInstructionCache(void *ptr, u32 size);");
	MakeFunction    (0X105218,0X10528C);
	SetFunctionFlags(0X105218,0x400);
	SetType(0X105218, "void __fastcall rtInitHook(RT_HOOK *hook, uint32_t funcAddr, uint32_t callbackAddr);");
	MakeFrame(0X105218, 0X10, 0, 0);
	MakeFunction    (0X105290,0X1052D4);
	SetFunctionFlags(0X105290,0x404);
	SetType(0X105290, "void __stdcall rtEnableHook(RT_HOOK *hook);");
	MakeFrame(0X105290, 0X8, 0, 0);
	MakeFunction    (0X1052D4,0X105318);
	SetFunctionFlags(0X1052D4,0x444);
	SetType(0X1052D4, "void __stdcall rtDisableHook(RT_HOOK *hook);");
	MakeFrame(0X1052D4, 0X8, 0, 0);
	MakeFunction    (0X105318,0X105390);
	SetFunctionFlags(0X105318,0x400);
	MakeFrame(0X105318, 0X48, 0, 0);
	MakeLocal(0X105318, 0X105390, "[bp-0X2C]", "openflags");
	MakeLocal(0X105318, 0X105390, "[bp-0X28]", "attributes");
	MakeLocal(0X105318, 0X105390, "[bp-0X20]", "out");
	MakeFunction    (0X1053CC,0X105408);
	SetFunctionFlags(0X1053CC,0x400);
	MakeFrame(0X1053CC, 0X28, 0, 0);
	MakeFunction    (0X105408,0X10540C);
	SetFunctionFlags(0X105408,0x480);
	MakeFunction    (0X10540C,0X10542C);
	SetFunctionFlags(0X10540C,0x400);
	MakeFunction    (0X10543C,0X105544);
	SetFunctionFlags(0X10543C,0x400);
	MakeFrame(0X10543C, 0X20, 0, 0);
	MakeFunction    (0X105544,0X105674);
	SetFunctionFlags(0X105544,0x400);
	MakeFrame(0X105544, 0X24, 0, 0);
	MakeFunction    (0X105674,0X1056BC);
	SetFunctionFlags(0X105674,0x400);
	MakeFrame(0X105674, 0X48, 0, 0);
	MakeFunction    (0X1056C0,0X105840);
	SetFunctionFlags(0X1056C0,0x400);
	MakeFrame(0X1056C0, 0X78, 0, 0);
	MakeFunction    (0X1058C8,0X10591C);
	SetFunctionFlags(0X1058C8,0x400);
	MakeFrame(0X1058C8, 0X8, 0, 0);
	MakeFunction    (0X10593C,0X105990);
	SetFunctionFlags(0X10593C,0x400);
	MakeFunction    (0X1059B8,0X1059F0);
	SetFunctionFlags(0X1059B8,0x400);
	MakeFunction    (0X1059F4,0X105A3C);
	SetFunctionFlags(0X1059F4,0x400);
	MakeFrame(0X1059F4, 0X10, 0, 0);
	MakeFunction    (0X105A80,0X105AE0);
	SetFunctionFlags(0X105A80,0x400);
	MakeFrame(0X105A80, 0X18, 0, 0);
	MakeLocal(0X105A80, 0X105AE0, "[bp-0X18]", "otherpermission");
	MakeFunction    (0X105AE8,0X105AF4);
	SetFunctionFlags(0X105AE8,0x400);
	MakeFunction    (0X105AF8,0X105B60);
	SetFunctionFlags(0X105AF8,0x400);
	MakeFrame(0X105AF8, 0X18, 0, 0);
	MakeFunction    (0X105B68,0X105BC0);
	SetFunctionFlags(0X105B68,0x400);
	MakeFrame(0X105B68, 0X10, 0, 0);
	MakeFunction    (0X105C30,0X105C90);
	SetFunctionFlags(0X105C30,0x400);
	MakeFrame(0X105C30, 0X10, 0, 0);
	MakeFunction    (0X105C98,0X105D90);
	SetFunctionFlags(0X105C98,0x400);
	MakeFrame(0X105C98, 0X48, 0, 0);
	MakeFunction    (0X105D9C,0X105E64);
	SetFunctionFlags(0X105D9C,0x400);
	MakeFrame(0X105D9C, 0X40, 0, 0);
	MakeFunction    (0X105F3C,0X106058);
	SetFunctionFlags(0X105F3C,0x400);
	MakeFrame(0X105F3C, 0X48, 0, 0);
	MakeFunction    (0X106060,0X1061A0);
	SetFunctionFlags(0X106060,0x400);
	MakeFrame(0X106060, 0X58, 0, 0);
	MakeFunction    (0X1061A8,0X1062B4);
	SetFunctionFlags(0X1061A8,0x400);
	MakeFrame(0X1061A8, 0X50, 0, 0);
	MakeFunction    (0X1062BC,0X1063CC);
	SetFunctionFlags(0X1062BC,0x400);
	MakeFrame(0X1062BC, 0X50, 0, 0);
	MakeFunction    (0X1063D4,0X106400);
	SetFunctionFlags(0X1063D4,0x400);
	MakeFrame(0X1063D4, 0X4, 0, 0);
	MakeFunction    (0X106400,0X10642C);
	SetFunctionFlags(0X106400,0x400);
	MakeFrame(0X106400, 0X4, 0, 0);
	MakeFunction    (0X10642C,0X106448);
	SetFunctionFlags(0X10642C,0x400);
	MakeFrame(0X10642C, 0X10, 0, 0);
	MakeFunction    (0X106448,0X106464);
	SetFunctionFlags(0X106448,0x400);
	MakeFrame(0X106448, 0X10, 0, 0);
	MakeFunction    (0X1068F4,0X10691C);
	SetFunctionFlags(0X1068F4,0x400);
	SetType(0X1068F4, "Result __stdcall exitSrv();");
	MakeFrame(0X1068F4, 0X8, 0, 0);
	MakeFunction    (0X106920,0X106958);
	SetFunctionFlags(0X106920,0x400);
	SetType(0X106920, "Result __fastcall srv_RegisterClient(Handle *handleptr);");
	MakeFrame(0X106920, 0X10, 0, 0);
	MakeFunction    (0X106960,0X10698C);
	SetFunctionFlags(0X106960,0x400);
	SetType(0X106960, "Result __stdcall initSrv();");
	MakeFrame(0X106960, 0X8, 0, 0);
	MakeFunction    (0X106994,0X106A18);
	SetFunctionFlags(0X106994,0x400);
	SetType(0X106994, "Result __fastcall srv_getServiceHandle(Handle *handleptr, Handle *out, unsigned __int8 *server);");
	MakeFrame(0X106994, 0X20, 0, 0);
	MakeFunction    (0X106A20,0X106A2C);
	SetFunctionFlags(0X106A20,0x404);
	MakeFunction    (0X106A2C,0X106A4C);
	SetFunctionFlags(0X106A2C,0x444);
	SetType(0X106A2C, "s32 __stdcall svcControlMemory(u32 *addr_out, u32 addr0, u32 addr1, u32 size, MemOp op, MemPerm perm);");
	MakeFrame(0X106A2C, 0X8, 0, 0);
	MakeLocal(0X106A2C, 0X106A4C, "[bp+0]", "op");
	MakeLocal(0X106A2C, 0X106A4C, "[bp+0X4]", "perm");
	MakeFunction    (0X106A4C,0X106A54);
	SetFunctionFlags(0X106A4C,0x445);
	SetType(0X106A4C, "void __stdcall __noreturn svcExitProcess();");
	MakeFunction    (0X106A54,0X106A74);
	SetFunctionFlags(0X106A54,0x444);
	SetType(0X106A54, "s32 __stdcall svcCreateThread(Handle *thread, ThreadFunc entrypoint, u32 arg, u32 *stack_top, s32 thread_priority, s32 processor_id);");
	MakeFrame(0X106A54, 0X8, 0, 0);
	MakeLocal(0X106A54, 0X106A74, "[bp+0]", "thread_priority");
	MakeLocal(0X106A54, 0X106A74, "[bp+0X4]", "processor_id");
	MakeFunction    (0X106A74,0X106A7C);
	SetFunctionFlags(0X106A74,0x445);
	SetType(0X106A74, "void __stdcall __noreturn svcExitThread();");
	MakeFunction    (0X106A7C,0X106A84);
	SetFunctionFlags(0X106A7C,0x404);
	SetType(0X106A7C, "void __stdcall svcSleepThread(s64 ns);");
	MakeFunction    (0X106A84,0X106A98);
	SetFunctionFlags(0X106A84,0x404);
	SetType(0X106A84, "Result __stdcall svcCreateMutex(Handle *mutex, bool initialLocked);");
	MakeFrame(0X106A84, 0X4, 0, 0);
	MakeFunction    (0X106A98,0X106AA0);
	SetFunctionFlags(0X106A98,0x404);
	SetType(0X106A98, "s32 __stdcall svcReleaseMutex(Handle handle);");
	MakeFunction    (0X106AA0,0X106AB4);
	SetFunctionFlags(0X106AA0,0x404);
	SetType(0X106AA0, "Result __stdcall svcReleaseSemaphore(s32 *count, Handle semaphore, s32 releaseCount);");
	MakeFrame(0X106AA0, 0X4, 0, 0);
	MakeFunction    (0X106AB4,0X106AC8);
	SetFunctionFlags(0X106AB4,0x404);
	SetType(0X106AB4, "s32 __stdcall svcCreateEvent(Handle *event, u8 reset_type);");
	MakeFrame(0X106AB4, 0X4, 0, 0);
	MakeFunction    (0X106AC8,0X106AD0);
	SetFunctionFlags(0X106AC8,0x404);
	SetType(0X106AC8, "Result __stdcall svcSignalEvent(Handle handle);");
	MakeFunction    (0X106AD0,0X106AD8);
	SetFunctionFlags(0X106AD0,0x404);
	SetType(0X106AD0, "s32 __stdcall svcClearEvent(Handle handle);");
	MakeFunction    (0X106AD8,0X106AF0);
	SetFunctionFlags(0X106AD8,0x404);
	SetType(0X106AD8, "s32 __stdcall svcCreateMemoryBlock(Handle *memblock, u32 addr, u32 size, MemPerm my_perm, MemPerm other_perm);");
	MakeFrame(0X106AD8, 0X4, 0, 0);
	MakeLocal(0X106AD8, 0X106AF0, "[bp+0]", "otherpermission");
	MakeFunction    (0X106AF0,0X106AF8);
	SetFunctionFlags(0X106AF0,0x404);
	SetType(0X106AF0, "Result __stdcall svcMapMemoryBlock(Handle memblock, u32 addr, u32 mypermissions, u32 otherpermission);");
	MakeFunction    (0X106AF8,0X106B00);
	SetFunctionFlags(0X106AF8,0x404);
	SetType(0X106AF8, "s32 __stdcall svcUnmapMemoryBlock(Handle memblock, u32 addr);");
	MakeFunction    (0X106B00,0X106B08);
	SetFunctionFlags(0X106B00,0x404);
	SetType(0X106B00, "Result __stdcall svcArbitrateAddress(Handle arbiter, u32 addr, u8 type, s32 value, s64 nanoseconds);");
	MakeFunction    (0X106B08,0X106B10);
	SetFunctionFlags(0X106B08,0x404);
	SetType(0X106B08, "s32 __stdcall svcCloseHandle(Handle handle);");
	MakeFunction    (0X106B10,0X106B18);
	SetFunctionFlags(0X106B10,0x404);
	SetType(0X106B10, "s32 __stdcall svcWaitSynchronization(Handle handle, s64 nanoseconds);");
	MakeFunction    (0X106B18,0X106B38);
	SetFunctionFlags(0X106B18,0x404);
	SetType(0X106B18, "Result __stdcall svcWaitSynchronizationN(s32 *out, Handle *handles, s32 handlecount, bool waitAll, s64 nanoseconds);");
	MakeFrame(0X106B18, 0X4, 0, 0);
	MakeLocal(0X106B18, 0X106B38, "[bp+0]", "nanoseconds");
	MakeFunction    (0X106B38,0X106B40);
	SetFunctionFlags(0X106B38,0x404);
	SetType(0X106B38, "u64 __stdcall svcGetSystemTick();");
	MakeFunction    (0X106B40,0X106B5C);
	SetFunctionFlags(0X106B40,0x404);
	SetType(0X106B40, "Result __stdcall svcGetSystemInfo(s64 *out, u32 type, s32 param);");
	MakeFrame(0X106B40, 0X8, 0, 0);
	MakeFunction    (0X106B5C,0X106B78);
	SetFunctionFlags(0X106B5C,0x404);
	SetType(0X106B5C, "s32 __stdcall svcGetProcessInfo(s64 *out, Handle process, u32 type);");
	MakeFrame(0X106B5C, 0X8, 0, 0);
	MakeFunction    (0X106B78,0X106B8C);
	SetFunctionFlags(0X106B78,0x404);
	SetType(0X106B78, "s32 __stdcall svcConnectToPort(volatile Handle *out, const char *portName);");
	MakeFrame(0X106B78, 0X4, 0, 0);
	MakeFunction    (0X106B8C,0X106B94);
	SetFunctionFlags(0X106B8C,0x404);
	SetType(0X106B8C, "s32 __stdcall svcSendSyncRequest(Handle session);");
	MakeFunction    (0X106B94,0X106BA8);
	SetFunctionFlags(0X106B94,0x444);
	SetType(0X106B94, "s32 __stdcall svcGetProcessId(u32 *out, Handle handle);");
	MakeFrame(0X106B94, 0X4, 0, 0);
	MakeFunction    (0X106BA8,0X106BBC);
	SetFunctionFlags(0X106BA8,0x444);
	SetType(0X106BA8, "s32 __stdcall svcGetThreadId(u32 *out, Handle handle);");
	MakeFrame(0X106BA8, 0X4, 0, 0);
	MakeFunction    (0X106BBC,0X106BC4);
	SetFunctionFlags(0X106BBC,0x444);
	SetType(0X106BBC, "s32 __stdcall svcSetThreadIdealProcessor(Handle thread, s32 processorid);");
	MakeFunction    (0X106BC4,0X106BD8);
	SetFunctionFlags(0X106BC4,0x404);
	SetType(0X106BC4, "Result __stdcall svcOpenThread(Handle *thread, Handle process, u32 threadId);");
	MakeFrame(0X106BC4, 0X4, 0, 0);
	MakeFunction    (0X106BD8,0X106BE0);
	SetFunctionFlags(0X106BD8,0x444);
	SetType(0X106BD8, "Result __stdcall svcFlushProcessDataCache(Handle handle, u32 addr, u32 size);");
	MakeFunction    (0X106BE0,0X106BE8);
	SetFunctionFlags(0X106BE0,0x444);
	SetType(0X106BE0, "Result __stdcall svcInvalidateProcessDataCache(Handle handle, u32 addr, u32 size);");
	MakeFunction    (0X106BE8,0X106BF0);
	SetFunctionFlags(0X106BE8,0x404);
	SetType(0X106BE8, "s32 __stdcall svcQueryMemory(MemInfo *info, PageInfo *out, u32 addr);");
	MakeFunction    (0X106BF0,0X106BF8);
	SetFunctionFlags(0X106BF0,0x404);
	SetType(0X106BF0, "Result __stdcall svcAddCodeSegment(u32 addr, u32 size);");
	MakeFunction    (0X106BF8,0X106C00);
	SetFunctionFlags(0X106BF8,0x400);
	SetType(0X106BF8, "s32 __stdcall svcTerminateProcess(Handle thread);");
	MakeFunction    (0X106C00,0X106C14);
	SetFunctionFlags(0X106C00,0x404);
	SetType(0X106C00, "Result __stdcall svcOpenProcess(Handle *process, u32 processId);");
	MakeFrame(0X106C00, 0X4, 0, 0);
	MakeFunction    (0X106C14,0X106C2C);
	SetFunctionFlags(0X106C14,0x444);
	SetType(0X106C14, "Result __stdcall svcControlProcessMemory(Handle hProcess, void *Addr0, void *Addr1, u32 size, u32 Type, u32 Permissions);");
	MakeFrame(0X106C14, 0XC, 0, 0);
	MakeLocal(0X106C14, 0X106C2C, "[bp+0]", "Type");
	MakeLocal(0X106C14, 0X106C2C, "[bp+0X4]", "Permissions");
	MakeFunction    (0X106C2C,0X106C34);
	SetFunctionFlags(0X106C2C,0x444);
	SetType(0X106C2C, "Result __stdcall svcMapProcessMemory(Handle process, u32 startAddr, u32 endAddr);");
	MakeFunction    (0X106C34,0X106C54);
	SetFunctionFlags(0X106C34,0x444);
	SetType(0X106C34, "Result __stdcall svcStartInterProcessDma(Handle *hdma, Handle dstProcess, void *dst, Handle srcProcess, const void *src, u32 size, u32 *config);");
	MakeFrame(0X106C34, 0XC, 0, 0);
	MakeLocal(0X106C34, 0X106C54, "[bp+0]", "src");
	MakeLocal(0X106C34, 0X106C54, "[bp+0X4]", "size");
	MakeLocal(0X106C34, 0X106C54, "[bp+0X8]", "config");
	MakeFunction    (0X106C54,0X106C68);
	SetFunctionFlags(0X106C54,0x444);
	SetType(0X106C54, "Result __stdcall svcGetDmaState(u32 *state, Handle dma);");
	MakeFrame(0X106C54, 0X4, 0, 0);
	MakeFunction    (0X106C68,0X106C70);
	SetFunctionFlags(0X106C68,0x404);
	SetType(0X106C68, "Result __stdcall svcBackdoor(s32 (*callback)(void));");
	MakeFunction    (0X106C70,0X106C84);
	SetFunctionFlags(0X106C70,0x404);
	SetType(0X106C70, "Result __stdcall svcGetProcessList(s32 *processCount, u32 *processIds, s32 processIdMaxCount);");
	MakeFrame(0X106C70, 0X4, 0, 0);
	MakeFunction    (0X106C84,0X106C98);
	SetFunctionFlags(0X106C84,0x404);
	SetType(0X106C84, "Result __stdcall svcGetThreadList(s32 *threadCount, u32 *threadIds, s32 threadIdMaxCount, Handle domain);");
	MakeFrame(0X106C84, 0X4, 0, 0);
	MakeFunction    (0X106C98,0X106CA0);
	SetFunctionFlags(0X106C98,0x404);
	MakeFunction    (0X106CA0,0X106CB4);
	SetFunctionFlags(0X106CA0,0x444);
	SetType(0X106CA0, "Result __stdcall svc_debugActiveProcess(s32 *handle_out, u32 pid);");
	MakeFrame(0X106CA0, 0X4, 0, 0);
	MakeFunction    (0X106CB4,0X106CBC);
	SetFunctionFlags(0X106CB4,0x444);
	SetType(0X106CB4, "Result __stdcall svcReadProcessMemory(void *buffer, Handle debug, u32 addr, u32 size);");
	MakeFunction    (0X106CBC,0X106CC4);
	SetFunctionFlags(0X106CBC,0x444);
	SetType(0X106CBC, "Result __stdcall svc_writeProcessMemory(Handle debug, const void *buffer, u32 addr, u32 size);");
	MakeFunction    (0X106CD0,0X106CE4);
	SetFunctionFlags(0X106CD0,0x400);
	MakeFunction    (0X106CF0,0X106DD0);
	SetFunctionFlags(0X106CF0,0x400);
	MakeFrame(0X106CF0, 0X10, 0, 0);
	MakeFunction    (0X106DD8,0X106E64);
	SetFunctionFlags(0X106DD8,0x400);
	MakeFrame(0X106DD8, 0X8, 0, 0);
	MakeFunction    (0X106E7C,0X106ECC);
	SetFunctionFlags(0X106E7C,0x400);
	MakeFrame(0X106E7C, 0X8, 0, 0);
	MakeFunction    (0X106ED4,0X106FC0);
	SetFunctionFlags(0X106ED4,0x400);
	MakeFrame(0X106ED4, 0X8, 0, 0);
	MakeFunction    (0X106FFC,0X107018);
	SetFunctionFlags(0X106FFC,0x400);
	MakeFunction    (0X107020,0X107044);
	SetFunctionFlags(0X107020,0x400);
	MakeFrame(0X107020, 0X8, 0, 0);
	MakeFunction    (0X10704C,0X107074);
	SetFunctionFlags(0X10704C,0x400);
	MakeFrame(0X10704C, 0X8, 0, 0);
	MakeFunction    (0X10707C,0X107098);
	SetFunctionFlags(0X10707C,0x400);
	MakeFunction    (0X1070A0,0X1070B8);
	SetFunctionFlags(0X1070A0,0x400);
	MakeFunction    (0X1070C4,0X107104);
	SetFunctionFlags(0X1070C4,0x400);
	MakeFunction    (0X107104,0X107128);
	SetFunctionFlags(0X107104,0x400);
	MakeFrame(0X107104, 0X8, 0, 0);
	MakeFunction    (0X10712C,0X10715C);
	SetFunctionFlags(0X10712C,0x404);
	SetType(0X10712C, "void __stdcall debounceKey();");
	MakeFrame(0X10712C, 0X8, 0, 0);
	MakeFunction    (0X107160,0X107188);
	SetFunctionFlags(0X107160,0x400);
	MakeFrame(0X107160, 0X8, 0, 0);
	MakeFunction    (0X107188,0X1071EC);
	SetFunctionFlags(0X107188,0x400);
	MakeFrame(0X107188, 0X10, 0, 0);
	MakeFunction    (0X107200,0X10721C);
	SetFunctionFlags(0X107200,0x400);
	MakeFrame(0X107200, 0X8, 0, 0);
	MakeFunction    (0X107220,0X1072E4);
	SetFunctionFlags(0X107220,0x400);
	MakeFrame(0X107220, 0X18, 0, 0);
	MakeFunction    (0X107300,0X107360);
	SetFunctionFlags(0X107300,0x400);
	MakeFunction    (0X10736C,0X1073CC);
	SetFunctionFlags(0X10736C,0x400);
	MakeFrame(0X10736C, 0X8, 0, 0);
	MakeFunction    (0X1073D0,0X1073EC);
	SetFunctionFlags(0X1073D0,0x404);
	SetType(0X1073D0, "uint32_t __stdcall getKey();");
	MakeFunction    (0X1073F0,0X107420);
	SetFunctionFlags(0X1073F0,0x400);
	SetType(0X1073F0, "uint32_t __stdcall waitKey();");
	MakeFrame(0X1073F0, 0X8, 0, 0);
	MakeFunction    (0X107420,0X107568);
	SetFunctionFlags(0X107420,0x400);
	SetType(0X107420, "int32_t __fastcall showMenu(uint8_t *title, uint32_t entryCount, uint8_t **captions);");
	MakeFrame(0X107420, 0X100, 0, 0);
	MakeLocal(0X107420, 0X107568, "[bp-0X100]", "g");
	MakeLocal(0X107420, 0X107568, "[bp-0XFC]", "b");
	MakeLocal(0X107420, 0X107568, "[bp-0XF4]", "s");
	MakeFunction    (0X107574,0X107624);
	SetFunctionFlags(0X107574,0x400);
	MakeFrame(0X107574, 0X18, 0, 0);
	MakeLocal(0X107574, 0X107624, "[bp-0X18]", "g");
	MakeLocal(0X107574, 0X107624, "[bp-0X14]", "b");
	MakeFunction    (0X107634,0X107670);
	SetFunctionFlags(0X107634,0x400);
	MakeFrame(0X107634, 0X1A0, 0, 0);
	MakeFunction    (0X107670,0X1076D8);
	SetFunctionFlags(0X107670,0x400);
	MakeFrame(0X107670, 0X8, 0, 0);
	MakeFunction    (0X1076E0,0X107710);
	SetFunctionFlags(0X1076E0,0x400);
	MakeFunction    (0X107710,0X107748);
	SetFunctionFlags(0X107710,0x400);
	MakeFrame(0X107710, 0X4, 0, 0);
	MakeFunction    (0X107818,0X10784C);
	SetFunctionFlags(0X107818,0x400);
	MakeFunction    (0X107854,0X107874);
	SetFunctionFlags(0X107854,0x400);
	MakeFrame(0X107854, 0X8, 0, 0);
	MakeFunction    (0X1078AC,0X107B68);
	SetFunctionFlags(0X1078AC,0x400);
	MakeFrame(0X1078AC, 0X40, 0, 0);
	MakeFunction    (0X107B68,0X107B90);
	SetFunctionFlags(0X107B68,0x400);
	MakeFrame(0X107B68, 0X20, 0, 0);
	MakeLocal(0X107B68, 0X107B90, "[bp-0X10]", "varg_r0");
	MakeLocal(0X107B68, 0X107B90, "[bp-0XC]", "varg_r1");
	MakeLocal(0X107B68, 0X107B90, "[bp-0X8]", "varg_r2");
	MakeLocal(0X107B68, 0X107B90, "[bp-0X4]", "varg_r3");
	MakeFunction    (0X107B90,0X107BD0);
	SetFunctionFlags(0X107B90,0x400);
	MakeFrame(0X107B90, 0X20, 0, 0);
	MakeLocal(0X107B90, 0X107BD0, "[bp-0XC]", "varg_r1");
	MakeLocal(0X107B90, 0X107BD0, "[bp-0X8]", "varg_r2");
	MakeLocal(0X107B90, 0X107BD0, "[bp-0X4]", "varg_r3");
	MakeFunction    (0X107CDC,0X107D8C);
	SetFunctionFlags(0X107CDC,0x400);
	MakeFunction    (0X107EE0,0X107FD0);
	SetFunctionFlags(0X107EE0,0x444);
	MakeFrame(0X107EE0, 0X10, 0, 0);
	MakeFunction    (0X107FD0,0X1080C4);
	SetFunctionFlags(0X107FD0,0x444);
	MakeFrame(0X107FD0, 0X8, 0, 0);
	MakeFunction    (0X1080C4,0X108140);
	SetFunctionFlags(0X1080C4,0x400);
	MakeFrame(0X1080C4, 0X8, 0, 0);
	MakeFunction    (0X108148,0X10836C);
	SetFunctionFlags(0X108148,0x444);
	MakeFrame(0X108148, 0X4, 0, 0);
	MakeFunction    (0X10836C,0X10845C);
	SetFunctionFlags(0X10836C,0x444);
	MakeFrame(0X10836C, 0X8, 0, 0);
	MakeFunction    (0X10845C,0X1084BC);
	SetFunctionFlags(0X10845C,0x444);
	MakeFunction    (0X1084BC,0X1085B0);
	SetFunctionFlags(0X1084BC,0x444);
	MakeFunction    (0X1085B0,0X1085D0);
	SetFunctionFlags(0X1085B0,0x444);
	MakeFunction    (0X109DE0,0X109E0C);
	SetFunctionFlags(0X109DE0,0x400);
	MakeFrame(0X109DE0, 0X38, 0, 0);
	MakeFunction    (0X10AB50,0X10AB76);
	SetFunctionFlags(0X10AB50,0x400);
}

//------------------------------------------------------------------------
// Information about functions

static Functions(void) {

	Functions_0();
}

//------------------------------------------------------------------------
// Information about segment registers

static SegRegs(void) {
	SetRegEx(0X100100,"T",0,3);
	SetRegEx(0X100100,"DS",0,3);
	SetRegEx(0X100104,"T",0,3);
	SetRegEx(0X100118,"T",0,3);
	SetRegEx(0X100124,"T",0,3);
	SetRegEx(0X10014C,"T",0,3);
	SetRegEx(0X100168,"T",0,3);
	SetRegEx(0X100180,"T",0,3);
	SetRegEx(0X1001A4,"T",0,3);
	SetRegEx(0X1001C4,"T",0,3);
	SetRegEx(0X1001D0,"T",0,3);
	SetRegEx(0X1001FC,"T",0,3);
	SetRegEx(0X100224,"T",0,3);
	SetRegEx(0X100230,"T",0,3);
	SetRegEx(0X100260,"T",0,3);
	SetRegEx(0X100268,"T",0,3);
	SetRegEx(0X100270,"T",0,3);
	SetRegEx(0X1002DC,"T",0,3);
	SetRegEx(0X100314,"T",0,3);
	SetRegEx(0X100320,"T",0,3);
	SetRegEx(0X100354,"T",0,3);
	SetRegEx(0X100378,"T",0,3);
	SetRegEx(0X1003A4,"T",0,3);
	SetRegEx(0X1003F0,"T",0,3);
	SetRegEx(0X1003F8,"T",0,3);
	SetRegEx(0X100484,"T",0,3);
	SetRegEx(0X1004CC,"T",0,3);
	SetRegEx(0X100518,"T",0,3);
	SetRegEx(0X100568,"T",0,3);
	SetRegEx(0X1005C8,"T",0,3);
	SetRegEx(0X100600,"T",0,3);
	SetRegEx(0X100624,"T",0,3);
	SetRegEx(0X100650,"T",0,3);
	SetRegEx(0X10065C,"T",0,3);
	SetRegEx(0X10066C,"T",0,3);
	SetRegEx(0X100688,"T",0,3);
	SetRegEx(0X10068C,"T",0,3);
	SetRegEx(0X1006C0,"T",0,3);
	SetRegEx(0X100750,"T",0,3);
	SetRegEx(0X100760,"T",0,3);
	SetRegEx(0X100810,"T",0,3);
	SetRegEx(0X100820,"T",0,3);
	SetRegEx(0X100898,"T",0,3);
	SetRegEx(0X1008A4,"T",0,3);
	SetRegEx(0X100920,"T",0,3);
	SetRegEx(0X100930,"T",0,3);
	SetRegEx(0X100978,"T",0,3);
	SetRegEx(0X100984,"T",0,3);
	SetRegEx(0X1009B4,"T",0,3);
	SetRegEx(0X100A20,"T",0,3);
	SetRegEx(0X100A94,"T",0,3);
	SetRegEx(0X100AD8,"T",0,3);
	SetRegEx(0X100B14,"T",0,3);
	SetRegEx(0X100B78,"T",0,3);
	SetRegEx(0X100BB4,"T",0,3);
	SetRegEx(0X100BFC,"T",0,3);
	SetRegEx(0X100C14,"T",0,3);
	SetRegEx(0X100C28,"T",0,3);
	SetRegEx(0X100CA8,"T",0,3);
	SetRegEx(0X100D2C,"T",0,3);
	SetRegEx(0X100D68,"T",0,3);
	SetRegEx(0X100D78,"T",0,3);
	SetRegEx(0X100DC4,"T",0,3);
	SetRegEx(0X100E0C,"T",0,3);
	SetRegEx(0X100E14,"T",0,3);
	SetRegEx(0X100E98,"T",0,3);
	SetRegEx(0X100EAC,"T",0,3);
	SetRegEx(0X100ED0,"T",0,3);
	SetRegEx(0X100EEC,"T",0,3);
	SetRegEx(0X100F20,"T",0,3);
	SetRegEx(0X100F3C,"T",0,3);
	SetRegEx(0X100F64,"T",0,3);
	SetRegEx(0X100F68,"T",0,3);
	SetRegEx(0X10100C,"T",0,3);
	SetRegEx(0X10101C,"T",0,3);
	SetRegEx(0X101058,"T",0,3);
	SetRegEx(0X101078,"T",0,3);
	SetRegEx(0X101088,"T",0,3);
	SetRegEx(0X101094,"T",0,3);
	SetRegEx(0X10109C,"T",0,3);
	SetRegEx(0X1010F0,"T",0,3);
	SetRegEx(0X1010F8,"T",0,3);
	SetRegEx(0X10111C,"T",0,3);
	SetRegEx(0X101184,"T",0,3);
	SetRegEx(0X1011AC,"T",0,3);
	SetRegEx(0X1011C8,"T",0,3);
	SetRegEx(0X1011E4,"T",0,3);
	SetRegEx(0X101268,"T",0,3);
	SetRegEx(0X101278,"T",0,3);
	SetRegEx(0X101310,"T",0,3);
	SetRegEx(0X10133C,"T",0,3);
	SetRegEx(0X10135C,"T",0,3);
	SetRegEx(0X10137C,"T",0,3);
	SetRegEx(0X10139C,"T",0,3);
	SetRegEx(0X1013F4,"T",0,3);
	SetRegEx(0X101450,"T",0,3);
	SetRegEx(0X101458,"T",0,3);
	SetRegEx(0X1014B4,"T",0,3);
	SetRegEx(0X1014CC,"T",0,3);
	SetRegEx(0X1014DC,"T",0,3);
	SetRegEx(0X101570,"T",0,3);
	SetRegEx(0X101578,"T",0,3);
	SetRegEx(0X101594,"T",0,3);
	SetRegEx(0X10159C,"T",0,3);
	SetRegEx(0X1015C0,"T",0,3);
	SetRegEx(0X1015D8,"T",0,3);
	SetRegEx(0X10165C,"T",0,3);
	SetRegEx(0X101670,"T",0,3);
	SetRegEx(0X10168C,"T",0,3);
	SetRegEx(0X1016DC,"T",0,3);
	SetRegEx(0X1016EC,"T",0,3);
	SetRegEx(0X101720,"T",0,3);
	SetRegEx(0X1017C4,"T",0,3);
	SetRegEx(0X1017E8,"T",0,3);
	SetRegEx(0X10181C,"T",0,3);
	SetRegEx(0X101830,"T",0,3);
	SetRegEx(0X101854,"T",0,3);
	SetRegEx(0X1018D4,"T",0,3);
	SetRegEx(0X1018E4,"T",0,3);
	SetRegEx(0X1018EC,"T",0,3);
	SetRegEx(0X101900,"T",0,3);
	SetRegEx(0X101938,"T",0,3);
	SetRegEx(0X10193C,"T",0,3);
	SetRegEx(0X10195C,"T",0,3);
	SetRegEx(0X101990,"T",0,3);
	SetRegEx(0X1019A0,"T",0,3);
	SetRegEx(0X1019A8,"T",0,3);
	SetRegEx(0X1019C0,"T",0,3);
	SetRegEx(0X1019CC,"T",0,3);
	SetRegEx(0X1019D8,"T",0,3);
	SetRegEx(0X1019E0,"T",0,3);
	SetRegEx(0X101A14,"T",0,3);
	SetRegEx(0X101A60,"T",0,3);
	SetRegEx(0X101A74,"T",0,3);
	SetRegEx(0X101A9C,"T",0,3);
	SetRegEx(0X101AD8,"T",0,3);
	SetRegEx(0X101AF0,"T",0,3);
	SetRegEx(0X101B2C,"T",0,3);
	SetRegEx(0X101B44,"T",0,3);
	SetRegEx(0X101BF8,"T",0,3);
	SetRegEx(0X101C50,"T",0,3);
	SetRegEx(0X101C64,"T",0,3);
	SetRegEx(0X101C84,"T",0,3);
	SetRegEx(0X101C94,"T",0,3);
	SetRegEx(0X101CC4,"T",0,3);
	SetRegEx(0X101D28,"T",0,3);
	SetRegEx(0X101D30,"T",0,3);
	SetRegEx(0X101D44,"T",0,3);
	SetRegEx(0X101DA8,"T",0,3);
	SetRegEx(0X101DB0,"T",0,3);
	SetRegEx(0X101DC4,"T",0,3);
	SetRegEx(0X101E04,"T",0,3);
	SetRegEx(0X101E38,"T",0,3);
	SetRegEx(0X101EA4,"T",0,3);
	SetRegEx(0X101EF4,"T",0,3);
	SetRegEx(0X101F14,"T",0,3);
	SetRegEx(0X101F30,"T",0,3);
	SetRegEx(0X101FB0,"T",0,3);
	SetRegEx(0X10201C,"T",0,3);
	SetRegEx(0X10204C,"T",0,3);
	SetRegEx(0X102050,"T",0,3);
	SetRegEx(0X102090,"T",0,3);
	SetRegEx(0X1020C0,"T",0,3);
	SetRegEx(0X1020E8,"T",0,3);
	SetRegEx(0X102104,"T",0,3);
	SetRegEx(0X102124,"T",0,3);
	SetRegEx(0X102178,"T",0,3);
	SetRegEx(0X1021A4,"T",0,3);
	SetRegEx(0X1021AC,"T",0,3);
	SetRegEx(0X1021B8,"T",0,3);
	SetRegEx(0X1021CC,"T",0,3);
	SetRegEx(0X1021E0,"T",0,3);
	SetRegEx(0X1021FC,"T",0,3);
	SetRegEx(0X10233C,"T",0,3);
	SetRegEx(0X102340,"T",0,3);
	SetRegEx(0X102348,"T",0,3);
	SetRegEx(0X102354,"T",0,3);
	SetRegEx(0X102388,"T",0,3);
	SetRegEx(0X1023BC,"T",0,3);
	SetRegEx(0X1023E0,"T",0,3);
	SetRegEx(0X102408,"T",0,3);
	SetRegEx(0X10241C,"T",0,3);
	SetRegEx(0X102434,"T",0,3);
	SetRegEx(0X102474,"T",0,3);
	SetRegEx(0X102484,"T",0,3);
	SetRegEx(0X1024C0,"T",0,3);
	SetRegEx(0X1024C8,"T",0,3);
	SetRegEx(0X1024DC,"T",0,3);
	SetRegEx(0X1024EC,"T",0,3);
	SetRegEx(0X102508,"T",0,3);
	SetRegEx(0X102538,"T",0,3);
	SetRegEx(0X102564,"T",0,3);
	SetRegEx(0X10256C,"T",0,3);
	SetRegEx(0X102578,"T",0,3);
	SetRegEx(0X1025A0,"T",0,3);
	SetRegEx(0X1025E8,"T",0,3);
	SetRegEx(0X1025F0,"T",0,3);
	SetRegEx(0X1025FC,"T",0,3);
	SetRegEx(0X102604,"T",0,3);
	SetRegEx(0X10263C,"T",0,3);
	SetRegEx(0X102644,"T",0,3);
	SetRegEx(0X102658,"T",0,3);
	SetRegEx(0X10267C,"T",0,3);
	SetRegEx(0X1026B0,"T",0,3);
	SetRegEx(0X1026DC,"T",0,3);
	SetRegEx(0X10270C,"T",0,3);
	SetRegEx(0X102718,"T",0,3);
	SetRegEx(0X102758,"T",0,3);
	SetRegEx(0X102760,"T",0,3);
	SetRegEx(0X102794,"T",0,3);
	SetRegEx(0X1027B4,"T",0,3);
	SetRegEx(0X1027BC,"T",0,3);
	SetRegEx(0X1027D0,"T",0,3);
	SetRegEx(0X1027F4,"T",0,3);
	SetRegEx(0X102838,"T",0,3);
	SetRegEx(0X102890,"T",0,3);
	SetRegEx(0X1028A0,"T",0,3);
	SetRegEx(0X1028B0,"T",0,3);
	SetRegEx(0X1028D4,"T",0,3);
	SetRegEx(0X1028DC,"T",0,3);
	SetRegEx(0X1028F8,"T",0,3);
	SetRegEx(0X102900,"T",0,3);
	SetRegEx(0X10290C,"T",0,3);
	SetRegEx(0X10291C,"T",0,3);
	SetRegEx(0X102940,"T",0,3);
	SetRegEx(0X102948,"T",0,3);
	SetRegEx(0X102964,"T",0,3);
	SetRegEx(0X10296C,"T",0,3);
	SetRegEx(0X102970,"T",0,3);
	SetRegEx(0X10298C,"T",0,3);
	SetRegEx(0X102990,"T",0,3);
	SetRegEx(0X1029D4,"T",0,3);
	SetRegEx(0X102A04,"T",0,3);
	SetRegEx(0X102A30,"T",0,3);
	SetRegEx(0X102A84,"T",0,3);
	SetRegEx(0X102A8C,"T",0,3);
	SetRegEx(0X102A9C,"T",0,3);
	SetRegEx(0X102AC4,"T",0,3);
	SetRegEx(0X102B0C,"T",0,3);
	SetRegEx(0X102B34,"T",0,3);
	SetRegEx(0X102B8C,"T",0,3);
	SetRegEx(0X102C50,"T",0,3);
	SetRegEx(0X102C5C,"T",0,3);
	SetRegEx(0X102C60,"T",0,3);
	SetRegEx(0X102CA8,"T",0,3);
	SetRegEx(0X102CAC,"T",0,3);
	SetRegEx(0X102D10,"T",0,3);
	SetRegEx(0X102D30,"T",0,3);
	SetRegEx(0X102D40,"T",0,3);
	SetRegEx(0X102D58,"T",0,3);
	SetRegEx(0X102D84,"T",0,3);
	SetRegEx(0X102DBC,"T",0,3);
	SetRegEx(0X102E44,"T",0,3);
	SetRegEx(0X102E48,"T",0,3);
	SetRegEx(0X102E64,"T",0,3);
	SetRegEx(0X102E94,"T",0,3);
	SetRegEx(0X102ED4,"T",0,3);
	SetRegEx(0X102EEC,"T",0,3);
	SetRegEx(0X102EFC,"T",0,3);
	SetRegEx(0X102F0C,"T",0,3);
	SetRegEx(0X102F1C,"T",0,3);
	SetRegEx(0X102F2C,"T",0,3);
	SetRegEx(0X102F3C,"T",0,3);
	SetRegEx(0X102F4C,"T",0,3);
	SetRegEx(0X102F5C,"T",0,3);
	SetRegEx(0X102F6C,"T",0,3);
	SetRegEx(0X102F7C,"T",0,3);
	SetRegEx(0X102F98,"T",0,3);
	SetRegEx(0X102F9C,"T",0,3);
	SetRegEx(0X102FC8,"T",0,3);
	SetRegEx(0X10302C,"T",0,3);
	SetRegEx(0X10303C,"T",0,3);
	SetRegEx(0X103044,"T",0,3);
	SetRegEx(0X103070,"T",0,3);
	SetRegEx(0X10307C,"T",0,3);
	SetRegEx(0X1030B4,"T",0,3);
	SetRegEx(0X1030F0,"T",0,3);
	SetRegEx(0X103100,"T",0,3);
	SetRegEx(0X103158,"T",0,3);
	SetRegEx(0X1031B0,"T",0,3);
	SetRegEx(0X1031D4,"T",0,3);
	SetRegEx(0X1031E8,"T",0,3);
	SetRegEx(0X103230,"T",0,3);
	SetRegEx(0X103278,"T",0,3);
	SetRegEx(0X1032D0,"T",0,3);
	SetRegEx(0X1032EC,"T",0,3);
	SetRegEx(0X103330,"T",0,3);
	SetRegEx(0X103334,"T",0,3);
	SetRegEx(0X103338,"T",0,3);
	SetRegEx(0X103380,"T",0,3);
	SetRegEx(0X103394,"T",0,3);
	SetRegEx(0X1033A8,"T",0,3);
	SetRegEx(0X1033C8,"T",0,3);
	SetRegEx(0X1033D0,"T",0,3);
	SetRegEx(0X1033DC,"T",0,3);
	SetRegEx(0X1033E4,"T",0,3);
	SetRegEx(0X103440,"T",0,3);
	SetRegEx(0X103454,"T",0,3);
	SetRegEx(0X10347C,"T",0,3);
	SetRegEx(0X1034A0,"T",0,3);
	SetRegEx(0X1034A8,"T",0,3);
	SetRegEx(0X1034D0,"T",0,3);
	SetRegEx(0X103508,"T",0,3);
	SetRegEx(0X103540,"T",0,3);
	SetRegEx(0X103554,"T",0,3);
	SetRegEx(0X10357C,"T",0,3);
	SetRegEx(0X1035AC,"T",0,3);
	SetRegEx(0X1035B4,"T",0,3);
	SetRegEx(0X1035CC,"T",0,3);
	SetRegEx(0X1035D0,"T",0,3);
	SetRegEx(0X1035D4,"T",0,3);
	SetRegEx(0X1035F8,"T",0,3);
	SetRegEx(0X10363C,"T",0,3);
	SetRegEx(0X103674,"T",0,3);
	SetRegEx(0X103678,"T",0,3);
	SetRegEx(0X1036A0,"T",0,3);
	SetRegEx(0X1036C8,"T",0,3);
	SetRegEx(0X1036D0,"T",0,3);
	SetRegEx(0X1036E8,"T",0,3);
	SetRegEx(0X1036F8,"T",0,3);
	SetRegEx(0X103724,"T",0,3);
	SetRegEx(0X10375C,"T",0,3);
	SetRegEx(0X103778,"T",0,3);
	SetRegEx(0X1037A4,"T",0,3);
	SetRegEx(0X103838,"T",0,3);
	SetRegEx(0X10383C,"T",0,3);
	SetRegEx(0X103840,"T",0,3);
	SetRegEx(0X103860,"T",0,3);
	SetRegEx(0X103888,"T",0,3);
	SetRegEx(0X1038B0,"T",0,3);
	SetRegEx(0X1038D4,"T",0,3);
	SetRegEx(0X103914,"T",0,3);
	SetRegEx(0X10399C,"T",0,3);
	SetRegEx(0X1039A8,"T",0,3);
	SetRegEx(0X1039B4,"T",0,3);
	SetRegEx(0X103A0C,"T",0,3);
	SetRegEx(0X103A1C,"T",0,3);
	SetRegEx(0X103A44,"T",0,3);
	SetRegEx(0X103AAC,"T",0,3);
	SetRegEx(0X103AF0,"T",0,3);
	SetRegEx(0X103B0C,"T",0,3);
	SetRegEx(0X103B18,"T",0,3);
	SetRegEx(0X103B20,"T",0,3);
	SetRegEx(0X103B24,"T",0,3);
	SetRegEx(0X103B68,"T",0,3);
	SetRegEx(0X103B90,"T",0,3);
	SetRegEx(0X103BF4,"T",0,3);
	SetRegEx(0X103C28,"T",0,3);
	SetRegEx(0X103CB4,"T",0,3);
	SetRegEx(0X103CC8,"T",0,3);
	SetRegEx(0X103CD4,"T",0,3);
	SetRegEx(0X103CE0,"T",0,3);
	SetRegEx(0X103D1C,"T",0,3);
	SetRegEx(0X103D34,"T",0,3);
	SetRegEx(0X103D7C,"T",0,3);
	SetRegEx(0X103D80,"T",0,3);
	SetRegEx(0X103DB8,"T",0,3);
	SetRegEx(0X103E2C,"T",0,3);
	SetRegEx(0X103E34,"T",0,3);
	SetRegEx(0X103E60,"T",0,3);
	SetRegEx(0X103E68,"T",0,3);
	SetRegEx(0X103E94,"T",0,3);
	SetRegEx(0X103F28,"T",0,3);
	SetRegEx(0X103F2C,"T",0,3);
	SetRegEx(0X103F7C,"T",0,3);
	SetRegEx(0X103F8C,"T",0,3);
	SetRegEx(0X103F9C,"T",0,3);
	SetRegEx(0X103FAC,"T",0,3);
	SetRegEx(0X103FF0,"T",0,3);
	SetRegEx(0X10402C,"T",0,3);
	SetRegEx(0X104044,"T",0,3);
	SetRegEx(0X1040A8,"T",0,3);
	SetRegEx(0X1040F8,"T",0,3);
	SetRegEx(0X104120,"T",0,3);
	SetRegEx(0X1041D8,"T",0,3);
	SetRegEx(0X1041F8,"T",0,3);
	SetRegEx(0X104234,"T",0,3);
	SetRegEx(0X104244,"T",0,3);
	SetRegEx(0X104248,"T",0,3);
	SetRegEx(0X10426C,"T",0,3);
	SetRegEx(0X1042BC,"T",0,3);
	SetRegEx(0X1042D4,"T",0,3);
	SetRegEx(0X1042D8,"T",0,3);
	SetRegEx(0X104360,"T",0,3);
	SetRegEx(0X104364,"T",0,3);
	SetRegEx(0X10437C,"T",0,3);
	SetRegEx(0X1043A0,"T",0,3);
	SetRegEx(0X1043C0,"T",0,3);
	SetRegEx(0X104430,"T",0,3);
	SetRegEx(0X10443C,"T",0,3);
	SetRegEx(0X10446C,"T",0,3);
	SetRegEx(0X1044B8,"T",0,3);
	SetRegEx(0X1044E4,"T",0,3);
	SetRegEx(0X1044FC,"T",0,3);
	SetRegEx(0X104524,"T",0,3);
	SetRegEx(0X104578,"T",0,3);
	SetRegEx(0X1045B8,"T",0,3);
	SetRegEx(0X104614,"T",0,3);
	SetRegEx(0X104624,"T",0,3);
	SetRegEx(0X104638,"T",0,3);
	SetRegEx(0X1046EC,"T",0,3);
	SetRegEx(0X10473C,"T",0,3);
	SetRegEx(0X104754,"T",0,3);
	SetRegEx(0X104784,"T",0,3);
	SetRegEx(0X1047B0,"T",0,3);
	SetRegEx(0X1047C0,"T",0,3);
	SetRegEx(0X1047F0,"T",0,3);
	SetRegEx(0X1048CC,"T",0,3);
	SetRegEx(0X104928,"T",0,3);
	SetRegEx(0X104940,"T",0,3);
	SetRegEx(0X10496C,"T",0,3);
	SetRegEx(0X10497C,"T",0,3);
	SetRegEx(0X1049A8,"T",0,3);
	SetRegEx(0X104A64,"T",0,3);
	SetRegEx(0X104A9C,"T",0,3);
	SetRegEx(0X104AC4,"T",0,3);
	SetRegEx(0X104AE0,"T",0,3);
	SetRegEx(0X104B0C,"T",0,3);
	SetRegEx(0X104B74,"T",0,3);
	SetRegEx(0X104B84,"T",0,3);
	SetRegEx(0X104B88,"T",0,3);
	SetRegEx(0X104B94,"T",0,3);
	SetRegEx(0X104BD0,"T",0,3);
	SetRegEx(0X104BE8,"T",0,3);
	SetRegEx(0X104C38,"T",0,3);
	SetRegEx(0X104C84,"T",0,3);
	SetRegEx(0X104C88,"T",0,3);
	SetRegEx(0X104CF0,"T",0,3);
	SetRegEx(0X104D28,"T",0,3);
	SetRegEx(0X104D4C,"T",0,3);
	SetRegEx(0X104D58,"T",0,3);
	SetRegEx(0X104D60,"T",0,3);
	SetRegEx(0X104D7C,"T",0,3);
	SetRegEx(0X104D8C,"T",0,3);
	SetRegEx(0X104D98,"T",0,3);
	SetRegEx(0X104DB0,"T",0,3);
	SetRegEx(0X104DBC,"T",0,3);
	SetRegEx(0X104DDC,"T",0,3);
	SetRegEx(0X104E04,"T",0,3);
	SetRegEx(0X104E0C,"T",0,3);
	SetRegEx(0X104E58,"T",0,3);
	SetRegEx(0X104E64,"T",0,3);
	SetRegEx(0X104E7C,"T",0,3);
	SetRegEx(0X104EAC,"T",0,3);
	SetRegEx(0X104EB8,"T",0,3);
	SetRegEx(0X104EC0,"T",0,3);
	SetRegEx(0X104ED8,"T",0,3);
	SetRegEx(0X104F04,"T",0,3);
	SetRegEx(0X104F10,"T",0,3);
	SetRegEx(0X104F18,"T",0,3);
	SetRegEx(0X104F34,"T",0,3);
	SetRegEx(0X104FC0,"T",0,3);
	SetRegEx(0X104FEC,"T",0,3);
	SetRegEx(0X104FFC,"T",0,3);
	SetRegEx(0X105020,"T",0,3);
	SetRegEx(0X1050B4,"T",0,3);
	SetRegEx(0X1050F8,"T",0,3);
	SetRegEx(0X105128,"T",0,3);
	SetRegEx(0X10512C,"T",0,3);
	SetRegEx(0X10513C,"T",0,3);
	SetRegEx(0X105168,"T",0,3);
	SetRegEx(0X1051A4,"T",0,3);
	SetRegEx(0X1051D8,"T",0,3);
	SetRegEx(0X1051E8,"T",0,3);
	SetRegEx(0X105200,"T",0,3);
	SetRegEx(0X105218,"T",0,3);
	SetRegEx(0X105290,"T",0,3);
	SetRegEx(0X1052D4,"T",0,3);
	SetRegEx(0X105318,"T",0,3);
	SetRegEx(0X105398,"T",0,3);
	SetRegEx(0X1053CC,"T",0,3);
	SetRegEx(0X105408,"T",0,3);
	SetRegEx(0X10540C,"T",0,3);
	SetRegEx(0X10542C,"T",0,3);
	SetRegEx(0X10543C,"T",0,3);
	SetRegEx(0X105544,"T",0,3);
	SetRegEx(0X105568,"T",0,3);
	SetRegEx(0X105578,"T",0,3);
	SetRegEx(0X10558C,"T",0,3);
	SetRegEx(0X1055A4,"T",0,3);
	SetRegEx(0X1055BC,"T",0,3);
	SetRegEx(0X1055E4,"T",0,3);
	SetRegEx(0X10560C,"T",0,3);
	SetRegEx(0X10561C,"T",0,3);
	SetRegEx(0X10564C,"T",0,3);
	SetRegEx(0X105650,"T",0,3);
	SetRegEx(0X105660,"T",0,3);
	SetRegEx(0X105670,"T",0,3);
	SetRegEx(0X105674,"T",0,3);
	SetRegEx(0X105680,"T",0,3);
	SetRegEx(0X1056B0,"T",0,3);
	SetRegEx(0X1056C0,"T",0,3);
	SetRegEx(0X1056F4,"T",0,3);
	SetRegEx(0X105838,"T",0,3);
	SetRegEx(0X105860,"T",0,3);
	SetRegEx(0X105868,"T",0,3);
	SetRegEx(0X1058C8,"T",0,3);
	SetRegEx(0X10593C,"T",0,3);
	SetRegEx(0X1059B8,"T",0,3);
	SetRegEx(0X1059DC,"T",0,3);
	SetRegEx(0X1059E8,"T",0,3);
	SetRegEx(0X1059F4,"T",0,3);
	SetRegEx(0X105A44,"T",0,3);
	SetRegEx(0X105A80,"T",0,3);
	SetRegEx(0X105AD8,"T",0,3);
	SetRegEx(0X105AE8,"T",0,3);
	SetRegEx(0X105AF8,"T",0,3);
	SetRegEx(0X105B58,"T",0,3);
	SetRegEx(0X105B68,"T",0,3);
	SetRegEx(0X105BB0,"T",0,3);
	SetRegEx(0X105BC8,"T",0,3);
	SetRegEx(0X105C18,"T",0,3);
	SetRegEx(0X105C30,"T",0,3);
	SetRegEx(0X105C80,"T",0,3);
	SetRegEx(0X105C98,"T",0,3);
	SetRegEx(0X105D28,"T",0,3);
	SetRegEx(0X105D7C,"T",0,3);
	SetRegEx(0X105D88,"T",0,3);
	SetRegEx(0X105D9C,"T",0,3);
	SetRegEx(0X105E54,"T",0,3);
	SetRegEx(0X105E5C,"T",0,3);
	SetRegEx(0X105E6C,"T",0,3);
	SetRegEx(0X105F24,"T",0,3);
	SetRegEx(0X105F2C,"T",0,3);
	SetRegEx(0X105F3C,"T",0,3);
	SetRegEx(0X105FFC,"T",0,3);
	SetRegEx(0X106044,"T",0,3);
	SetRegEx(0X106050,"T",0,3);
	SetRegEx(0X106060,"T",0,3);
	SetRegEx(0X106144,"T",0,3);
	SetRegEx(0X10618C,"T",0,3);
	SetRegEx(0X106198,"T",0,3);
	SetRegEx(0X1061A8,"T",0,3);
	SetRegEx(0X106234,"T",0,3);
	SetRegEx(0X106238,"T",0,3);
	SetRegEx(0X10629C,"T",0,3);
	SetRegEx(0X1062A8,"T",0,3);
	SetRegEx(0X1062AC,"T",0,3);
	SetRegEx(0X1062BC,"T",0,3);
	SetRegEx(0X106348,"T",0,3);
	SetRegEx(0X10634C,"T",0,3);
	SetRegEx(0X1063B4,"T",0,3);
	SetRegEx(0X1063C0,"T",0,3);
	SetRegEx(0X1063C4,"T",0,3);
	SetRegEx(0X1063D4,"T",0,3);
	SetRegEx(0X1063F0,"T",0,3);
	SetRegEx(0X106400,"T",0,3);
	SetRegEx(0X10641C,"T",0,3);
	SetRegEx(0X10642C,"T",0,3);
	SetRegEx(0X106448,"T",0,3);
	SetRegEx(0X106464,"T",0,3);
	SetRegEx(0X1064F4,"T",0,3);
	SetRegEx(0X106500,"T",0,3);
	SetRegEx(0X10650C,"T",0,3);
	SetRegEx(0X10651C,"T",0,3);
	SetRegEx(0X106594,"T",0,3);
	SetRegEx(0X1065AC,"T",0,3);
	SetRegEx(0X1065D8,"T",0,3);
	SetRegEx(0X1065E4,"T",0,3);
	SetRegEx(0X106610,"T",0,3);
	SetRegEx(0X10664C,"T",0,3);
	SetRegEx(0X106658,"T",0,3);
	SetRegEx(0X10665C,"T",0,3);
	SetRegEx(0X106674,"T",0,3);
	SetRegEx(0X1066BC,"T",0,3);
	SetRegEx(0X1066D4,"T",0,3);
	SetRegEx(0X106714,"T",0,3);
	SetRegEx(0X106798,"T",0,3);
	SetRegEx(0X1067A4,"T",0,3);
	SetRegEx(0X1067EC,"T",0,3);
	SetRegEx(0X1067F0,"T",0,3);
	SetRegEx(0X106804,"T",0,3);
	SetRegEx(0X106888,"T",0,3);
	SetRegEx(0X106894,"T",0,3);
	SetRegEx(0X1068DC,"T",0,3);
	SetRegEx(0X1068E0,"T",0,3);
	SetRegEx(0X1068F4,"T",0,3);
	SetRegEx(0X106910,"T",0,3);
	SetRegEx(0X106920,"T",0,3);
	SetRegEx(0X106960,"T",0,3);
	SetRegEx(0X106984,"T",0,3);
	SetRegEx(0X106994,"T",0,3);
	SetRegEx(0X106A10,"T",0,3);
	SetRegEx(0X106A20,"T",0,3);
	SetRegEx(0X106A2C,"T",0,3);
	SetRegEx(0X106A4C,"T",0,3);
	SetRegEx(0X106A54,"T",0,3);
	SetRegEx(0X106A74,"T",0,3);
	SetRegEx(0X106A7C,"T",0,3);
	SetRegEx(0X106A84,"T",0,3);
	SetRegEx(0X106A98,"T",0,3);
	SetRegEx(0X106AA0,"T",0,3);
	SetRegEx(0X106AB4,"T",0,3);
	SetRegEx(0X106AC8,"T",0,3);
	SetRegEx(0X106AD0,"T",0,3);
	SetRegEx(0X106AD8,"T",0,3);
	SetRegEx(0X106AF0,"T",0,3);
	SetRegEx(0X106AF8,"T",0,3);
	SetRegEx(0X106B00,"T",0,3);
	SetRegEx(0X106B08,"T",0,3);
	SetRegEx(0X106B10,"T",0,3);
	SetRegEx(0X106B18,"T",0,3);
	SetRegEx(0X106B38,"T",0,3);
	SetRegEx(0X106B40,"T",0,3);
	SetRegEx(0X106B5C,"T",0,3);
	SetRegEx(0X106B78,"T",0,3);
	SetRegEx(0X106B8C,"T",0,3);
	SetRegEx(0X106B94,"T",0,3);
	SetRegEx(0X106BA8,"T",0,3);
	SetRegEx(0X106BBC,"T",0,3);
	SetRegEx(0X106BC4,"T",0,3);
	SetRegEx(0X106BD8,"T",0,3);
	SetRegEx(0X106BE0,"T",0,3);
	SetRegEx(0X106BE8,"T",0,3);
	SetRegEx(0X106BF0,"T",0,3);
	SetRegEx(0X106BF8,"T",0,3);
	SetRegEx(0X106C00,"T",0,3);
	SetRegEx(0X106C14,"T",0,3);
	SetRegEx(0X106C2C,"T",0,3);
	SetRegEx(0X106C34,"T",0,3);
	SetRegEx(0X106C54,"T",0,3);
	SetRegEx(0X106C68,"T",0,3);
	SetRegEx(0X106C70,"T",0,3);
	SetRegEx(0X106C84,"T",0,3);
	SetRegEx(0X106C98,"T",0,3);
	SetRegEx(0X106CA0,"T",0,3);
	SetRegEx(0X106CB4,"T",0,3);
	SetRegEx(0X106CBC,"T",0,3);
	SetRegEx(0X106CC4,"T",0,3);
	SetRegEx(0X106CD0,"T",0,3);
	SetRegEx(0X106CE4,"T",0,3);
	SetRegEx(0X106CE8,"T",0,3);
	SetRegEx(0X106CF0,"T",0,3);
	SetRegEx(0X106D18,"T",0,3);
	SetRegEx(0X106D50,"T",0,3);
	SetRegEx(0X106D70,"T",0,3);
	SetRegEx(0X106DB0,"T",0,3);
	SetRegEx(0X106DB8,"T",0,3);
	SetRegEx(0X106DC4,"T",0,3);
	SetRegEx(0X106DD8,"T",0,3);
	SetRegEx(0X106E7C,"T",0,3);
	SetRegEx(0X106ED4,"T",0,3);
	SetRegEx(0X106EF8,"T",0,3);
	SetRegEx(0X106F10,"T",0,3);
	SetRegEx(0X106F3C,"T",0,3);
	SetRegEx(0X106F8C,"T",0,3);
	SetRegEx(0X106FAC,"T",0,3);
	SetRegEx(0X106FCC,"T",0,3);
	SetRegEx(0X106FFC,"T",0,3);
	SetRegEx(0X107020,"T",0,3);
	SetRegEx(0X10704C,"T",0,3);
	SetRegEx(0X10707C,"T",0,3);
	SetRegEx(0X1070A0,"T",0,3);
	SetRegEx(0X1070C0,"T",0,3);
	SetRegEx(0X1070C4,"T",0,3);
	SetRegEx(0X1070D8,"T",0,3);
	SetRegEx(0X1070EC,"T",0,3);
	SetRegEx(0X107100,"T",0,3);
	SetRegEx(0X107104,"T",0,3);
	SetRegEx(0X10712C,"T",0,3);
	SetRegEx(0X10713C,"T",0,3);
	SetRegEx(0X107160,"T",0,3);
	SetRegEx(0X107168,"T",0,3);
	SetRegEx(0X107188,"T",0,3);
	SetRegEx(0X107200,"T",0,3);
	SetRegEx(0X107220,"T",0,3);
	SetRegEx(0X1072D4,"T",0,3);
	SetRegEx(0X107300,"T",0,3);
	SetRegEx(0X10736C,"T",0,3);
	SetRegEx(0X107380,"T",0,3);
	SetRegEx(0X107390,"T",0,3);
	SetRegEx(0X1073A4,"T",0,3);
	SetRegEx(0X1073C0,"T",0,3);
	SetRegEx(0X1073C8,"T",0,3);
	SetRegEx(0X1073D0,"T",0,3);
	SetRegEx(0X1073F0,"T",0,3);
	SetRegEx(0X1073F4,"T",0,3);
	SetRegEx(0X107400,"T",0,3);
	SetRegEx(0X107420,"T",0,3);
	SetRegEx(0X107440,"T",0,3);
	SetRegEx(0X1074B8,"T",0,3);
	SetRegEx(0X107508,"T",0,3);
	SetRegEx(0X10750C,"T",0,3);
	SetRegEx(0X107530,"T",0,3);
	SetRegEx(0X107544,"T",0,3);
	SetRegEx(0X10755C,"T",0,3);
	SetRegEx(0X107560,"T",0,3);
	SetRegEx(0X107574,"T",0,3);
	SetRegEx(0X10759C,"T",0,3);
	SetRegEx(0X1075B4,"T",0,3);
	SetRegEx(0X10761C,"T",0,3);
	SetRegEx(0X107634,"T",0,3);
	SetRegEx(0X107670,"T",0,3);
	SetRegEx(0X10768C,"T",0,3);
	SetRegEx(0X1076B8,"T",0,3);
	SetRegEx(0X1076E0,"T",0,3);
	SetRegEx(0X1076F8,"T",0,3);
	SetRegEx(0X107710,"T",0,3);
	SetRegEx(0X10771C,"T",0,3);
	SetRegEx(0X107748,"T",0,3);
	SetRegEx(0X107804,"T",0,3);
	SetRegEx(0X107818,"T",0,3);
	SetRegEx(0X107854,"T",0,3);
	SetRegEx(0X10785C,"T",0,3);
	SetRegEx(0X107870,"T",0,3);
	SetRegEx(0X107874,"T",0,3);
	SetRegEx(0X10788C,"T",0,3);
	SetRegEx(0X1078A0,"T",0,3);
	SetRegEx(0X1078AC,"T",0,3);
	SetRegEx(0X1078BC,"T",0,3);
	SetRegEx(0X107904,"T",0,3);
	SetRegEx(0X10790C,"T",0,3);
	SetRegEx(0X107980,"T",0,3);
	SetRegEx(0X1079A8,"T",0,3);
	SetRegEx(0X1079B0,"T",0,3);
	SetRegEx(0X1079C8,"T",0,3);
	SetRegEx(0X1079E4,"T",0,3);
	SetRegEx(0X1079E8,"T",0,3);
	SetRegEx(0X1079F0,"T",0,3);
	SetRegEx(0X1079F8,"T",0,3);
	SetRegEx(0X107A04,"T",0,3);
	SetRegEx(0X107A14,"T",0,3);
	SetRegEx(0X107A24,"T",0,3);
	SetRegEx(0X107A2C,"T",0,3);
	SetRegEx(0X107A30,"T",0,3);
	SetRegEx(0X107A3C,"T",0,3);
	SetRegEx(0X107A40,"T",0,3);
	SetRegEx(0X107A64,"T",0,3);
	SetRegEx(0X107AB0,"T",0,3);
	SetRegEx(0X107B10,"T",0,3);
	SetRegEx(0X107B2C,"T",0,3);
	SetRegEx(0X107B30,"T",0,3);
	SetRegEx(0X107B48,"T",0,3);
	SetRegEx(0X107B60,"T",0,3);
	SetRegEx(0X107B68,"T",0,3);
	SetRegEx(0X107B90,"T",0,3);
	SetRegEx(0X107BD4,"T",0,3);
	SetRegEx(0X107C10,"T",0,3);
	SetRegEx(0X107C44,"T",0,3);
	SetRegEx(0X107C60,"T",0,3);
	SetRegEx(0X107C6C,"T",0,3);
	SetRegEx(0X107C94,"T",0,3);
	SetRegEx(0X107CAC,"T",0,3);
	SetRegEx(0X107CC0,"T",0,3);
	SetRegEx(0X107CDC,"T",0,3);
	SetRegEx(0X107D00,"T",0,3);
	SetRegEx(0X107D18,"T",0,3);
	SetRegEx(0X107D48,"T",0,3);
	SetRegEx(0X107D6C,"T",0,3);
	SetRegEx(0X107D84,"T",0,3);
	SetRegEx(0X107D90,"T",0,3);
	SetRegEx(0X107DB8,"T",0,3);
	SetRegEx(0X107DC0,"T",0,3);
	SetRegEx(0X107E30,"T",0,3);
	SetRegEx(0X107E44,"T",0,3);
	SetRegEx(0X107E5C,"T",0,3);
	SetRegEx(0X107E64,"T",0,3);
	SetRegEx(0X107E74,"T",0,3);
	SetRegEx(0X107E78,"T",0,3);
	SetRegEx(0X107EAC,"T",0,3);
	SetRegEx(0X107ECC,"T",0,3);
	SetRegEx(0X107ED8,"T",0,3);
	SetRegEx(0X107EE0,"T",0,3);
	SetRegEx(0X107F04,"T",0,3);
	SetRegEx(0X107F64,"T",0,3);
	SetRegEx(0X107F94,"T",0,3);
	SetRegEx(0X107F98,"T",0,3);
	SetRegEx(0X107FA0,"T",0,3);
	SetRegEx(0X107FA8,"T",0,3);
	SetRegEx(0X107FB8,"T",0,3);
	SetRegEx(0X107FC0,"T",0,3);
	SetRegEx(0X107FC8,"T",0,3);
	SetRegEx(0X107FD0,"T",0,3);
	SetRegEx(0X107FF4,"T",0,3);
	SetRegEx(0X108000,"T",0,3);
	SetRegEx(0X10800C,"T",0,3);
	SetRegEx(0X108030,"T",0,3);
	SetRegEx(0X10806C,"T",0,3);
	SetRegEx(0X108074,"T",0,3);
	SetRegEx(0X108098,"T",0,3);
	SetRegEx(0X1080A8,"T",0,3);
	SetRegEx(0X1080B4,"T",0,3);
	SetRegEx(0X1080BC,"T",0,3);
	SetRegEx(0X1080C4,"T",0,3);
	SetRegEx(0X1080F8,"T",0,3);
	SetRegEx(0X108118,"T",0,3);
	SetRegEx(0X108124,"T",0,3);
	SetRegEx(0X108130,"T",0,3);
	SetRegEx(0X108148,"T",0,3);
	SetRegEx(0X108188,"T",0,3);
	SetRegEx(0X108198,"T",0,3);
	SetRegEx(0X1081B4,"T",0,3);
	SetRegEx(0X1081DC,"T",0,3);
	SetRegEx(0X108200,"T",0,3);
	SetRegEx(0X10822C,"T",0,3);
	SetRegEx(0X108260,"T",0,3);
	SetRegEx(0X108268,"T",0,3);
	SetRegEx(0X10827C,"T",0,3);
	SetRegEx(0X108288,"T",0,3);
	SetRegEx(0X1082C0,"T",0,3);
	SetRegEx(0X1082D4,"T",0,3);
	SetRegEx(0X1082DC,"T",0,3);
	SetRegEx(0X1082E4,"T",0,3);
	SetRegEx(0X108318,"T",0,3);
	SetRegEx(0X108320,"T",0,3);
	SetRegEx(0X10832C,"T",0,3);
	SetRegEx(0X108338,"T",0,3);
	SetRegEx(0X108344,"T",0,3);
	SetRegEx(0X10836C,"T",0,3);
	SetRegEx(0X108384,"T",0,3);
	SetRegEx(0X1083BC,"T",0,3);
	SetRegEx(0X1083F0,"T",0,3);
	SetRegEx(0X10840C,"T",0,3);
	SetRegEx(0X108424,"T",0,3);
	SetRegEx(0X108448,"T",0,3);
	SetRegEx(0X10845C,"T",0,3);
	SetRegEx(0X108488,"T",0,3);
	SetRegEx(0X1084BC,"T",0,3);
	SetRegEx(0X1084E8,"T",0,3);
	SetRegEx(0X1084FC,"T",0,3);
	SetRegEx(0X108514,"T",0,3);
	SetRegEx(0X10855C,"T",0,3);
	SetRegEx(0X108568,"T",0,3);
	SetRegEx(0X1085A4,"T",0,3);
	SetRegEx(0X1085B0,"T",0,3);
	SetRegEx(0X1085D0,"T",0,3);
	SetRegEx(0X109DE0,"T",0,3);
	SetRegEx(0X10AB50,"T",0X2,3);
	SetRegEx(0X10AE78,"T",0,3);
	SetRegEx(0X10AF84,"T",0,3);
	SetRegEx(0X10B354,"T",0,3);
	SetRegEx(0X10B440,"T",0,3);
}

//------------------------------------------------------------------------
// Information about all patched bytes:

static Patches(void) {
}

//------------------------------------------------------------------------
// Call all byte feature functions:

static Bytes(void) {
	Bytes_0();
	Bytes_1();
        EndTypeUpdating(UTP_STRUCT);
}

// End of file.
